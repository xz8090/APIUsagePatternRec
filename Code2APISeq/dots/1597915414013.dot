graph {
    { rank=same;String.toUpperCase;LinkedHashMap<String,String>.containsKey;LinkedHashMap<String,String>.get;Utils.makeDirectory;File.exists;LinkedHashMap<String,String>.clear;File.listFiles;File.isDirectory;File.getAbsolutePath;File.getName;FileInputStream.<init>;InputStreamReader.<init>;BufferedReader.<init>;BufferedReader.readLine;String.split;LinkedHashMap<String,String>.put;}
String.toUpperCase -- LinkedHashMap<String,String>.containsKey 
String.toUpperCase -- LinkedHashMap<String,String>.get 
LinkedHashMap<String,String>.containsKey -- LinkedHashMap<String,String>.get 
Utils.makeDirectory -- File.exists 
Utils.makeDirectory -- LinkedHashMap<String,String>.clear 
Utils.makeDirectory -- File.listFiles 
Utils.makeDirectory -- File.isDirectory 
Utils.makeDirectory -- File.getAbsolutePath 
Utils.makeDirectory -- File.getName 
Utils.makeDirectory -- FileInputStream.<init> 
Utils.makeDirectory -- InputStreamReader.<init> 
Utils.makeDirectory -- BufferedReader.<init> 
Utils.makeDirectory -- BufferedReader.readLine 
Utils.makeDirectory -- String.split 
Utils.makeDirectory -- LinkedHashMap<String,String>.put 
File.exists -- LinkedHashMap<String,String>.clear 
File.exists -- File.listFiles 
File.exists -- File.isDirectory 
File.exists -- File.getAbsolutePath 
File.exists -- File.getName 
File.exists -- FileInputStream.<init> 
File.exists -- InputStreamReader.<init> 
File.exists -- BufferedReader.<init> 
File.exists -- BufferedReader.readLine 
File.exists -- String.split 
File.exists -- LinkedHashMap<String,String>.put 
LinkedHashMap<String,String>.clear -- File.listFiles 
LinkedHashMap<String,String>.clear -- File.isDirectory 
LinkedHashMap<String,String>.clear -- File.getAbsolutePath 
LinkedHashMap<String,String>.clear -- File.getName 
LinkedHashMap<String,String>.clear -- FileInputStream.<init> 
LinkedHashMap<String,String>.clear -- InputStreamReader.<init> 
LinkedHashMap<String,String>.clear -- BufferedReader.<init> 
LinkedHashMap<String,String>.clear -- BufferedReader.readLine 
LinkedHashMap<String,String>.clear -- String.split 
LinkedHashMap<String,String>.clear -- LinkedHashMap<String,String>.put 
File.listFiles -- File.isDirectory 
File.listFiles -- File.getAbsolutePath 
File.listFiles -- File.getName 
File.listFiles -- FileInputStream.<init> 
File.listFiles -- InputStreamReader.<init> 
File.listFiles -- BufferedReader.<init> 
File.listFiles -- BufferedReader.readLine 
File.listFiles -- String.split 
File.listFiles -- LinkedHashMap<String,String>.put 
File.isDirectory -- File.getAbsolutePath 
File.isDirectory -- File.getName 
File.isDirectory -- FileInputStream.<init> 
File.isDirectory -- InputStreamReader.<init> 
File.isDirectory -- BufferedReader.<init> 
File.isDirectory -- BufferedReader.readLine 
File.isDirectory -- String.split 
File.isDirectory -- LinkedHashMap<String,String>.put 
File.getAbsolutePath -- File.getName 
File.getAbsolutePath -- FileInputStream.<init> 
File.getAbsolutePath -- InputStreamReader.<init> 
File.getAbsolutePath -- BufferedReader.<init> 
File.getAbsolutePath -- BufferedReader.readLine 
File.getAbsolutePath -- String.split 
File.getAbsolutePath -- LinkedHashMap<String,String>.put 
File.getName -- FileInputStream.<init> 
File.getName -- InputStreamReader.<init> 
File.getName -- BufferedReader.<init> 
File.getName -- BufferedReader.readLine 
File.getName -- String.split 
File.getName -- LinkedHashMap<String,String>.put 
FileInputStream.<init> -- InputStreamReader.<init> 
FileInputStream.<init> -- BufferedReader.<init> 
FileInputStream.<init> -- BufferedReader.readLine 
FileInputStream.<init> -- String.split 
FileInputStream.<init> -- LinkedHashMap<String,String>.put 
InputStreamReader.<init> -- BufferedReader.<init> 
InputStreamReader.<init> -- BufferedReader.readLine 
InputStreamReader.<init> -- String.split 
InputStreamReader.<init> -- LinkedHashMap<String,String>.put 
BufferedReader.<init> -- BufferedReader.readLine 
BufferedReader.<init> -- String.split 
BufferedReader.<init> -- LinkedHashMap<String,String>.put 
BufferedReader.readLine -- String.split 
BufferedReader.readLine -- LinkedHashMap<String,String>.put 
String.split -- LinkedHashMap<String,String>.put 
}