graph {
    { rank=same;"String.format";"Props.create";"Optional.cast";"List.add";"List.stream";"CompletableFuture.supplyAsync";"Source.single";"String.split";"Arrays.stream";"Collectors.toList";"Math.abs";"Math.pow";"Math.sqrt";"Math.random";"Math.exp";"ArrayList.size";"ArrayList.get";"ArrayList.set";"ArrayList.isEmpty";"Collections.shuffle";"ArrayList.add";"IntStream.range";"List.get";"Random.nextInt";"Random.nextDouble";"OptionalInt.isPresent";"OptionalInt.getAsInt";"IntStream.range(currentIndex,numberOfCities";"List.forEach";"Arrays.toString";"IntStream.rangeClosed";"Math.round";"List.size";"Population.getIndividual";"ArrayList.<init>";"Population.createNewPopulation";"String.length";"String.substring";"String.contains";"Byte.parseByte";"Population.<init>";"Population.getIndividuals";"Population.getFittest";"Stream.generate";"Engine.builder";"Engine<Double>.stream";"Collector.of";"Engine<Integer>.stream";"Codec<>.decoder";"Collectors.toSet";"Engine<<Integer>,Integer>.stream";"Random.doubles";"Engine<<Integer>,Double>.stream";"Scanner.<init>";"Scanner.nextInt";"Scanner.close";"String.valueOf";"Stack<String>.get";"String.equals";"List<Stack<String>>.stream";"Stack.push";"State.<init>";"Stack.pop";"Optional<State>.orElse";"Stack.<init>";"Stack<String>.push";"List<Stack<String>>.add";"List<Stack<String>>.remove";"Stack<String>.pop";"Stack<String>.size";"State.getState";"State.getHeuristics";"List<State>.add";"List<Stack<String>>.forEach";"List<State>.forEach";"Stack.clone";"Stack.cast";"State.add";"System.arraycopy";"Collections.reverseOrder";"Arrays.sort";"Comparator.comparing";"List<Node>.stream";"Comparator<Node>.reversed";"Node.getChildren";"Node.isMaxPlayer";"List<Node>.forEach";"Node.getScore";"Node.setScore";"Tree.getRoot";"Node.getNoOfBones";"List<Integer>.forEach";"Node.<init>";"Node.addChild";"Tree.<init>";"Tree.setRoot";"List<Node>.add";"String.charAt";"String.isEmpty";"Node.getDistance";"Node.setDistance";"Node.getShortestPath";"LinkedList.<init>";"LinkedList<Node>.add";"Node.setShortestPath";"HashSet.<init>";"Set<Node>.add";"Set<Node>.size";"Set<Node>.remove";"Node.getAdjacentNodes";"Entry<Node,Integer>.getKey";"Entry<Node,Integer>.getValue";"Set<Node>.contains";"Map<Node,Integer>.put";"LinkedList.add";"LinkedList.isEmpty";"LinkedList.remove";"Collections.emptyList";"List.remove";"Arrays.fill";"StringBuilder.<init>";"StringBuilder.append";"StringBuilder.toString";"String.trim";"File.<init>";"BigDecimal.<init>";"HashMap.<init>";"HashMap<Double>.<init>";"Set.add";"HashMap<Double>.put";"Map<HashMap<Double>>.put";"DecimalFormat.<init>";"HashMap<Double>.keySet";"HashMap<Double>.get";"NumberFormat.format";"Map<HashMap<Double>>.keySet";"Map<HashMap<Double>>.get";"HashMap<Integer>.<init>";"Map<Map<Double>>.keySet";"HashMap<Integer>.put";"Map<HashMap<Double>>.entrySet";"Entry<HashMap<Double>>.getValue";"Map<Map<Double>>.get";"Map<Map<Integer>>.get";"HashMap<Integer>.get";"HashMap<Double>.containsKey";"Entry<HashMap<Double>>.getKey";"Map<HashMap<Double>>.values";"HashMap<Double>.entrySet";"Entry<Double>.getKey";"Map<Map<Double>>.containsKey";"Map<Map<Double>>.put";"Map<Map<Integer>>.put";"Entry<Double>.getValue";"Integer.parseInt";"Integer.toString";"Comparator.naturalOrder";"Comparators.isInOrder";"List<String>.get";"List<String>.size";"List.iterator";"Iterator.next";"Iterator.hasNext";"Comparator.compare";"List<String>.iterator";"Iterator<String>.next";"Iterator<String>.hasNext";"String.compareTo";"AssertionError.<init>";"Vertex.setBeingVisited";"Vertex.getAdjacencyList";"Vertex.isBeingVisited";"Graph.hasCycle";"Vertex.isVisited";"Vertex.setVisited";"Vertex.addNeighbour";"Graph.add";"Vertex.add";"Objects.hash";"Object.getClass";"Objects.equals";"Map<List>.entrySet";"Entry<List>.getKey";"Entry<List>.getValue";"Map<String,Double>.keySet";"Map<String,Double>.get";"List.isEmpty";"Map<String,Double>.compute";"Map<String,Double>.put";"Map<List>.compute";"Map<String,Double>.forEach";"Map<List>.equals";"IllegalAccessError.<init>";"List<String>.addAll";"Map<String,Double>.entrySet";"Set<String>.contains";"Entry<String,Double>>.sort";"LinkedHashMap.<init>";"Entry<String,Double>.getValue";"Entry<String,Double>.getKey";"Collectors.joining";"Map<String,Object>.put";"Map<List>.forEach";"Collections.singletonMap";"List<Map<String,String>>.add";"List<Map<String,Object>>.add";"EuclideanDistance.<init>";"String.join";"List<Map<String,Object>>.cast";"List<Map<String,Object>>.stream";"String.cast";"Map<String,Object>.get";"Integer.cast";"Integer.doubleValue";"Collections.emptyMap";"System.lineSeparator";"String.toUpperCase";"String.startsWith";"Comparator.comparing((RomanNumeral";"String.chars";"IntStream.of";"Optional.empty";"Node.next";"Node.hasNext";"Node.data";"Optional.ofNullable";"LinkedList<String>.isEmpty";"LinkedList<String>.size";"LinkedList<String>.get";"Double.doubleToLongBits";"Arrays.equals";"Random.equals";"Arrays.hashCode";"Random.hashCode";"Arrays.asList";"Collections.reverse";"String.toLowerCase";"Map<Character,Integer>.containsKey";"Map<Character,Integer>.get";"Math.max";"Map<Character,Integer>.put";"Set<Character>.contains";"Set<Character>.add";"String.toCharArray";"Character.toString";"Set<String>.add";"Math.min";"StringBuilder.reverse";"Set<String>.addAll";"Result.<init>";"Tree.left";"Tree.right";"Tree.toString";"Integer.numberOfTrailingZeros";"List<Character>.size";"List<List<Character>>.add";"List<Character>.get";"List<Character>.add";"List<Character>.remove";"ArrayList<Integer>.size";"List<Integer>.size";"List<List<Integer>>.add";"List<Integer>.get";"ArrayList<Integer>.add";"ArrayList<Integer>.remove";"DatatypeConverter.parseHexBinary";"DatatypeConverter.printHexBinary";"BigInteger.<init>";"BigInteger.toByteArray";"BigInteger.toString";"Character.digit";"Character.forDigit";"String.<init>";"StringBuffer.<init>";"StringBuffer.append";"StringBuffer.toString";"Queue<Integer>.size";"Queue<Integer>.peek";"Queue<Integer>.isEmpty";"Queue<Integer>.offer";"Queue<Integer>.poll";"PriorityQueue.<init>";"Vertex.includedToString";"Vertex.getEdges";"Entry<Vertex,Edge>>.hasNext";"Entry<Vertex,Edge>>.next";"Entry<Vertex,Edge>.getValue";"Vertex.originalToString";"List<Vertex>.size";"List<Vertex>.get";"Edge.<init>";"Vertex.nextMinimum";"Edge.getWeight";"Pair<Vertex,Edge>.getValue";"Pair<Vertex,Edge>.getKey";"Edge.setIncluded";"Map<Vertex,Edge>.entrySet";"Vertex.getLabel";"Entry<Vertex,Edge>.getKey";"Pair.<init>";"Vertex.containsKey";"Vertex.get";"Vertex.replace";"Vertex.put";"BigInteger.valueOf";"TreeNode.getValue";"TreeNode.getLeftChild";"TreeNode.getRightChild";"LinkedList<TreeNode>.<init>";"LinkedList<TreeNode>.add";"LinkedList<TreeNode>.isEmpty";"LinkedList<TreeNode>.poll";"TreeNode.setLeftChild";"TreeNode.setRightChild";"Deque<Character>.addFirst";"Deque<Character>.peekFirst";"Deque<Character>.isEmpty";"Deque<Character>.removeFirst";"String.replaceAll";"ChiSquareTest.<init>";"ChiSquareTest.chiSquare";"Function<Double,Double>.apply";"StrictMath.abs";"Integer.equals";"List<<Integer>>.sort";"HeapNode.<init>";"Arrays.deepHashCode";"Arrays.deepEquals";"Arrays.deepToString";"Arrays.copyOf";"LinkedList<Integer>.add";"LinkedList<Integer>.size";"LinkedList<Integer>.pop";"LinkedList<Integer>.peek";"LinkedList<Integer>.addAll";"LinkedList<Integer>.isEmpty";"Cell.<init>";"List<Cell>.add";"Cell.getX";"Cell.getY";"StringJoiner.<init>";"StringJoiner.add";"List<Cell>.size";"SecureRandom.nextDouble";"SecureRandom.nextInt";"List<Cell>.get";"List<Integer>.add";"List<List<Integer>>.stream";"Math.min;";"Stream.of(new";"Pair,.mapToInt";"Pair,.mapToInt(move";"Stream.of";"Comparator.comparingInt";"StringBuilder.length";"StringBuilder.insert";"List<Integer>.remove";"PriorityQueue<Integer>.add";"PriorityQueue<Integer>.size";"PriorityQueue<Integer>.poll";"Comparator.reverseOrder";"TreeSet.<init>";"Set<Integer>.addAll";"Set<Integer>.stream";"Collections.binarySearch";"Arrays.binarySearch";"ArrayDeque.<init>";"Queue<Node>.add";"Queue<Node>.isEmpty";"Queue<Node>.remove";"Node.getValue";"Optional.of";"Node.getNeighbors";"Queue<Node>.addAll";"Queue<Node>.removeAll";"Queue<Tree>.add";"Queue<Tree>.isEmpty";"Queue<Tree>.remove";"Tree.getValue";"Tree.getChildren";"Queue<Tree>.addAll";"Node.add";"Collections.unmodifiableSet";"List<Tree>.add";"Collections.unmodifiableList";"Stack<Node>.<init>";"Stack<Node>.push";"Stack<Node>.isEmpty";"Stack<Node>.peek";"Stack<Node>.pop";"BinaryTree.visit";"BinaryTree.traversePostOrder";"BinaryTree.traversePreOrder";"BinaryTree.traverseInOrder";"BinaryTree.findSmallestValue";"BinaryTree.deleteRecursive";"BinaryTree.containsNodeRecursive";"BinaryTree.getSizeRecursive";"BinaryTree.addRecursive";"Map<Integer,List<Integer>>.get";"Graph.topologicalSortRecursive";"LinkedList<Integer>.addFirst";"LinkedList<Integer>.<init>";"Map<Integer,List<Integer>>.size";"Graph.visit";"Graph.dfsRecursive";"Stack<Integer>.<init>";"Stack<Integer>.push";"Stack<Integer>.isEmpty";"Stack<Integer>.pop";"Map<Integer,List<Integer>>.putIfAbsent";"HashMap<Integer,List<Integer>>.<init>";"Node.getState";"State.getBoard";"Node.getParent";"State.togglePlayer";"State.randomPlay";"Node.setParent";"Node.getChildArray";"System.currentTimeMillis";"Node.getRandomChildNode";"Node.getChildWithMaxScore";"State.getEmptyPositions";"List<Position>.size";"List<Position>.get";"State.performMove";"List<Position>.forEach";"State.setPlayerNo";"State.getPlayerNo";"State.getVisitCount";"State.getWinScore";"Collections.max";"Position.<init>";"List<Position>.add";"Node.size";"Node.get";"Region.toString";"Point.toString";"ArrayList<Point>.<init>";"Region.containsPoint";"List<Point>.add";"Region.getX1";"Region.getX2";"Region.getY2";"Region.getY1";"Point.getX";"Point.getY";"Region.<init>";"Node.printTree";"List<Node>.size";"List<Node>.get";"Node.getText";"List<Node>.addAll";"Node.getPosition";"Node.setText";"Node.setPosition";"List<Integer>.addAll";"List<Node>.remove";"List<Integer>.stream";"List<String>.add";"Long.numberOfLeadingZeros";"Integer.numberOfLeadingZeros";"Random.<init>";"BigInteger.probablePrime";"BigInteger.longValue";"IntStream.range(0,n";"IntStream.range(1,n";"List<List<Integer>>.get";"List<Integer>.sort";"List.set";"Math.log10";"Double.parseDouble";"Comparator.comparingDouble";"String.lastIndexOf";"Map<String,String>.entrySet";"RoundEnvironment.getElementsAnnotatedWith";"ExecutableType.cast";"ExecutableType.getParameterTypes";"Collectors.partitioningBy";"Element>.stream";"Map<Boolean,List<Element>>.get";"List<Element>.forEach";"List<Element>.isEmpty";"List<Element>.get";"TypeElement.cast";"TypeElement.getQualifiedName";"Collectors.toMap";"List<Element>.stream";"Character.isUpperCase";"MessageContext.getText";"LocalDateTime.parse";"Map<Integer>.put";"Map<Integer>.size";"Endpoint.publish";"Thread.sleep";"System.exit";"LinkedHashMap<Integer>.<init>";"Map<Integer>.entrySet";"Entry<Integer>.getValue";"Entry<Integer>.getKey";"String.hashCode";"Response.status";"Response.ok";"Response.notModified";"Server.destroy";"Runnable.<init>";"Builder.name";"Thread.currentThread";"Thread.<init>";"Thread.start";"BigDecimal.multiply";"Random.nextFloat";"BigDecimal.valueOf";"BigDecimal.valueOf(min";"List<String>.forEach";"AtomicInteger.incrementAndGet";"LocalDateTime.now";"String.replace";"Filter.by";"Long.cast";"Builder.build";"CharSequence>.cast";"Builder.hasClientIdentifierBuilder";"Builder.getClientIdentifierBuilder";"Builder.<init>";"CharSequence.cast";"Parser.<init>";"Parser.parse";"ByteArrayOutputStream.<init>";"Encoder.flush";"ByteArrayOutputStream.toByteArray";"Character.isLetterOrDigit";"Region<>.entrySet";"Entry<>.getValue";"Builder.setScanningPackageIncludes";"Builder.setJaxrsMapping";"Builder.setJsonpPrettify";"CountDownLatch.countDown";"CountDownLatch.await";"Long.equals";"List.equals";"Long.hashCode";"List.hashCode";"Integer.hashCode";"File.getAbsolutePath";"Label.<init>";"Number.<init>";"ArrayList<String>.<init>";"Map<Integer,List<String>>.put";"Map<Integer,List<String>>.get";"Row.createCell";"Cell.setCellValue";"Cell.setCellStyle";"FileOutputStream.<init>";"FileInputStream.<init>";"Cell.getCellTypeEnum";"Cell.getRichStringCellValue";"Cell.getDateCellValue";"Cell.getNumericCellValue";"Cell.getBooleanCellValue";"Cell.getCellFormula";"Object.<init>";"Row.getCell";"Cell.getCellType";"Cell.getStringCellValue";"Cell.getCachedFormulaResultType";"FileOutputStream.close";"Rectangle.<init>";"Color.<init>";"ClassLoader.getResource";"ClassLoader.getSystemResource";"Paths.get";"Path.getFileName";"Files.newInputStream";"Subject.hasRole";"Subject.isPermitted";"Subject.getPrincipal";"Subject.logout";"Subject.isAuthenticated";"Subject.login";"Map<String,Set<String>>.containsKey";"Map<String,Set<String>>.get";"Map<String,String>.containsKey";"Map<String,String>.get";"Subject.getSession";"Map<String,Integer>.keySet";"Map<String,Integer>.get";"Relationship.<init>";"List<Relationship>.add";"Files.createTempDirectory";"Path.toString";"Relationship.getDst";"Relationship.getType";"Relationship.getSrc";"UUID.toString";"UUID.randomUUID";"Long.toString";"HashMap<String,Integer>.<init>";"Map<String,Integer>.put";"Pattern.split";"Date.<init>";"EventContext.getCount";"Form.recordError";"BitSet.get";"BitSet.<init>";"BitSet.set";"S.write";"S.read";"Boolean.cast";"List.cast";"Boolean>.<init>";"List>.<init>";"Processor.<init>";"ContentHandler.toString";"MediaType.toString";"Product.<init>";"Context.put";"HashMap<String,Object>.<init>";"ClassFileTransformer.<init>";"Instrumentation.addTransformer";"DataSource.getConnection";"Connection.createStatement";"Statement.executeUpdate";"Statement.close";"Connection.close";"Properties.<init>";"Properties.put";"Long.<init>";"Validator.validate";"Set<>.size";"Storage.builder";"CompletableFuture.join";"WorkerThread.<init>";"WorkerThread.run";"ParameterizedType.cast";"ParameterizedType.getActualTypeArguments";"Class.cast";"Properties.load";"Properties.getProperty";"PreparedStatement.setString";"PreparedStatement.executeUpdate";"Statement.executeQuery";"ResultSet.next";"ResultSet.getString";"Endpoint.toString";"Executors.newFixedThreadPool";"HashMap<String,String>.<init>";"Map<String,String>.put";"Map<String>.put";"List<Message>.get";"InputStreamReader.<init>";"BufferedReader.<init>";"OutputStreamWriter.<init>";"OutputStreamWriter.write";"OutputStreamWriter.close";"Region.getRegion";"OutputStream.write";"CompletableFuture.completeExceptionally";"CompletableFuture.complete";"Entry<String,String>.getKey";"Entry<String,String>.getValue";"Map<Integer>.values";"ByteBuffer.capacity";"List<DataBuffer>.size";"DataBuffer.readableByteCount";"ByteBuffer.allocate";"List<DataBuffer>.forEach";"ByteBuffer.put";"ByteBuffer.rewind";"String.toString";"List<String>.toArray";"Map<String>.values";"Map<String>.computeIfPresent";"Request.header";"Response.header";"Request.session";"Response.text";"Request.attribute";"Response.html";"Files.createTempFile";"Files.write";"Response.render";"ReflectionToStringBuilder.toString";"Binder.bind";"Collections.singletonList";"Event.fireAsync";"SimpleDateFormat.<init>";"Calendar.getInstance";"Calendar.getTime";"SimpleDateFormat.format";"String.matches";"Principal.getName";"ScriptEngine.eval";"FileReader.<init>";"Class.newInstance";"Binding.<init>";"File.toURI";"Base64.getDecoder";"ByteArrayInputStream.<init>";"ObjectInputStream.<init>";"ObjectInputStream.readObject";"ObjectInputStream.close";"ObjectOutputStream.<init>";"ObjectOutputStream.writeObject";"ObjectOutputStream.close";"Base64.getEncoder";"JOptionPane.showMessageDialog";"ObjectInput.readUTF";"ObjectInput.readInt";"ObjectOutput.writeUTF";"ObjectOutput.writeInt";"ObjectInput.readObject";"ObjectOutput.writeObject";"InitialContext.lookup";"File.cast";"Hashtable<String,String>.<init>";"Hashtable<String,String>.put";"InitialContext.<init>";"URL.<init>";"URL.openConnection";"HttpURLConnection.cast";"HttpURLConnection.setRequestMethod";"HttpURLConnection.setRequestProperty";"HttpURLConnection.setDoOutput";"String.getBytes";"HttpURLConnection.getResponseCode";"Locale.<init>";"ObjectInputStream.defaultReadObject";"ObjectOutputStream.defaultWriteObject";"InputStream.close";"MessageDigest.getInstance";"MessageDigest.update";"MessageDigest.digest";"UUID.<init>";"InternalError.<init>";"Arrays.copyOfRange";"UUID.nameUUIDFromBytes";"LocalDateTime.of";"Duration.between";"Duration.getSeconds";"Duration.getNano";"Random.nextLong";"Set.copyOf";"List<Integer>.parallelStream";"Random.ints";"Executors.newWorkStealingPool";"URI.create";"URI.<init>";"List<URI>.stream";"CompletableFuture.allOf";"Method.invoke";"Optional<String>.orElseThrow";"Stream.empty";"Collection<String>.stream";"Stream.generate(";"Stream.reduce";"AtomicInteger.get";"AtomicInteger.intValue";"List.subList";"AtomicInteger.set";"AtomicInteger.getAndIncrement";"Spliterator.tryAdvance";"List<String>.stream";"List<String>.parallelStream";"List.parallelStream";"List.addAll";"BiFunction<Integer,Integer,Integer>.apply";"Locale.forLanguageTag";"List<Locale>.forEach";"ResourceBundle.getBundle";"ResourceBundle.getString";"MessageFormat.<init>";"MessageFormat.format";"Stream.iterate";"Stream.iterate(0,i";"LocalDateTime.atZone";"ZonedDateTime.truncatedTo";"LocalDateTime.truncatedTo";"LocalDateTime.toLocalDate";"DateTimeFormatter.ofLocalizedDateTime";"LocalDateTime.format";"DateTimeFormatter.ofPattern";"LocalTime.plus";"LocalDate.atTime";"LocalDate.atStartOfDay";"LocalDate.isLeapYear";"LocalDate.now";"TemporalAdjusters.firstDayOfMonth";"LocalDate.getDayOfWeek";"LocalDate.minus";"LocalDate.plusDays";"LocalDate.parse";"LocalDate.of";"LocalDateTime.ofEpochSecond";"LocalDateTime.with";"LocalTime.withMinute";"LocalTime.getHour";"LocalTime.now";"LocalTime.parse";"LocalTime.of";"OffsetDateTime.of";"Period.between";"LocalDate.plus";"ZoneId.systemDefault";"Calendar.toInstant";"LocalDateTime.ofInstant";"Date.toInstant";"ZonedDateTime.with";"ZonedDateTime.toLocalDateTime";"ZonedDateTime.getZone";"ZonedDateTime.parse";"ZonedDateTime.of";"Temporal.get";"DayOfWeek.of";"Temporal.plus";"LocalDate.ofYearDay";"LocalDate.ofEpochDay";"ThreadLocalRandom.current";"Date.getTime";"LocalDate.toEpochDay";"Instant.getEpochSecond";"Instant.ofEpochSecond";"LocalTime.toSecondOfDay";"LocalTime.ofSecondOfDay";"Collection<Integer>.stream";"Map.of";"Map.ofEntries";"SimpleEntry<String,String>.<init>";"Collection<Date>.stream";"Date.before";"Calendar.setTime";"Calendar.add";"LocalDate.isBefore";"LocalDate.datesUntil";"ServiceLoader.load";"Iterable.iterator";"Throwable.printStackTrace";"ArrayList<String>.isEmpty";"ArrayList<String>.stream";"ArrayList<String>.size";"ArrayList<String>.clear";"ArrayList<String>.add";"Class.getCanonicalName";"Stream.filter";"Stream.collect";"Runnable.run";"AtomicInteger.decrementAndGet";"AtomicInteger.<init>";"Function<>.apply";"SimpleDateFormat.parse";"Calendar.get";"GregorianCalendar.<init>";"GregorianCalendar.isLeapYear";"System.getProperty";"Runtime.version";"Stream.spliterator";"BiConsumer<>.accept";"Predicate.test";"Spliterator.estimateSize";"StreamSupport.stream";"Field.getAnnotation";"Field.getName";"Class.getDeclaredFields";"Field.setAccessible";"Field.isAnnotationPresent";"Field.get";"Class.getDeclaredMethods";"Method.isAnnotationPresent";"Method.setAccessible";"Objects.isNull";"Class.isAnnotationPresent";"Class.getSimpleName";"ByteBuffer.wrap";"Float.intBitsToFloat";"Float.floatToIntBits";"Stream<Integer>.mapToInt";"Stream<Integer>.toArray";"Stream<String>.toArray";"IntFunction<String[]>.<init>";"Arrays.setAll";"Arrays.parallelPrefix";"Plane.getClass";"Plane.cast";"ArrayList<Integer>.toArray";"String.format("Value:";"Array.newInstance";"LinkedHashSet<Integer>.<init>";"Set<Integer>.size";"Set<Integer>.toArray";"LinkedHashSet.<init>";"HashSet<Integer>.<init>";"List<String>.contains";"ArrayList<Integer>.set";"ArrayList<Integer>.get";"List<Object>.toArray";"Arrays.parallelSort";"LinkedList<Character>.size";"LinkedList<Character>.iterator";"Iterator<Character>.next";"Iterator<Character>.remove";"LinkedList<Character>.getFirst";"LinkedList<Character>.push";"LinkedList<Character>.<init>";"Iterator<String>.remove";"List<String>.listIterator";"ListIterator<String>.hasNext";"ListIterator<String>.nextIndex";"ListIterator<String>.next";"ListIterator<String>.set";"ListIterator<String>.add";"ListIterator<String>.hasPrevious";"ListIterator<String>.previousIndex";"ListIterator<String>.previous";"ListIterator<String>.forEachRemaining";"CopyOnWriteArrayList.remove";"CopyOnWriteArrayList.get";"CopyOnWriteArrayList.indexOf";"CopyOnWriteArrayList.contains";"CopyOnWriteArrayList.add";"Map<Long>.containsKey";"Map<Long>.put";"Map<Long>.remove";"Map<Long>.get";"LinkedHashSet.remove";"LinkedHashSet.contains";"LinkedHashSet.add";"LinkedList.getFirst";"LinkedList.iterator";"Iterator.remove";"LinkedList.size";"Collections.synchronizedList";"Stream.concat";"List<Object>.stream";"List<Object>.addAll";"Map<String,String>.merge";"Map<String,String>.forEach";"Map<String,String>.putAll";"Set<Object>.stream";"Set<Object>.addAll";"Predicate<Integer>.<init>";"Collection.stream";"Iterable.spliterator";"Collection.instance";"Collection.cast";"Collection.size";"Collection<String>.add";"Collection<String>.removeIf";"Collection<String>.iterator";"Map<Boolean,List<String>>.get";"Vector.get";"List.indexOf";"Vector.contains";"List.contains";"Vector.add";"Vector.<init>";"Vector<String>.add";"Vector<String>.elements";"Enumeration.hasMoreElements";"Enumeration.nextElement";"Vector<String>.iterator";"Set.contains";"ArrayList<Integer>.<init>";"ConcurrentHashMap.<init>";"ConcurrentHashMap<String,Integer>.put";"ConcurrentHashMap<String,Integer>.keySet";"ConcurrentHashMap<String,Integer>.size";"ArrayList<Integer>.iterator";"Iterator<Integer>.hasNext";"Iterator<Integer>.next";"Iterator<Integer>.remove";"Collections.sort";"ArrayList<String>.cast";"List<String>.remove";"List<String>.removeIf";"ArrayList<ArrayList<Integer>>.add";"ArrayList<ArrayList<Integer>>.get";"ArrayList<ArrayList<Integer>>.size";"ArrayList<ArrayList<String>>.<init>";"ArrayList<ArrayList<ArrayList<String>>>.add";"ArrayList<ArrayList<ArrayList<String>>>.get";"Predicate.<init>";"Object.equals";"ReverseListIterator.<init>";"ReverseListIterator.hasNext";"ReverseListIterator.next";"ListIterator.hasPrevious";"ListIterator.previous";"List<Integer>.removeIf";"List<Integer>.clear";"List<Integer>.iterator";"List<Integer>.indexOf";"List<Integer>.contains";"Predicate<String>.<init>";"Iterable<String>.iterator";"Pattern.compile";"Pattern.matcher";"List<String>.isEmpty";"Collections.frequency";"HashSet<String>.<init>";"HashSet<String>.size";"Collections.copy";"Collectors.counting";"Collectors.groupingBy";"Function.identity";"Map<Long>.merge";"Map<Long>.compute";"Map<Long>.getOrDefault";"IntStream.filter";"Map<>.entrySet";"Entry<>.getKey";"Map<Integer>.keySet";"Map<Integer>.get";"StringBuilder.delete";"HashMap<String>.clone";"HashMap<String>.cast";"HashMap<String>.entrySet";"Set<Entry<String>>.stream";"HashMap<String>.<init>";"HashMap<String>.putAll";"Entry<String>.getValue";"Entry<String>.getKey";"HashMap<String>.put";"Collectors.collectingAndThen";"SimpleImmutableEntry.<init>";"AbstractMap.SimpleImmutableEntry<>,new";"SimpleEntry.<init>";"AbstractMap.SimpleEntry<>,new";"Map<String,Integer>.entrySet";"Entry<String,Integer>>.hasNext";"Entry<String,Integer>>.next";"Entry<String,Integer>.getValue";"Entry<String,Integer>.getKey";"Map<String,Integer>.forEach";"HashMap<Integer,Integer>.<init>";"Map<Integer,Integer>.put";"Optional<Entry<>>.get";"Comparator<Entry<>>.<init>";"Map<String>.forEach";"Map<String>.merge";"Map<String>.entrySet";"Entry>.hasNext";"Entry>.next";"Entry.getBooleanValue";"Entry.getIntKey";"HashMap<String,Product>.compute";"HashMap<String,Product>.containsKey";"HashMap<String,Product>.get";"HashMap<String,Product>.put";"Product.getTags";"HashMap<String,Product>.merge";"HashMap<String,Product>.putIfAbsent";"HashMap<String,Product>.getOrDefault";"HashMap<String,Product>.forEach";"HashMap<String,Product>.entrySet";"Entry<String,Product>.getValue";"Entry<String,Product>.getKey";"Product.getClass";"Product.cast";"Product.addAll";"Map<String>.keySet";"TreeMap.<init>";"TreeMap<String>.putAll";"TreeMap<String>.entrySet";"EnumSet.allOf";"EnumSet.noneOf";"EnumSet.of";"EnumSet.complementOf";"EnumSet.range";"EnumSet.copyOf";"List<Color>.add";"EnumSet<Color>.add";"EnumSet<Color>.contains";"EnumSet<Color>.forEach";"EnumSet<Color>.remove";"Set.stream";"HashSet.clone";"Set.cast";"Set.addAll";"Set.of";"Monitor.enter";"Monitor.leave";"ReentrantLock.lock";"ReentrantLock.unlock";"Semaphore.acquire";"Semaphore.release";"AtomicInteger.compareAndSet";"CyclicBarrier.<init>";"ExecutorService.execute";"CyclicBarrier.await";"ExecutorService.shutdown";"ExecutorService.awaitTermination";"Thread.setName";"System.nanoTime";"Condition.await";"Condition.signalAll";"ReentrantLock.hasQueuedThreads";"ReentrantLock.isLocked";"ReentrantLock.tryLock";"ExecutorService.submit";"StampedLock.tryOptimisticRead";"StampedLock.validate";"StampedLock.readLock";"StampedLock.unlock";"StampedLock.unlockRead";"StampedLock.writeLock";"StampedLock.unlockWrite";"Writer.<init>";"Reader.<init>";"Lock.tryLock";"Lock.lock";"Lock.unlock";"Map<String,String>.remove";"Phaser.getPhase";"Phaser.arriveAndAwaitAdvance";"Phaser.arriveAndDeregister";"Phaser.register";"Reader.start";"Thread.yield";"Context.<init>";"Map<Integer,Context>.put";"ThreadLocal<Context>.set";"ThreadLocal<Context>.get";"TreeNode.getChildren";"ThreadPoolExecutor.cast";"Runnable.cast";"CountDownLatch.<init>";"CountDownLatch.getCount";"CyclicBarrier.isBroken";"CyclicBarrier.getNumberWaiting";"Printer.wait";"Printer.notify";"Printer.printEven";"Printer.printOdd";"Printer.<init>";"ExecutorService.shutdownNow";"PriorityBlockingQueue.size";"PriorityBlockingQueue.add";"PriorityBlockingQueue.<init>";"PriorityBlockingQueue.take";"Semaphore.hasQueuedThreads";"Semaphore.<init>";"TimedSemaphore.getAvailablePermits";"TimedSemaphore.tryAcquire";"TimedSemaphore.<init>";"Semaphore.availablePermits";"Semaphore.tryAcquire";"ForkJoinTask.invokeAll";"ThreadLocal<Integer>.get";"ThreadLocal<Integer>.set";"ThreadLocal.<init>";"CompletableFuture.runAsync";"CompletableFuture<String>.thenComposeAsync";"CompletableFuture<Void>.get";"Callable<Long>.<init>";"Future<Long>.isDone";"Future<Long>.get";"AtomicStampedReference<Integer>.getStamp";"AtomicStampedReference<Integer>.getReference";"Map<String,String>.computeIfAbsent";"Map<String,String>.putIfAbsent";"AtomicReference<Node>.get";"Node.getNext";"AtomicReference<Node>.compareAndSet";"Node.setPrevious";"AtomicReference.<init>";"Task.<init>";"Invoker.<init>";"Executor.execute";"Future<String>.cancel";"Future<String>.get";"Future<String>.isCancelled";"Future<String>.isDone";"Executors.newSingleThreadExecutor";"Executors.newScheduledThreadPool";"Function<ScheduledExecutorService,Void>.apply";"ScheduledExecutorService.shutdown";"Executors.newSingleThreadScheduledExecutor";"Semaphore.getQueueLength";"AtomicBoolean.set";"AtomicBoolean.get";"Thread.interrupt";"Thread.getName";"Future<String>.cast";"Future<Integer>.cast";"Future<Integer>.get";"Collections.synchronizedCollection";"Collection<Integer>.addAll";"BigInteger.multiply";"ScheduledExecutorService.scheduleAtFixedRate";"ScheduledFuture.cancel";"ScheduledExecutorService.schedule";"SecureRandom.<init>";"Object.wait";"Thread.getState";"Thread.join";"Data.wait";"Data.notifyAll";"Data.<init>";"Receiver.<init>";"Data.receive";"Data.send";"Runtime.getRuntime";"LinkedBlockingQueue.<init>";"BlockingQueue<Integer>.take";"BlockingQueue<Integer>.put";"TimeUnit.convert";"BlockingQueue.take";"BlockingQueue.put";"ZonedDateTime.now";"ConcurrentSkipListMap<ZonedDateTime,String>.headMap";"ConcurrentSkipListMap<ZonedDateTime,String>.tailMap";"Event.getContent";"Event.getEventTime";"ConcurrentSkipListMap<ZonedDateTime,String>.put";"ConcurrentHashMap<String,String>.<init>";"ReentrantLock.<init>";"TransferQueue<String>.take";"Consumer.longProcessing";"TransferQueue<String>.tryTransfer";"Graphics.setFont";"Graphics2D.cast";"Graphics2D.setRenderingHint";"BufferedImage.<init>";"BufferedImage.getGraphics";"Graphics2D.drawString";"BufferedImage.getRGB";"System.console";"Console.readLine";"Console.printf";"Console.readPassword";"Scanner.nextLine";"Scanner.next";"Scanner.nextDouble";"BufferedReader.readLine";"Scanner.hasNextInt";"Scanner.hasNext";"Console.writer";"DateFormat.format";"Calendar.set";"Instant.minus";"Instant.plus";"ZonedDateTime.minusHours";"ZonedDateTime.plusHours";"LocalDateTime.minusHours";"LocalDateTime.plusHours";"Date.from";"Duration.ofHours";"LocalDate.getDayOfMonth";"LocalDate.getMonthValue";"LocalDate.getYear";"LocalDateTime.getDayOfMonth";"LocalDateTime.getMonthValue";"LocalDateTime.getYear";"DateTime.<init>";"DateTime.plusDays";"OffsetDateTime.getDayOfMonth";"OffsetDateTime.getMonthValue";"OffsetDateTime.getYear";"ZonedDateTime.getDayOfMonth";"ZonedDateTime.getMonthValue";"ZonedDateTime.getYear";"GregorianCalendar.toZonedDateTime";"GregorianCalendar.compareTo";"XMLGregorianCalendar.toGregorianCalendar";"DatatypeFactory.newInstance";"DatatypeFactory.newXMLGregorianCalendar";"GregorianCalendar.add";"GregorianCalendar.getTime";"GregorianCalendar.getInstance";"GregorianCalendar.cast";"GregorianCalendar.roll";"GregorianCalendar.set";"IntStream.iterate";"IntStream.iterate(0,i";"ArrayList<Date>.<init>";"Calendar.before";"List<Date>.add";"TimeZone.getDefault";"DateTime.forInstant";"DateTime.isSameDayAs";"LocalDate.<init>";"LocalDate.equals";"Instant.equals";"LocalDate.isEqual";"DayOfWeek.getDisplayName";"DayOfWeek.getValue";"Date.valueOf";"Timestamp.<init>";"Timestamp.valueOf";"Time.<init>";"Time.valueOf";"ZoneOffset.ofHoursMinutes";"LocalDate.minusDays";"LocalDate.ofInstant";"Instant.ofEpochMilli";"DateFormat.setLenient";"DateFormat.parse";"ZoneOffset.compareTo";"ZoneId.getAvailableZoneIds";"Set<String>.stream";"String.format("";"TimeZone.getAvailableIDs";"TimeZone.getTimeZone";"TimeZone.getRawOffset";"ZoneOffset.of";"OffsetDateTime.now";"OffsetTime.now";"ZoneId.of";"ZonedDateTime.withZoneSameInstant";"Files.readAllLines";"System.gc";"HttpURLConnection.disconnect";"Handler.<init>";"Thread.setDefaultUncaughtExceptionHandler";"Integer.valueOf";"LocalDate.isAfter";"Objects.requireNonNull";"Throwable.getCause";"BufferedReader.close";"PrintWriter.close";"Socket.close";"PrintWriter.println";"Socket.<init>";"Socket.getOutputStream";"PrintWriter.<init>";"Socket.getInputStream";"ServerSocket.close";"ServerSocket.<init>";"ServerSocket.accept";"FileInputStream.close";"Files.getFileExtension";"StringBuffer.length";"ZipEntry.getName";"File.getCanonicalPath";"ZipInputStream.<init>";"ZipInputStream.getNextEntry";"ZipInputStream.read";"FileOutputStream.write";"ZipInputStream.closeEntry";"ZipInputStream.close";"File.isHidden";"File.isDirectory";"String.endsWith";"ZipEntry.<init>";"ZipOutputStream.putNextEntry";"ZipOutputStream.closeEntry";"File.listFiles";"File.getName";"FileInputStream.read";"ZipOutputStream.write";"ZipOutputStream.<init>";"ZipOutputStream.close";"Files.isDirectory";"SimpleFileVisitor<Path>.<init>";"Files.walkFileTree";"File.exists";"File.mkdir";"File.list";"Files.walk";"Files.copy";"BufferedReader.read";"BufferedReader.lines";"FileReader.close";"Reader.read";"Scanner.hasNextLine";"Scanner.useDelimiter";"ProcessBuilder.<init>";"File.getAbsoluteFile";"ProcessBuilder.directory";"ProcessBuilder.redirectErrorStream";"ProcessBuilder.start";"Process.waitFor";"Process.getInputStream";"FileWriter.<init>";"BufferedWriter.<init>";"BufferedWriter.write";"BufferedWriter.newLine";"BufferedWriter.close";"String.equalsIgnoreCase";"InputStream.read";"ByteArrayOutputStream.write";"ClassLoader.equals";"Class.getName";"Instrumentation.retransformClasses";"Class.forName";"Class.getClassLoader";"Instrumentation.getAllLoadedClasses";"Optional<String>.isPresent";"Optional<String>.get";"Long.valueOf";"Instrumentation.getObjectSize";"Map<String,String>.clear";"ClassLoader.getSystemClassLoader";"Instrumentation.getInitiatedClasses";"Integer.compare";"Consumer.accept";"Consumer<Integer>.accept";"Supplier<String>.get";"Callable<String>.call";"Function<String,String>.apply";"IntStream.sum";"Set<Integer>.equals";"Set<Integer>.hashCode";"Rectangle.getClass";"Rectangle.cast";"Color.equals";"Color.hashCode";"WindowEvent.getNewState";"System.getenv";"PrintStream.<init>";"System.setOut";"Comparator.nullsLast";"Thread.setDaemon";"GraphicsEnvironment.isHeadless";"Math.hypot";"ImmutablePair.of";"List<Double>.stream";"ImmutableTriple.of";"Map<String,Number>.put";"List<Number>.add";"Double.compare";"PropertyDescriptor.getDisplayName";"Boolean.equals";"Byte.equals";"Character.equals";"Double.equals";"Float.equals";"Lookup.getSimpleClassName";"Short.equals";"BigDecimal.intValue";"BigDecimal.toPlainString";"BigDecimal.subtract";"String.indexOf";"Math.addExact";"BigInteger.add";"Set<Set>.add";"List<Boolean>.size";"List<Boolean>.get";"List<List>.add";"HashSet.add";"Set<List<Boolean>>.add";"List<Boolean>.set";"Set<Set<Integer>>.add";"HashSet<Integer>.add";"Set.size";"List<Boolean>.add";"List<List<Boolean>>.add";"Set.isEmpty";"Set.iterator";"Set<Set>.addAll";"Set.equals";"Set.instance";"List.containsAll";"ListIterator<Set>.<init>";"Subset.<init>";"Integer.bitCount";"Iterator.<init>";"Set<Set<Integer>>.size";"Set<Set<Integer>>.toArray";"Point2D.distance";"LongStream.rangeClosed";"Point.<init>";"Point.setLocation";"Math.toRadians";"Math.sin";"Math.tan";"Rectangle.getY";"Rectangle.getX";"Math.ceil";"Array2DRowRealMatrix.<init>";"RealMatrix.multiply";"Stack.isEmpty";"Stack.resize";"Files.lines";"ArrayList<Runnable>.<init>";"List<Runnable>.add";"Book.<init>";"Book.description";"Class.isInstance";"Circle.<init>";"List<Shape>.add";"Shape.name";"BufferedImage.toString";"HashCodeBuilder.<init>";"HashCodeBuilder.append";"DriverManager.getConnection";"Currency.<init>";"EnumMap.<init>";"EnumSet.contains";"Map<String>.get";"Map<Float>.get";"Map<Class,Class>.containsKey";"Map<String,List<String>>.put";"Map<String,List<String>>.entrySet";"Iterator<Entry<String,List<String>>>.hasNext";"Iterator<Entry<String,List<String>>>.next";"Entry<String,List<String>>.getValue";"InnerClass.<init>";"CookieStore.add";"CookieManager.<init>";"CookieManager.getCookieStore";"URI.getHost";"InetAddress.getByName";"HttpCookie.domainMatches";"InetSocketAddress.<init>";"Proxy.<init>";"Socket.connect";"System.setProperty";"DatagramSocket.close";"DatagramPacket.<init>";"DatagramSocket.receive";"DatagramSocket.send";"DatagramSocket.<init>";"DatagramSocket.setBroadcast";"NetworkInterface.getNetworkInterfaces";"Enumeration<NetworkInterface>.hasMoreElements";"Enumeration<NetworkInterface>.nextElement";"NetworkInterface.isUp";"NetworkInterface.isLoopback";"NetworkInterface.getInterfaceAddresses";"List<InetAddress>.addAll";"InetAddress.getBroadcast";"DatagramPacket.getAddress";"DatagramPacket.getPort";"DatagramPacket.getData";"DatagramPacket.getLength";"DatagramSocket.setReuseAddress";"DatagramSocket.bind";"MulticastSocket.receive";"MulticastSocket.send";"MulticastSocket.leaveGroup";"MulticastSocket.close";"MulticastSocket.<init>";"MulticastSocket.setReuseAddress";"MulticastSocket.joinGroup";"URI.getScheme";"URI.getSchemeSpecificPart";"URI.getAuthority";"URI.getPath";"URI.getPort";"URI.getQuery";"URI.getFragment";"URI.toURL";"URL.toString";"HttpURLConnection.instance";"HttpURLConnection.getResponseMessage";"HttpURLConnection.getInputStream";"DataInputStream.<init>";"DataOutputStream.<init>";"DataOutputStream.writeChar";"DataOutputStream.writeInt";"DataOutputStream.write";"BufferedInputStream.<init>";"DataInputStream.readChar";"DataInputStream.readInt";"DataInputStream.read";"State.CONTINUE;";"FileOutputStream.getChannel";"HttpURLConnection.getContentLengthLong";"File.length";"HttpURLConnection.getHeaderFields";"HttpURLConnection.getErrorStream";"URLEncoder.encode";"NetworkInterface.getHardwareAddress";"Authenticator.<init>";"PasswordAuthentication.<init>";"Message.setFrom";"Message.setRecipients";"Message.setSubject";"Message.setContent";"Authenticator.setDefault";"Base64.encodeBase64";"HttpURLConnection.setFollowRedirects";"Files.getAttribute";"FileTime.cast";"Files.readAttributes";"BasicFileAttributes.creationTime";"FileTime.toInstant";"Files.isSameFile";"Charset.defaultCharset";"LineIterator.hasNext";"LineIterator.nextLine";"ByteBuffer.hasRemaining";"ByteBuffer.get";"ByteBuffer.flip";"SocketChannel.write";"ByteBuffer.clear";"SocketChannel.read";"ByteBuffer.array";"SocketChannel.open";"SocketChannel.close";"ServerSocketChannel.accept";"SocketChannel.configureBlocking";"SocketChannel.register";"SelectionKey.channel";"SocketChannel.cast";"Selector.open";"ServerSocketChannel.open";"ServerSocketChannel.bind";"ServerSocketChannel.configureBlocking";"ServerSocketChannel.register";"Selector.select";"Selector.selectedKeys";"Set<SelectionKey>.iterator";"Iterator<SelectionKey>.hasNext";"Iterator<SelectionKey>.next";"SelectionKey.isAcceptable";"SelectionKey.isReadable";"Iterator<SelectionKey>.remove";"Files.isSymbolicLink";"Files.readSymbolicLink";"Files.exists";"Files.delete";"Files.createLink";"Files.createSymbolicLink";"FileSystems.getDefault";"Path.register";"WatchService.take";"WatchKey.pollEvents";"WatchEvent.context";"WatchEvent.kind";"WatchKey.reset";"WatchService.close";"Optional<Integer>.orElse";"Optional.isPresent";"Optional.get";"Object.toString";"Process.destroy";"Process.isAlive";"Process.destroyForcibly";"Process.exitValue";"Process.getErrorStream";"System.getProperties";"File.canExecute";"Optional<String[]>.map";"Toolkit.getDefaultToolkit";"Robot.<init>";"Robot.createScreenCapture";"ImageIO.write";"List<Object>.add";"List<Object>.size";"Map<String,String>.size";"ManagementFactory.getPlatformMBeanServer";"ManagementFactory.newPlatformMXBeanProxy";"ObjectName.<init>";"MBeanServer.registerMBean";"Random.nextBytes";"Charset.forName";"List<Double>.add";"Map<Integer,String>.put";"ManagementFactory.getThreadMXBean";"ThreadMXBean.dumpAllThreads";"ThreadInfo.toString";"Method.getName";"Map<String,Method>.get";"Introspector.getBeanInfo";"Annotation>,Annotation>.cast";"Annotation>,Annotation>.put";"Action.execute";"Callable.call";"Callable<Void>.<init>";"Instant.now";"Pattern.matches";"Matcher.reset";"Matcher.find";"Matcher.start";"Function<Matcher,String>.apply";"Matcher.end";"Matcher.group";"KeyStore.aliases";"Enumeration<String>.hasMoreElements";"Enumeration<String>.nextElement";"KeyStore.deleteEntry";"KeyStore.getCertificate";"KeyStore.setCertificateEntry";"KeyStore.setKeyEntry";"PasswordProtection.<init>";"KeyStore.getEntry";"KeyStore.setEntry";"KeyStore.load";"KeyStore.getDefaultType";"KeyStore.getInstance";"KeyStore.store";"SecureRandom.getInstance";"SecureRandom.nextLong";"SecureRandom.nextFloat";"SecureRandom.nextBoolean";"SecureRandom.ints";"SecureRandom.longs";"SecureRandom.doubles";"SecureRandom.nextBytes";"NameCallback.instance";"NameCallback.cast";"NameCallback.setName";"PasswordCallback.instance";"PasswordCallback.cast";"PasswordCallback.setPassword";"RealmCallback.instance";"RealmCallback.cast";"RealmCallback.setText";"AuthorizeCallback.instance";"AuthorizeCallback.cast";"AuthorizeCallback.setAuthorized";"Service.<init>";"Service.operation";"System.getSecurityManager";"SecurityManager.checkPermission";"InputStream.available";"CRC32.<init>";"CheckedInputStream.<init>";"CheckedInputStream.read";"CheckedInputStream.getChecksum";"Checksum.update";"Checksum.getValue";"Security.addProvider";"Integer.toHexString";"NameCallback.getPrompt";"PasswordCallback.getPrompt";"Subject.getPrincipals";"Subject.doAsPrivileged";"UserPrincipal.<init>";"NameCallback.<init>";"PasswordCallback.<init>";"CallbackHandler.handle";"NameCallback.getName";"PasswordCallback.getPassword";"Matcher.matches";"Base64.getUrlDecoder";"Base64.getUrlEncoder";"Encoder.encodeToString";"Integer.toString((bytes[i]";"File.toPath";"Files.readAllBytes";"Base64.decodeBase64";"KeyFactory.getInstance";"X509EncodedKeySpec.<init>";"KeyFactory.generatePublic";"RSAPublicKey.cast";"PKCS8EncodedKeySpec.<init>";"KeyFactory.generatePrivate";"RSAPrivateKey.cast";"Stream<Integer>.limit";"Stream<String>.skip";"Stream<String>.reduce";"Map<Object,Integer>.values";"Collectors.summingInt";"String>.accept";"Iterator<String>.<init>";"List<String>.containsAll";"Trie.builder";"Trie.parseText";"Collection.forEach";"Collection.toArray";"StringBuffer.reverse";"Stream<Character>.collect";"Map<Character,Long>.values";"Map<Character,Long>.size";"Map<Character,Boolean>.size";"Collectors.toCollection";"ArrayList<String>.removeAll";"String.getChars";"String.format("%1$"";"StringBuilder.substring";"StringBuilder.charAt";"StringBuilder.setLength";"StringBuilder.deleteCharAt";"StringBuffer.setCharAt";"StringBuilder.setCharAt";"Character.isLetter";"StringTokenizer.<init>";"StringTokenizer.countTokens";"IntStream.mapToObj";"Builder.withinRange";"List<Character>.stream";"String.concat";"CharacterData.<init>";"StreamTokenizer.<init>";"StreamTokenizer.wordChars";"StreamTokenizer.ordinaryChar";"StreamTokenizer.commentChar";"StreamTokenizer.eolIsSignificant";"StreamTokenizer.nextToken";"StringTokenizer.hasMoreElements";"StringTokenizer.nextToken";"Collections.list";"Collections.list(new";"BreakIterator.getTitleInstance";"Character.toTitleCase";"Character.isSpaceChar";"Character.toLowerCase";"HashMap<String,Boolean>.put";"Map<String,Boolean>.forEach";"Function<String,Boolean>.apply";"String.regionMatches";"Pattern.quote";"Charset.newDecoder";"CharsetDecoder.onMalformedInput";"Integer.toBinaryString";"Character.isWhitespace";"Integer.compareTo";"StringWriter.<init>";"StringWriter.toString";"StringBuilder.append("Get";"StringTokenizer.hasMoreTokens";"String.intern";"VariableTree.getName";"VariableTree.getType";"MethodTree.getBody";"VariableTree.getModifiers";"MethodTree.getParameters";"List<VariableTree>.isEmpty";"List<VariableTree>.forEach";"JAXBContext.newInstance";"Marshaller.setProperty";"Marshaller.marshal";"Observable.from";"Observable.toBlocking";"Map<String>.containsKey";"Cluster.openBucket";"Map<String,Long>.entrySet";"Entry<String,Long>.getKey";"Entry<String,Long>.getValue";"Map<String,Long>.get";"Map<String,Float>.put";"Map<String,Long>.put";"Engine.<init>";"AVLTree.height";"AVLTree.updateHeight";"AVLTree.getBalance";"AVLTree.rotateLeft";"AVLTree.rotateRight";"AVLTree.delete";"AVLTree.mostLeftChild";"AVLTree.rebalance";"AVLTree.insert";"Graph.getClass";"Vertex.cast";"Vertex.getOuterType";"Graph.getOuterType";"Graph.equals";"Graph.hashCode";"Map<Vertex,List<Vertex>>.keySet";"Map<Vertex,List<Vertex>>.get";"Vertex.<init>";"List<Vertex>.remove";"Map<Vertex,List<Vertex>>.values";"Map<Vertex,List<Vertex>>.remove";"Map<Vertex,List<Vertex>>.putIfAbsent";"HashMap<Vertex,List<Vertex>>.<init>";"LinkedHashSet<String>.<init>";"LinkedList<String>.<init>";"Queue<String>.add";"Queue<String>.isEmpty";"Queue<String>.poll";"Graph.getAdjVertices";"Stack<String>.<init>";"Stack<String>.isEmpty";"PrintStream.print";"Trie.delete";"BigDecimal.hashCode";"BigDecimal.equals";"Product.getPrice";"Product.hashCode";"Product.equals";"BigDecimal.add";"Product.getId";"List<Product>.remove";"List<Product>.forEach";"Map<String,Set>.containsKey";"Map<String,Set>.get";"CopyOnWriteArraySet.<init>";"Map<String,Set>.put";"HashMap<Class,Object>.put";"Map<Class,Object>.get";"Optional.ifPresent";"Evaluation.stats";"Builder.activation";"Builder.nOut";"Builder.kernelSize";"Builder.nIn";"IntStream.range(1,epochsNum";"Builder.seed";"Builder.iterations";"Evaluation.<init>";"Evaluation.eval";"File.getParentFile";"Utils.downloadAndSave";"Utils.extractTarArchive";"Map<Integer,Double>.put";"Builder.stride";"File.getPath";"JFileChooser.<init>";"JFileChooser.showOpenDialog";"JFileChooser.getSelectedFile";"File.mkdirs";"Utils.extractEntry";"ToStringBuilder.reflectionToString";"Result.getValue";"Result.getFacts";"Result.add";"HashSet<String>.contains";"HashSet<String>.add";"Product.getLabel";"Result.healthy";"Environment.jersey";"Environment.healthChecks";"ConcurrentMap<String,Set<URL>>.get";"Set<URL>.size";"ConcurrentMap<String,ConcurrentMap<URL,Set>>.get";"Map<URL,Set>.size";"Map<URL,Set>.entrySet";"Entry<URL,Set>.getKey";"Entry<URL,Set>.getValue";"URL.getServiceInterface";"HashMap<String,List<URL>>.<init>";"Map<String,List<URL>>.get";"ArrayList<URL>.<init>";"Map<String,List<URL>>.put";"List<URL>.add";"Map<String,List<URL>>.values";"URL.getServiceKey";"URL.getParameter";"Map<URL,Set>.get";"Set.remove";"URL.getPort";"URL.getPath";"ConcurrentHashMap<URL,Set>.<init>";"ConcurrentMap<String,ConcurrentMap<URL,Set>>.putIfAbsent";"ConcurrentMap<URL,Set>.get";"ConcurrentMap<URL,Set>.putIfAbsent";"Set<URL>.remove";"ConcurrentMap<String,Set<URL>>.putIfAbsent";"Set<URL>.add";"HashMap<String,String>.get";"Function.<init>";"CompletableFuture.supplyAsync(";"String.replaceFirst";"DataSource.<init>";"DataSource.setUrl";"DataSource.setDriverClassName";"AnnotatedType.getAnnotation";"Map<String,Serializable>.put";"Map<String,List<Double>>.put";"Map<String,List<Double>>.entrySet";"HashMap<String,Serializable>.<init>";"Storage.get";"Blob.writer";"WritableByteChannel.write";"WritableByteChannel.close";"Page<Blob>.getValues";"Blob.getName";"Blob.getContent";"Blob.getBlobId";"Storage.create";"Button.<init>";"Button.addStyleName";"Button.getElement";"HTML.<init>";"Button.addClickHandler";"Button.setEnabled";"Button.setFocus";"Label.setText";"HTML.setText";"HTML.addStyleName";"HTML.setHTML";"HTML.removeStyleName";"Formatter.getFormattedDate";"Class.getMethod";"Observable.fromIterable";"Context.parse";"Map<String,Object>.cast";"Context.render";"Long.parseLong";"List.removeIf";"Optional.orElse";"Server.start";"Server.awaitTermination";"StringBuilder.append("Hello,";"DateFormat.setTimeZone";"BigDecimal.intValueExact";"BigDecimal.toBigIntegerExact";"BigDecimal.doubleValue";"Monitor.newGuard";"Monitor.enterWhen";"Iterable<Integer>.cast";"OptionalLong.of";"OptionalInt.of";"OptionalDouble.of";"PreparedStatement.executeQuery";"PreparedStatement.execute";"Locale.getAvailableLocales";"Locale.lookup";"ForkJoinPool.commonPool";"ForkJoinPool.invoke";"Executors.newCachedThreadPool";"LinkedBlockingQueue<Runnable>.<init>";"ThreadPoolExecutor.<init>";"ThreadPoolExecutor.setMaximumPoolSize";"ScheduledThreadPoolExecutor.cast";"Future<Double>.get";"ScheduledExecutorService.scheduleWithFixedDelay";"Future<Double>.isDone";"Context.lookup";"DataSource.cast";"QName.<init>";"Provider.<init>";"Entry<Long,String>.getValue";"Entry<Long,String>.getKey";"Map<Long,String>.put";"Server.builder";"Class.equals";"ConcurrentMap<String,Book>.values";"List<Book>.addAll";"ConcurrentMap<String,Book>.get";"Book.setId";"ConcurrentMap<String,Book>.put";"Book.setName";"Book.setIsbn";"Book.setAuthor";"Book.setPages";"Book.getId";"List<Book>.forEach";"Book.getIsbn";"Book.getName";"Book.getAuthor";"Book.getPages";"Response.created";"ServerRequest.path";"Security.builder";"List<>.add";"ImageIO.read";"BufferedImage.createGraphics";"Graphics2D.drawImage";"Graphics2D.dispose";"BufferedImage.getScaledInstance";"FontMetrics.getFontRenderContext";"Font.createGlyphVector";"GlyphVector.getOutline";"Shape.getBounds";"BufferedImage.getHeight";"BufferedImage.getWidth";"Font.getSize2D";"Font.getStyle";"Font.deriveFont";"Font.<init>";"AttributedString.<init>";"AttributedString.addAttribute";"Graphics.getFontMetrics";"FontMetrics.stringWidth";"FontMetrics.getAscent";"FontMetrics.getHeight";"AttributedString.getIterator";"Graphics.drawString";"Graphics.setColor";"Image.<init>";"ImageView.<init>";"ImageView.setImage";"Polygon.<init>";"ImageIcon.<init>";"JLabel.<init>";"JPanel.<init>";"JPanel.add";"JFrame.<init>";"Dimension.<init>";"JFrame.setSize";"JFrame.add";"JFrame.setVisible";"BasicStroke.<init>";"Graphics2D.setStroke";"Graphics2D.setColor";"Graphics2D.drawRect";"Optional.map";"Iterator<Entry<String>>.hasNext";"Iterator<Entry<String>>.next";"DateTimeFormatter.print";"DateTimeFormatter.format";"Builder.addColumn";"File.getId";"List<Book>.stream";"Supplier<List<String>>.get";"List<S>.stream";"Map<String,List<String>>.get";"Event.request";"InputStreamReader.read";"OutputStreamWriter.flush";"Map<LocalVariable,Value>.entrySet";"Entry<LocalVariable,Value>.getValue";"Entry<LocalVariable,Value>.getKey";"Product.findById";"Product.delete";"Product.fromMap";"Product.saveIt";"Product.get";"Product.findAll";"BigDecimal.setScale";"Double.toString";"DecimalFormat.format";"Map<Integer,Integer>.containsKey";"Map<Integer,Integer>.get";"Map<Integer,Integer>.containsValue";"DecimalFormat.setRoundingMode";"NumberFormat.getInstance";"NumberFormat.setMaximumFractionDigits";"NumberFormat.setRoundingMode";"BigInteger.isProbablePrime";"Circle.calculateArea";"BigInteger.gcd";"BigInteger.divide";"Map<Integer,Integer>.keySet";"Map<Integer,Integer>.getOrDefault";"Double.isNaN";"NumberFormat.getCurrencyInstance";"NumberFormat.getPercentInstance";"Double.<init>";"Locale.getDefault";"NumberFormat.getNumberInstance";"DecimalFormat.cast";"IntStream.iterate(start,i";"RandomDataGenerator.<init>";"RandomDataGenerator.nextInt";"NormalDistribution.probability";"NormalDistribution.sample";"Supplier.get";"Message.getMessageText";"Message.<init>";"UnicastRemoteObject.exportObject";"LocateRegistry.createRegistry";"Registry.rebind";"ServiceLoader.iterator";"ServiceLoader.forEach";"Builder.url";"Response.body";"Currency.getAvailableCurrencies";"Stream<String>.distinctBy";"Stream<String>.forEach";"Stream.ofAll";"Stream<String>.insert";"Stream<String>.remove";"Stream<Integer>.forEach";"Stream<Integer>.get";"Stream<String>.indexOf";"Set.forEach";"HashMap<String,String>.put";"TextField.getText";"Task<>.<init>";"Task<>.setOnSucceeded";"Task<>.getValue";"TableView.<init>";"TableColumn.<init>";"TableView.getColumns";"Button.setText";"Button.setOnAction";"Button.setStyle";"TextField.setOnKeyPressed";"TextField.textProperty";"PrintWriter.print";"PrintWriter.flush";"Optional<String>.orElse";"Part.write";"Part.getHeader";"Enum.name";"CharSequence.toString";"LocalDate.instance";"LocalDate.cast";"HashCodeBuilder.reflectionHashCode";"EqualsBuilder.reflectionEquals";"ThreadLocal<DateFormat>.get";"XMLGregorianCalendar.toString";"Date.toString";"LocalDateTime.toString";"ClassLoader.getResourceAsStream";"JAXBContext.createUnmarshaller";"Unmarshaller.unmarshal";"Book.cast";"Query.getResultList";"Component.message";"PrintStream.println";"Integer.intValue";"JAXBElement.<init>";"JAXBElement<Integer>.<init>";"StringReader.<init>";"Map<String,Boolean>.put";"Endpoint.create";"Event.fire";"Timer.getInfo";"AtomicBoolean.compareAndSet";"Stack.addAll";"Environment.<init>";"Entity.text";"Builder.header";"Builder.get";"Response.noContent";"URI.toString";"File.createTempFile";"File.delete";"Repository.create";"File.createNewFile";"View.getMembers";"Util.objectFromStream";"Util.objectToStream";"Message.getObject";"Message.getDest";"Message.getSrc";"Optional.orElseThrow";"View.forEach";"View.newMembers";"View.leftMembers";"Environment.acceptsProfiles";"Throwable.getMessage";"Environment.getProperty";"InetAddress.getLocalHost";"Environment.getActiveProfiles";"Collection<String>.contains";"Map<String,Object>.entrySet";"Entry<String,Object>.getValue";"Entry<String,Object>.getKey";"Server.createTcpServer";"Environment.getDefaultProfiles";"Object[].cast";"Objects.hashCode";"String.instance";"Page.getContent";"Level.valueOf";"List<String>.retainAll";"Page.getTotalElements";"Page.getTotalPages";"Page.getNumber";"Page.getSize";"Cluster.connect";"SocketOptions.<init>";"SocketOptions.setConnectTimeoutMillis";"SocketOptions.setReadTimeoutMillis";"Cluster.builder";"Builder.withCredentials";"Builder.withCompression";"Builder.withLoadBalancingPolicy";"Builder.withQueryOptions";"Builder.withReconnectionPolicy";"Builder.withRetryPolicy";"Builder.withSocketOptions";"Builder.withSSL";"Builder.addContactPoints";"Cluster.getConfiguration";"Cluster.init";"Cluster.getMetrics";"ZonedDateTime.ofInstant";"DateTimeFormatter.parse";"ZonedDateTime.from";"ByteBuffer.remaining";"ZonedDateTime.toInstant";"Calendar.clear";"PreparedStatement.bind";"ResultSet.isExhausted";"ResultSet.one";"GZIPInputStream.<init>";"LinkedHashMap<String,Object>.put";"Set<String>.cast";"Set<String>.remove";"LocalDateTime.from";"Context.setVariable";"ZonedDateTime.minusDays";"Set.clear";"Duration.of";"Comment.getClass";"Comment.cast";"Page<Comment>.getContent";"Comment.getId";"Objects.toString";"Duration.ofSeconds";"GZIPOutputStream.<init>";"Map<String>.clear";"Entry<String>>.hasNext";"Entry<String>>.next";"Collection.contains";"Entry<String>>.remove";"Map<String>.remove";"Map<String>.size";"Map<String>.containsValue";"Map<String>.isEmpty";"Boolean.valueOf";"Class.isAssignableFrom";"MultiValueMap<String,String>.add";"MultiValueMap<String,String>.set";"Map<String,Object>.isEmpty";"LinkedHashMap<String,Object>.<init>";"Integer.<init>";"Book.getTitle";"Book.getPublished";"Book.getQuantity";"Book.getPrice";"Book.getClass";"Collections.singleton";"AtomicLong.incrementAndGet";"Integer.instance";"Map<String,Object>.forEach";"BitSet.cardinality";"LongAdder.increment";"SerializationProxy.<init>";"LongAdder.<init>";"LongAdder.sum";"LongAdder.add";"LongAdder.casBase";"LongAdder.getProbe";"Cell.cas";"LongAdder.longAccumulate";"Double.doubleToRawLongBits";"Double.longBitsToDouble";"DoubleBinaryOperator.applyAsDouble";"LongBinaryOperator.applyAsLong";"Iterator<Object>.forEachRemaining";"Iterator<String>.forEachRemaining";"BigDecimal.compareTo";"JFrame.setLocationRelativeTo";"JFrame.setDefaultCloseOperation";"CompletableFuture.cast";"CompletableFuture<String>.get";"CompletableFuture.completedFuture";"CompletableFuture.get";"ScriptEngineManager.<init>";"ScriptEngineManager.getEngineFactories";"ScriptEngineFactory.getEngineName";"ScriptEngineFactory.getEngineVersion";"ScriptEngineFactory.getLanguageName";"ScriptEngineFactory.getNames";"Neuron.<init>";"Stream<String>.collect";"Scheduler.scheduleJob";"Scheduler.start";"Page.getWebURL";"Page.getParseData";"Page.getContentData";"Builder.setPrincipal";"List<Path>.forEach";"List<String>.toString";"Cache<String,Integer>.get";"Cache<String,Integer>.put";"CacheEntry<String,Integer>.getValue";"CacheEntry<String,Integer>.getKey";"Thread.wait";"URLConnection.getInputStream";"DateTimeFormatter.toString";"Fallback.<init>";"Map<Object,Boolean>.putIfAbsent";"Throwable.getClass";"Writer.close";"DefaultFormatterFactory.<init>";"List<CompletableFuture>.add";"List<CompletableFuture>.stream";"Queue<Long>.poll";"Queue<Long>.offer";"ArrayBlockingQueue.<init>";"Connection.subscribe";"Connection.publish";"Connection.request";"Builder.errorCb";"Role.<init>";"Map<String,Role>.put";"List.list";"List<Integer>.map";"Array.array";"Array<Integer>.filter";"List.fromString";"Array<String>.exists";"Array<Integer>.foldLeft";"Option.some";"Option.none";"Option<Integer>.bind";"Path.toUri";"List<<String,String>>.size";"List<<String,String>>.get";"Map<>.put";"Context.newBuilder";"Context.eval";"Context.getBindings";"Value.getMember";"Context.get";"ToStringBuilder.<init>";"ToStringBuilder.append";"EqualsBuilder.<init>";"EqualsBuilder.append";"Map.containsKey";"Map.put";"Map.get";"Map.replace";"Frequency.<init>";"Frequency.addValue";"Frequency.getCount";"Math.multiplyExact";"Math.subtractExact";"Map.values";"Map.keySet";"FileAlterationObserver.<init>";"FileAlterationMonitor.<init>";"FileAlterationListenerAdaptor.<init>";"FileAlterationObserver.addListener";"FileAlterationMonitor.addObserver";"FileAlterationMonitor.start";"Configuration.<init>";"Connection.prepareStatement";"PreparedStatement.setLong";"PreparedStatement.setBoolean";"Duration.<init>";"List.sort";"Values.<init>";"BufferedWriter.flush";"Output.writeString";"Output.write";"Utils.sleep";"Properties.setProperty";"Time.hours";"Collector<<String,Integer>>.collect";"Objects.equal";"Cache<>.addListener";"Cache<String,String>.computeIfAbsent";"Cache<String,String>.get";"Cache<String,String>.put";"Cache<String,Integer>.getAdvancedCache";"StopWatch.<init>";"StopWatch.start";"StopWatch.stop";"StopWatch.getTotalTimeSeconds";"Consumer<String,Integer>.wakeup";"Duration.ofMillis";"Consumer<String,Integer>.poll";"Consumer<String,Integer>.commitSync";"Consumer<Throwable>.accept";"Consumer<String,Integer>.close";"Consumer<String,Integer>.assign";"Consumer<String,Integer>.subscribe";"Complex.<init>";"Inverse.<init>";"Vector.innerProduct";"Vector.scaled";"ArrayList<String[]>.<init>";"ArrayList<Product>.<init>";"Query.execute";"Iterator<Product>.hasNext";"Iterator<Product>.next";"Query.setClass";"Query.executeList";"List<Product>.iterator";"Query.setFilter";"Query.declareParameters";"Query.setParameters";"List<Product>.cast";"Collection.iterator";"Product.setName";"Files.newBufferedReader";"ObjectFactory.<init>";"ObjectFactory.createP";"ObjectFactory.createR";"ObjectFactory.createDrawing";"JAXBElement.cast";"JAXBElement.getValue";"Text.cast";"Text.getValue";"Context.getWmlObjectFactory";"ObjectFactory.createText";"Text.setValue";"ObjectFactory.createRPr";"ObjectFactory.createColor";"Color.setVal";"Output.writeLong";"Output.writeInt";"Reader.close";"List<String[]>.add";"Builder.setDataStoreFactory";"Builder.setApplicationName";"StreamSource.<init>";"Double.hashCode";"Supplier.getClass";"Supplier.cast";"Builder.setInitialIntervalMillis";"Future.get";"Repository.getName";"List<Repository>.stream";"Builder.baseUrl";"Builder.interceptors";"Interceptor.<init>";"Builder.addInterceptor";"Request.newBuilder";"Builder.client";"Callback.<init>";"BlockingQueue.poll";"BlockingQueue.offer";"Request.setHandled";"Request.getParam";"Reader.fromBuf";"Request.version";"Response.apply";"Future.value";"Request.host";"Request.getParams";"Service<Request,Response>.apply";"ASN1InputStream.<init>";"ASN1InputStream.readObject";"ASN1InputStream.close";"ByteArrayInputStream.close";"ArrayList<X509Certificate>.<init>";"List<X509Certificate>.add";"Utils.getPrivateKey";"Utils.getPublicKey";"Signature.getInstance";"Signature.initSign";"Signature.update";"Signature.sign";"Signature.initVerify";"Signature.verify";"Certificate.getPublicKey";"KeyStore.getKey";"PrivateKey.cast";"SubjectPublicKeyInfo.getInstance";"Response.getBody";"Runtime.exec";"Server.stop";"Server.<init>";"Server.setConnectors";"Server.setHandler";"Server.addConnector";"Operation.getOperator";"Operation.getNumber2";"Operation.getNumber1";"Throwable.getLocalizedMessage";"Operation.<init>";"ClientHandler.<init>";"SocketChannel.pipeline";"Context.addServletMappingDecoded";"Context.addFilterDef";"Context.addFilterMap";"AtomicLong.longValue";"AtomicLong.addAndGet";"Member.<init>";"ThreadContext.put";"ThreadContext.clearAll";"ThreadContext.push";"ThreadContext.pop";"System.setErr";"Message.verifyTextOrFile";"Stream.of("file";"List.nil";"List<Document>.add";"Document.<init>";"TextField.<init>";"Document.add";"Path.toFile";"List<Long>.size";"ArrayList<Long>.<init>";"List<Long>.add";"Configuration.addMapper";"Map<String,List<String>>.isEmpty";"Entry<String,List<String>>.getKey";"SocketChannel.newPromise";"SocketChannel.alloc";"Iterator<Entry<Integer>>.hasNext";"Iterator<Entry<Integer>>.next";"Iterator<Entry<Integer>>.remove";"Provider.get";"Messages.get";"Response.seeOther";"Builder.subject";"Builder.issuer";"RSAKey.cast";"RSAKey.toRSAPrivateKey";"Set<String>.containsAll";"Form.<init>";"Form.param";"Entity.entity";"Response.readEntity";"Response.getStatus";"Response.ok("Hello,";"Response.close";"Map<String,List<Event>>.get";"ArrayList<Event>.<init>";"List<Event>.add";"Map<String,List<Event>>.put";"Optional.orElseGet";"Cache.getService";"Cache.addService";"Map<String,List<Row>>.entrySet";"Context.clear";"Context.setColumnMapper";"Context.setTable";"Context.search";"Select.<init>";"Expression.interpret";"Context.setColumn";"Context.setFilter";"Button.press";"Message.getPriority";"Channel.update";"PropertyChangeSupport.firePropertyChange";"PropertyChangeSupport.removePropertyChangeListener";"PropertyChangeSupport.addPropertyChangeListener";"PropertyChangeSupport.<init>";"PropertyChangeEvent.getNewValue";"Package.setState";"Package.<init>";"Package.printStatus";"Package.nextState";"Element.accept";"Visitor.visit";"ElementVisitor.<init>";"XmlElement.<init>";"Document.accept";"Color.cast";"Color.getColor";"Polygon.getType";"Engine.stop";"Engine.start";"Map<Color>.computeIfAbsent";"Position.getClass";"Position.cast";"Expression.getOperator";"Expression.getY";"Expression.getX";"Operation.apply";"Map<String,Operation>.get";"Shape.draw";"Class.asSubclass";"List<Book>.size";"Iterator<Filter>.hasNext";"Iterator<Filter>.next";"Filter.doFilter";"Set<String>.size";"Monitor.<init>";"FileSystem.deleteFile";"Engine.powerOn";"Engine.on";"Document.open";"Document.close";"Image.getInstance";"Font.setStyle";"Font.setSize";"RandomAccessFile.<init>";"Path.toAbsolutePath";"Image.scalePercent";"Stream.of("column";"OutputStream.close";"Product.getQuantity";"Product.isAvailable";"Product.getName";"Product.getDescription";"Product.getRefundPolicy";"LazyList.size";"Role.getString";"Role.set";"HashMap<Long>.<init>";"Map<Long>.size";"Map<Long>.entrySet";"Arrays.equals)";"Optional<Entry<Long>>.isPresent";"Optional<Entry<Long>>.get";"List<Connection>.forEach";"List<Connection>.clear";"List<Connection>.size";"List<Connection>.add";"List<Connection>.remove";"List<Connection>.isEmpty";"Connection.isValid";"PreparedStatement.addBatch";"PreparedStatement.executeBatch";"Connection.commit";"Connection.rollback";"Statement.addBatch";"Statement.executeBatch";"Connection.setAutoCommit";"DatabaseMetaData.supportsResultSetConcurrency";"DatabaseMetaData.supportsFullOuterJoins";"DatabaseMetaData.supportsStoredProcedures";"DatabaseMetaData.supportsSubqueriesInExists";"DatabaseMetaData.supportsTransactions";"DatabaseMetaData.supportsCoreSQLGrammar";"DatabaseMetaData.supportsBatchUpdates";"DatabaseMetaData.supportsColumnAliasing";"DatabaseMetaData.supportsSavepoints";"DatabaseMetaData.supportsUnionAll";"DatabaseMetaData.supportsUnion";"DatabaseMetaData.getUserName";"DatabaseMetaData.getSchemas";"DatabaseMetaData.getDatabaseProductName";"DatabaseMetaData.getDatabaseProductVersion";"DatabaseMetaData.getDriverName";"DatabaseMetaData.getDriverVersion";"DatabaseMetaData.getImportedKeys";"DatabaseMetaData.getPrimaryKeys";"DatabaseMetaData.getColumns";"DatabaseMetaData.getTables";"Connection.getMetaData";"RowSet.isAfterLast";"RowSet.getString";"Pattern.toString";"CachedRowSet.setUsername";"CachedRowSet.setPassword";"CachedRowSet.setUrl";"CachedRowSet.setCommand";"CachedRowSet.execute";"CachedRowSet.addRowSetListener";"CachedRowSet.next";"CachedRowSet.getInt";"CachedRowSet.deleteRow";"WebRowSet.setUsername";"WebRowSet.setPassword";"WebRowSet.setUrl";"WebRowSet.setCommand";"WebRowSet.execute";"WebRowSet.writeXml";"RowSetProvider.newFactory";"RowSetFactory.createFilteredRowSet";"ResultSetMetaData.getColumnCount";"ResultSetMetaData.getColumnLabel";"ResultSet.getInt";"PreparedStatement.setInt";"ResultSet.first";"Set<<Member>>.isEmpty";"HashSet<>.<init>";"Member.getEmail";"Member.getName";"Event<Member>.fire";"Builder.multiThreaded";"Builder.settings";"Builder.index";"Builder.defaultIndex";"Path.<init>";"Configuration.addResource";"Put.<init>";"Put.addImmutable";"Put.addColumn";"Serializable.cast";"PreparedStatement.setNull";"ResultSet.wasNull";"Object.hashCode";"LocalDate.from";"ResultSet.getLong";"ExceptionInInitializerError.<init>";"Set<Role>.add";"Configuration.setProperties";"Configuration.addAnnotatedClass";"Configuration.getProperties";"Configuration.buildSessionFactory";"Query.setParameter";"Query.executeUpdate";"Stream<String>.map";"ArrayList.clear";"Cluster.close";"Builder.withPort";"Cluster.getMetadata";"ArrayList<Book>.<init>";"Row.getUUID";"Row.getString";"List<Book>.add";"List<Book>.get";"Book.getSubject";"Instant.toString";"Select.build";"ResultSet.forEach";"Statement.execute";"UUID.fromString";"List<String>.cast";"List<String[]>.cast";"Query.getSingleResult";"Book.add";"Document.append";"List<String>.equals";"List<String>.hashCode";"Document.getString";"Document.get";"Network.localhostIsIPv6";"Document.of";"Optional<Value>.get";"Value.get";"Builder.option";"HashMap<String,String>.forEach";"HashMap<String,String>.size";"ArrayList<String>.toArray";"StringValue.<init>";"ObjectValue.<init>";"Builder.commitAfterwards";"TimeZone.setDefault";"List<RowMapper>.size";"List<RowMapper>.forEach";"ArrayList.build";"RowMapper<Object>.<init>";"DataSource.instance";"ObjectId.toString";"Query.<init>";"Book.addAll";"Point.hashCode";"DateTime.hashCode";"DateTime.now";"HashMap<String,Object>.put";"Collection.add";"Collection.clear";"DataSource.getClass";"List<Predicate>.add";"List<Predicate>.size";"List<Predicate>.toArray";"Comment.instance";"Sort.by";"List<<>>.add";"Builder.uri";"Iterator<Map<String,Object>>.hasNext";"Iterator<Map<String,Object>>.next";"List<Map<String,Object>>.indexOf";"Message.toString";"Message.getBody";"Configuration.configure";"Query<Double>.getResultList";"Double.cast";"Query<Long>.getResultList";"List<Long>.get";"Product.instance";"ThreadLocal.remove";"ThreadLocal.get";"ThreadLocal.set";"List.toArray";"List<Object[]>.add";"Collections.nCopies";"List<Integer>.toArray";"Request.body";"Request.queryString";"Request.getHeaders";"Util.createResponse";"Map<Integer>.remove";"Map<Integer>.containsKey";"CompletionStage.thenCompose";"Source.tick";"Parser.parsePartialFrom";"Builder.mergeUnknownFields";"Builder.cast";"Builder.mergeFrom";"Parser.parseFrom";"Connection.createChannel";"Channel.queueDeclare";"Channel.basicConsume";"Channel.basicPublish";"Channel.close";"Context.getResponse";"Context.next";"Context.getPathTokens";"Observable.just";"Observable.error";"Observable.<String>error(new";"Observable.compose";"Content.body";"Consumer<String>.accept";"Set<Object>.add";"Optional.fromNullable";"Message.setMessage";"List<Float>.add";"Long.intValue";"List<Float>.get";"List<Float>.size";"Server.dispose";"Response.<init>";"Observable<Integer>.forEach";"Observable.interval";"Observable<String>.subscribe";"Observable<String>.toBlocking";"StringBuilder,.subscribe";"Observable.empty";"Observable.using";"Observable.create";"Observable<Character>.subscribe";"Observer<Integer>.<init>";"Integer>>.add";"Integer>.onSubscribe";"Integer>>.isEmpty";"Integer>>.size";"Integer>>.get";"Observable.publish";"Observable.subscribe";"MouseAdapter.<init>";"JFrame.addMouseListener";"MouseEvent.getX";"JFrame.getListeners";"JFrame.removeMouseListener";"Observable.doOnNext";"JFrame.getContentPane";"JFrame.setPreferredSize";"JFrame.pack";"String>.isUnsubscribed";"String>.onCompleted";"String>.onError";"String>.onNext";"Observable<String>.map";"Comment.valueOf";"List<Comment>.forEach";"Token>.build";"Timer.<init>";"TimerTask.<init>";"Timer.scheduleAtFixedRate";"Map<String,<>>.get";"ResultSet.getBigDecimal";"HashMap<String>.containsKey";"HashMap<String>.remove";"HashMap<String>.get";"HashMap<String>.values";"List<String>.set";"Collection<>.add";"Parameter.getDeclaringExecutable";"Executable.getParameters";"Executable.toGenericString";"Method.instance";"Method.cast";"Constructor.cast";"Optional<A>.map";"Parameter.getType";"Constructor.instance";"JavaVersion.getJavaVersion";"Book.title";"Book.author";"Book.genre";"AtomicLong.<init>";"ServerRequest.body";"AtomicLong.toString";"Wrapper.setAsyncSupported";"AtomicLong.get";"Random.nextLong,randomAlphabetic));";"ServerRequest.queryParam";"ServerRequest.pathVariable";"OperatingSystemMXBean.getAvailableProcessors";"OperatingSystemMXBean.getSystemCpuLoad";"ServerRequest.bodyToMono";"Builder.up";"Builder.down";"Optional<String>.ifPresent";"Iterable.cast";"Iterable.forEach";"List<LinkedHashMap<String,String>>.cast";"LinkedHashMap<String,String>.get";"Objects.nonNull";"LinkedHashMap.cast";"LinkedHashMap.get";"Map<String,Object>.putAll";"MultiValueMap<String,String>.cast";"MultiValueMap<String,String>.entrySet";"Collections.emptySet";"List<Task>.iterator";"Group.setId";"List<Group>.size";"Page.getMaxResults";"Page.getFirstResult";"Group.setName";"Group.setType";"Group.getId";"Task.getId";"List<Task>.stream";"Queue.<init>";"Message.getMessageProperties";"Channel.basicReject";"Channel.basicAck";"Message.cast";"Channel.cast";"BiConsumer<Throwable>.accept";"Period.getYears";"ThreadLocal<SimpleDateFormat>.get";"Resource.exists";"Resource.getFilename";"Book>.size";"Book.toString";"Map<Object,ScheduledFuture>.forEach";"Map<Object,ScheduledFuture>.put";"Line.getDob";"Line.toString";"Line.setAge";"LineReader.<init>";"Line.format";"List<Line>.cast";"List<Line>.add";"ArrayList<Line>.<init>";"FileWriter.close";"Line.getName";"Line.getAge";"Line.<init>";"Number.cast";"Number.doubleValue";"Enum.valueOf";"Builder.withDetail";"Channel.<init>";"Channel.setLink";"Channel.setTitle";"Channel.setDescription";"Channel.setPubDate";"Duration.ofMinutes";"Builder.found";"Builder.didNotFind";"Message.setText";"Message.getFrom";"Message.getText";"LocalDateTime.getHour";"TreeNode.get";"Color.web";"Color.getRed";"Color.getGreen";"Color.getBlue";"Product.setStore";"Optional<Product>.ifPresent";"List<>.get";"Map<Double>.merge";"Map<Double>.get";"Double.valueOf";"Map<Long,Task>.containsKey";"Map<Long,Task>.get";"Map<Long,Task>.values";"Map<String>.computeIfAbsent";"Year.now";"Instant.parse";"Error.<init>";"Set<Product>.stream";"Product.setId";"Set<Product>.add";"Map<Long>.replace";"Map<Long>.values";"Parameter.<init>";"ScriptEngineManager.getEngineByName";"Writer.write";"Service.getUrl";"Service.getToken";"Service.getDescription";"LinkedHashMap.instance";"LinkedHashMap.entrySet";"Optional<String>.map";"Entry.getKey";"Entry.getValue";"Entry>.stream";"Resource.getInputStream";"Map.entrySet";"Collections.unmodifiableCollection";"Consumer<Throwable>.<init>";"Thread.sleep;";"BufferedOutputStream.<init>";"BufferedOutputStream.write";"BufferedOutputStream.close";"AtomicReference.set";"AtomicReference.get";"Info.<init>";"Info.title";"Info.title("Foobar";"Pageable.getPageNumber";"Pageable.getPageSize";"Map<Long,Book>.values";"Map<Long,Book>.size";"Map<Long,Book>.put";"Map<Long,Book>.get";"SimpleDateFormat.setTimeZone";"Map<String,Object>.remove";"URI.toASCIIString";"StringJoiner.length";"StringJoiner.toString";"ArrayList<Cache>.<init>";"Collection<Cache>.add";"ResultSet.getDouble";"Book.setRatings";"Map<String,String>.keySet";"Book.setTitle";"Optional<Long>.map";"Product.getSku";"Product.setSku";"Optional<URI>.map";"List<HttpCookie>.isEmpty";"List<HttpCookie>.get";"Catalog.builder";"Processor.output";"Message.getPayload";"MimeType.<init>";"Function<String>.apply";"ObjectFactory.getObject";"Engine.setType";"Engine.setVolume";"Formatter.format";"ThreadPoolExecutor.allowCoreThreadTimeOut";"Set<String>.isEmpty";"Class.getConstructor";"Constructor.newInstance";"Class.getTypeName";"ParameterizedType.instance";"Type.equals";"Field.getGenericType";"Field.getType";"Field.getDeclaredAnnotation";"Field.set";"Map<String,Runnable>.put";"Map<String,Runnable>.remove";"Map<String,Object>.containsKey";"Tool.<init>";"Expression.getValue";"BiConsumer<Object>.accept";"Map<String,Validator>.entrySet";"Entry<String,Validator>.getValue";"Entry<String,Validator>.getKey";"Book.getAuthors";"File.getText";"File.setText";"FileOutputStream.flush";"Connection.start";"Connection.createSession";"Receiver.sendAck";"Context.close";"Version.<init>";"Message<File>.getPayload";"Object>>.add";"Message.getHeaders";"HashSet<Class>.<init>";"Map.cast";"Set<Role>.removeAll";"Set<Role>.addAll";"HashSet<Role>.<init>";"Role.getClass";"Role.cast";"Environment.getRequiredProperty";"Message.setTo";"Message.setDate";"Message.setId";"Message.getTo";"Message.getDate";"Message.getId";"NameService.getUserName";"Map<String,Map<String,String>>.get";"Set<String>.iterator";"Channel.setItems";"MediaType.<init>";"Context.setVariables";"Optional<String>.orElseGet";"PrintWriter.write";"InetSocketAddress.getPort";"InetSocketAddress.getHostName";"MultiValueMap<String,String>.forEach";"MultiValueMap<String,String>.size";"Set<>.isEmpty";"Set<>.forEach";"Optional<Integer>.isPresent";"Optional<Integer>.get";"PreparedStatement.setDate";"PreparedStatement.close";"Map<Long,Book>.keySet";"Map<Long,Book>.putAll";"Map<Integer,List>.put";"Map<Integer,List>.get";"Map<Integer,List>.values";"ArrayList<MediaType>.<init>";"List<MediaType>.add";"Map<String,LinkedList<String>>.get";"Entry<Long>.getValue";"LinkedHashMap<String,String>.<init>";"Environment.initializeIfEmpty";"Event.getData";"Event.wrap";"Queue.getName";"Server.bookingService";"Deque.isEmpty";"Deque.pop";"Deque<>.push";"Deque<>.pop";"List<>.size";"Integer.parseInt;";"Long.parseLong;";"Object>.equals";"List<Object>.get";"Node.accept";"Deque<String>.peek";"Deque<String>.isEmpty";"Deque<String>.pop";"Deque<Object>.push";"Deque<String>.push";"Output.<init>";"Output.flush";"Builder.create";"Parser.parseDelimitedFrom";"Builder.getUnknownFields";"List<String>.indexOf";"List<ArrayList<Integer>>.add";"List<ArrayList<Integer>>.size";"List<ArrayList<Integer>>.get";"ArrayList<ArrayList<Integer>>.<init>";"ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.get";"ConcurrentHashMap<Integer,Integer>.<init>";"ConcurrentHashMap<Integer,Integer>.get";"ConcurrentHashMap<Integer,Integer>.put";"ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.put";"ConcurrentMap<Integer,Integer>.get";"ConcurrentMap<Integer,Integer>.put";"ConcurrentMap<Integer,Integer>.keySet";"ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.keySet";"ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.entrySet";"Entry<String,ConcurrentHashMap<Integer,Integer>>.getKey";"Entry<String,ConcurrentHashMap<Integer,Integer>>.getValue";"ConcurrentHashMap<String,ConcurrentHashMap<Integer,Integer>>.<init>";"MultiValueMap<String,Object>.add";"ByteArrayOutputStream.size";"ByteArrayOutputStream.writeTo";"Tokens.getIdToken";"Path.normalize";"Collection<String>.addAll";"Collection<String>.toArray";"Set.hashCode";"Long.longValue";"Role.equals";"Role.getName";"Role.getPrivileges";"Role.setPrivileges";"ConcurrentMap<String>.size";"ConcurrentMap<String>.remove";"ConcurrentMap<String>.computeIfAbsent";"List<Class>.size";"List<Class>.get";"Callable<Boolean>.<init>";"Server.createWebServer";"Role.getRole";"Message.getName";"Connection.getDisplayName";"State.getId";"DateFormat.getDateTimeInstance";"MultiValueMap.add";"MultiValueMap<String,String>.putAll";"MultiValueMap<String,String>.isEmpty";"MultiValueMap<String,String>.values";"List<MediaType>.size";"List<MediaType>.toArray";"MediaType.parseMediaType";"MediaType.parseMediaTypes";"MediaType.getSubtype";"Collection.isEmpty";"Date.instance";"Date.cast";"MultiValueMap<String,String>.containsKey";"MultiValueMap<String,String>.remove";"Collections.unmodifiableMap";"BigDecimal.longValue";"Function<TemporalAccessor>.apply";"BiFunction<ZoneId>.apply";"BiFunction<ZoneId>.<init>";"OffsetDateTime.toLocalDateTime";"ZoneId.getRules";"OffsetDateTime.withOffsetSameInstant";"OffsetDateTime.ofInstant";"OffsetDateTime.from";"Instant.from";"Tag.toIndentedString";"Tag.getClass";"Tag.cast";"ArrayList<Tag>.<init>";"Page<Book>.getTotalPages";"List<Book>.subList";"List<Book>.isEmpty";"Float.valueOf";"Detail.getId";"Detail.<init>";"List<Detail>.add";"Thread.getAllStackTraces";"String.format("%-20s";"Container.uses";"Container.addComponent";"Component.uses";"Set<View>.addAll";"Set<View>.stream";"Graph.close";"Graph.<init>";"Graph.opBuilder";"Operation.output";"String.compareToIgnoreCase";"LocalDate.plusMonths";"Location.<init>";"Location.getMaximumTemparature";"Response.isValid";"Response.setData";"Callback<Response>.<init>";"Service.doAction";"Book.getBookId";"Book.getNumberOfPages";"Files.createDirectories";"Files.move";"Path.toRealPath";"Files.deleteIfExists";"Path.resolve";"Files.createFile";"Actions.<init>";"Actions.moveToElement";"Map<String,Role>.get";"Attr.instance";"Attr.cast";"Attr.getName";"Message.creator";"Message.creator(new";"Message.reader";"Message.getStatus";"Message.getSid";"Button.setVisible";"Binder.setBean";"TextField.focus";"Binder.bindInstanceFields";"Button.addClickListener";"GridLayout.<init>";"GridLayout.setSpacing";"GridLayout.setMargin";"Label.setId";"Label.setValue";"Label.setCaption";"GridLayout.addComponent";"Link.<init>";"Link.setId";"Link.setTargetName";"TextField.setId";"TextField.setCaption";"TextField.setValue";"TextField.setIcon";"TextArea.<init>";"TextArea.setCaption";"TextArea.setId";"TextArea.setValue";"Panel.<init>";"Panel.setContent";"Button.setId";"Button.setDescription";"Button.setIcon";"Grid.<init>";"Grid<Row>.setColumns";"Row.<init>";"List<Row>.add";"Grid<Row>.setItems";"Panel.setSizeUndefined";"Binder.<init>";"Binder.readBean";"TextField.setWidth";"Binder.forField";"Binder.validate";"Grid.setItems";"Grid.setHeight";"Grid.setColumns";"Grid.getColumnByKey";"TextField.setPlaceholder";"TextField.setValueChangeMode";"TextField.addValueChangeListener";"Grid.asSingleSelect";"TextField.getValue";"Stream.continually";"Future<Void>.complete";"Future<Void>.fail";"Type.<init>";"Result.include";"Result.redirectTo";"Result.use";"Validator.hasErrors";"Validator.getErrors";"Validator.onErrorRedirectTo";"SocketHandler.<init>";"SocketHandler,.setAllowedOrigins";"ArrayList<String>.get";"Label.setOutputMarkupId";"SAXParserFactory.newInstance";"SAXParserFactory.newSAXParser";"SAXParser.parse";"XPath.selectNodes";"Element.cast";"Element.addAttribute";"TransformerFactory.newInstance";"TransformerFactory.setFeature";"TransformerFactory.newTransformer";"Transformer.setOutputProperty";"StreamResult.<init>";"Transformer.transform";"Writer.toString";"XPathFactory.newInstance";"XPath.evaluate";"NodeList.cast";"NodeList.getLength";"NodeList.item";"Element.setAttribute";"DOMSource.<init>";"DocumentBuilderFactory.newInstance";"DocumentBuilderFactory.setFeature";"DocumentBuilderFactory.newDocumentBuilder";"Match.xpath";"Match.toString";"DocumentBuilder.parse";"Node.getChildNodes";"Node.getNodeType";"Node.getNodeValue";"Node.removeChild";"Node.setNodeValue";"DocumentBuilderFactory.setNamespaceAware";"NamespaceContext.<init>";"XPath.setNamespaceContext";"XPath.compile";"Node.cast";"Document.addElement";"Element.addElement";"OutputFormat.createPrettyPrint";"Document.selectNodes";"Element.elementIterator";"Iterator<Element>.hasNext";"Iterator<Element>.next";"Element.getText";"Element.setText";"Document.getRootElement";"JAXBContext.createMarshaller";"Document.cast";"XPathFactory.instance";"XPathFactory.compile";"XPathExpression<Element>.evaluate";"Element.getChildren";"XMLInputFactory.newInstance";"XMLInputFactory.createXMLEventReader";"XMLEventReader.hasNext";"XMLEventReader.nextEvent";"XMLEvent.isStartElement";"XMLEvent.asStartElement";"StartElement.getName";"StartElement.getAttributeByName";"XMLEvent.asCharacters";"XMLEvent.isEndElement";"XMLEvent.asEndElement";"EndElement.getName";"XMLEvent.getEventType";"Iterator<Attribute>.hasNext";"Iterator<Attribute>.next";"Attribute.getName";"Attribute.getValue";"Configuration.setDirectoryForTemplateLoading";"Configuration.setDefaultEncoding";"Configuration.setTemplateExceptionHandler";"Configuration.setWrapUncheckedExceptions";"Configuration.setFallbackOnNullLoopVariable";"Configuration.getTemplate";"Template.process";"Document.createElement";"Element.setTextContent";"Element.appendChild";"Element.getElementsByTagName";"TransformerFactory.setAttribute";"Document.getDocumentElement";"Document.appendChild";"XMLStreamReader.hasNext";"XMLStreamReader.next";"XMLStreamReader.isStartElement";"XMLStreamReader.getLocalName";"XMLStreamReader.getElementText";"XMLOutputFactory.newInstance";"XMLStreamWriter.writeDTD";"XMLStreamWriter.writeCharacters";"XMLStreamWriter.writeStartElement";"XMLStreamWriter.writeAttribute";"XMLStreamWriter.writeEndElement";"XMLStreamWriter.writeEndDocument";"XMLStreamWriter.flush";"XMLInputFactory.setProperty";"XMLInputFactory.createXMLStreamReader";"XMLStreamReader.close";"GregorianCalendar.setTime";}
"String.format" -- "List.add" 
"String.format" -- "Arrays.stream" 
"String.format" -- "Collectors.toList" 
"String.format" -- "Math.abs" 
"String.format" -- "IntStream.range" 
"String.format" -- "List.get" 
"String.format" -- "Random.nextInt" 
"String.format" -- "Random.nextDouble" 
"String.format" -- "Math.round" 
"String.format" -- "List.size" 
"String.format" -- "ArrayList.<init>" 
"String.format" -- "Collectors.toSet" 
"String.format" -- "Scanner.<init>" 
"String.format" -- "Scanner.close" 
"String.format" -- "String.valueOf" 
"String.format" -- "String.charAt" 
"String.format" -- "StringBuilder.<init>" 
"String.format" -- "StringBuilder.append" 
"String.format" -- "StringBuilder.toString" 
"String.format" -- "String.trim" 
"String.format" -- "File.<init>" 
"String.format" -- "HashMap.<init>" 
"String.format" -- "Integer.parseInt" 
"String.format" -- "Integer.toString" 
"String.format" -- "Object.getClass" 
"String.format" -- "LinkedHashMap.<init>" 
"String.format" -- "Collectors.joining" 
"String.format" -- "Map<String,Object>.put" 
"String.format" -- "String.join" 
"String.format" -- "String.cast" 
"String.format" -- "Optional.ofNullable" 
"String.format" -- "Arrays.asList" 
"String.format" -- "Tree.toString" 
"String.format" -- "List<Integer>.size" 
"String.format" -- "BigInteger.<init>" 
"String.format" -- "StringBuffer.<init>" 
"String.format" -- "StringBuffer.append" 
"String.format" -- "StringBuffer.toString" 
"String.format" -- "List<Node>.size" 
"String.format" -- "List<Node>.get" 
"String.format" -- "List<String>.add" 
"String.format" -- "Random.<init>" 
"String.format" -- "Character.isUpperCase" 
"String.format" -- "Response.status" 
"String.format" -- "Thread.<init>" 
"String.format" -- "AtomicInteger.incrementAndGet" 
"String.format" -- "LocalDateTime.now" 
"String.format" -- "Builder.build" 
"String.format" -- "Builder.<init>" 
"String.format" -- "Map<String,String>.get" 
"String.format" -- "UUID.randomUUID" 
"String.format" -- "Long.toString" 
"String.format" -- "Connection.createStatement" 
"String.format" -- "Validator.validate" 
"String.format" -- "ResultSet.next" 
"String.format" -- "ResultSet.getString" 
"String.format" -- "HashMap<String,String>.<init>" 
"String.format" -- "Map<String,String>.put" 
"String.format" -- "Map<String>.put" 
"String.format" -- "List<Message>.get" 
"String.format" -- "Calendar.getInstance" 
"String.format" -- "URL.<init>" 
"String.format" -- "URL.openConnection" 
"String.format" -- "HttpURLConnection.cast" 
"String.format" -- "HttpURLConnection.setRequestMethod" 
"String.format" -- "String.getBytes" 
"String.format" -- "MessageDigest.getInstance" 
"String.format" -- "MessageDigest.digest" 
"String.format" -- "List.subList" 
"String.format" -- "LocalDate.now" 
"String.format" -- "String.format("Value:" 
"String.format" -- "Map<String,String>.forEach" 
"String.format" -- "Collections.sort" 
"String.format" -- "Pattern.matcher" 
"String.format" -- "Entry>.hasNext" 
"String.format" -- "Entry>.next" 
"String.format" -- "Entry.getBooleanValue" 
"String.format" -- "Entry.getIntKey" 
"String.format" -- "Runtime.getRuntime" 
"String.format" -- "Scanner.nextLine" 
"String.format" -- "Instant.ofEpochMilli" 
"String.format" -- "ZoneId.getAvailableZoneIds" 
"String.format" -- "Set<String>.stream" 
"String.format" -- "String.format("" 
"String.format" -- "TimeZone.getAvailableIDs" 
"String.format" -- "TimeZone.getTimeZone" 
"String.format" -- "TimeZone.getRawOffset" 
"String.format" -- "Scanner.hasNextLine" 
"String.format" -- "Class.forName" 
"String.format" -- "Book.<init>" 
"String.format" -- "Entry<String,List<String>>.getValue" 
"String.format" -- "NetworkInterface.getNetworkInterfaces" 
"String.format" -- "Enumeration<NetworkInterface>.hasMoreElements" 
"String.format" -- "Enumeration<NetworkInterface>.nextElement" 
"String.format" -- "URLEncoder.encode" 
"String.format" -- "NetworkInterface.getHardwareAddress" 
"String.format" -- "FileSystems.getDefault" 
"String.format" -- "Map<String,String>.size" 
"String.format" -- "Matcher.matches" 
"String.format" -- "String.format("%1$"" 
"String.format" -- "StringWriter.<init>" 
"String.format" -- "VariableTree.getName" 
"String.format" -- "VariableTree.getType" 
"String.format" -- "Long.parseLong" 
"String.format" -- "Context.lookup" 
"String.format" -- "Entry<Long,String>.getValue" 
"String.format" -- "Entry<Long,String>.getKey" 
"String.format" -- "Message.<init>" 
"String.format" -- "Currency.getAvailableCurrencies" 
"String.format" -- "ZonedDateTime.ofInstant" 
"String.format" -- "DateTimeFormatter.parse" 
"String.format" -- "ZonedDateTime.from" 
"String.format" -- "Entry<String,List<String>>.getKey" 
"String.format" -- "Class.asSubclass" 
"String.format" -- "Connection.commit" 
"String.format" -- "Connection.rollback" 
"String.format" -- "Statement.addBatch" 
"String.format" -- "Statement.executeBatch" 
"String.format" -- "DatabaseMetaData.getUserName" 
"String.format" -- "DatabaseMetaData.getSchemas" 
"String.format" -- "DatabaseMetaData.getDatabaseProductName" 
"String.format" -- "DatabaseMetaData.getDatabaseProductVersion" 
"String.format" -- "DatabaseMetaData.getDriverName" 
"String.format" -- "DatabaseMetaData.getDriverVersion" 
"String.format" -- "DatabaseMetaData.getImportedKeys" 
"String.format" -- "DatabaseMetaData.getPrimaryKeys" 
"String.format" -- "DatabaseMetaData.getColumns" 
"String.format" -- "RowSet.isAfterLast" 
"String.format" -- "RowSet.getString" 
"String.format" -- "Pattern.toString" 
"String.format" -- "Builder.settings" 
"String.format" -- "Builder.index" 
"String.format" -- "Builder.defaultIndex" 
"String.format" -- "Stream<String>.map" 
"String.format" -- "RowMapper<Object>.<init>" 
"String.format" -- "DateTime.now" 
"String.format" -- "Collections.nCopies" 
"String.format" -- "List<Integer>.toArray" 
"String.format" -- "Message.setMessage" 
"String.format" -- "Parameter.getDeclaringExecutable" 
"String.format" -- "Executable.getParameters" 
"String.format" -- "Executable.toGenericString" 
"String.format" -- "ServerRequest.bodyToMono" 
"String.format" -- "MultiValueMap<String,String>.entrySet" 
"String.format" -- "LocalDateTime.getHour" 
"String.format" -- "Color.getRed" 
"String.format" -- "Color.getGreen" 
"String.format" -- "Color.getBlue" 
"String.format" -- "InetSocketAddress.getPort" 
"String.format" -- "InetSocketAddress.getHostName" 
"String.format" -- "MultiValueMap<String,String>.forEach" 
"String.format" -- "MultiValueMap<String,String>.size" 
"String.format" -- "State.getId" 
"String.format" -- "Thread.getAllStackTraces" 
"String.format" -- "String.format("%-20s" 
"String.format" -- "XPath.selectNodes" 
"String.format" -- "Element.cast" 
"String.format" -- "Element.addAttribute" 
"String.format" -- "TransformerFactory.newInstance" 
"String.format" -- "TransformerFactory.setFeature" 
"String.format" -- "TransformerFactory.newTransformer" 
"String.format" -- "Transformer.setOutputProperty" 
"String.format" -- "StreamResult.<init>" 
"String.format" -- "Transformer.transform" 
"String.format" -- "Writer.toString" 
"String.format" -- "XPathFactory.newInstance" 
"String.format" -- "XPath.evaluate" 
"String.format" -- "NodeList.cast" 
"String.format" -- "NodeList.getLength" 
"String.format" -- "NodeList.item" 
"String.format" -- "Element.setAttribute" 
"String.format" -- "DOMSource.<init>" 
"String.format" -- "DocumentBuilderFactory.newDocumentBuilder" 
"String.format" -- "Match.xpath" 
"String.format" -- "Match.toString" 
"String.format" -- "Document.createElement" 
"String.format" -- "Element.appendChild" 
"String.format" -- "Element.getElementsByTagName" 
"String.format" -- "Document.getDocumentElement" 
"String.format" -- "Document.appendChild" 
"String.format" -- "XMLStreamReader.hasNext" 
"String.format" -- "XMLStreamReader.next" 
"String.format" -- "XMLStreamReader.isStartElement" 
"String.format" -- "XMLStreamReader.getLocalName" 
"String.format" -- "XMLStreamReader.getElementText" 
"String.format" -- "XMLOutputFactory.newInstance" 
"String.format" -- "XMLStreamWriter.writeDTD" 
"String.format" -- "XMLStreamWriter.writeCharacters" 
"String.format" -- "XMLStreamWriter.writeStartElement" 
"String.format" -- "XMLStreamWriter.writeAttribute" 
"String.format" -- "XMLStreamWriter.writeEndElement" 
"String.format" -- "XMLStreamWriter.writeEndDocument" 
"String.format" -- "XMLStreamWriter.flush" 
"Props.create" -- "String.split" 
"Props.create" -- "ArrayList.<init>" 
"Props.create" -- "Integer.cast" 
"Props.create" -- "List<CompletableFuture>.add" 
"Props.create" -- "List<CompletableFuture>.stream" 
"List.add" -- "List.stream" 
"List.add" -- "Collectors.toList" 
"List.add" -- "IntStream.range" 
"List.add" -- "List.get" 
"List.add" -- "Random.nextInt" 
"List.add" -- "Random.nextDouble" 
"List.add" -- "List.forEach" 
"List.add" -- "List.size" 
"List.add" -- "ArrayList.<init>" 
"List.add" -- "String.length" 
"List.add" -- "String.substring" 
"List.add" -- "Collectors.toSet" 
"List.add" -- "String.equals" 
"List.add" -- "Collections.emptyList" 
"List.add" -- "List.remove" 
"List.add" -- "StringBuilder.<init>" 
"List.add" -- "StringBuilder.append" 
"List.add" -- "StringBuilder.toString" 
"List.add" -- "HashMap.<init>" 
"List.add" -- "Set.add" 
"List.add" -- "Integer.toString" 
"List.add" -- "List<String>.get" 
"List.add" -- "List<String>.size" 
"List.add" -- "List.iterator" 
"List.add" -- "Iterator.next" 
"List.add" -- "Iterator.hasNext" 
"List.add" -- "Map<String,Double>.get" 
"List.add" -- "List.isEmpty" 
"List.add" -- "Map<String,Double>.compute" 
"List.add" -- "Map<String,Double>.put" 
"List.add" -- "Map<String,Double>.entrySet" 
"List.add" -- "Set<String>.contains" 
"List.add" -- "Map<String,Object>.put" 
"List.add" -- "Math.min" 
"List.add" -- "Random.<init>" 
"List.add" -- "Map<Integer>.put" 
"List.add" -- "Response.status" 
"List.add" -- "Response.ok" 
"List.add" -- "Runnable.<init>" 
"List.add" -- "Thread.currentThread" 
"List.add" -- "Thread.<init>" 
"List.add" -- "Thread.start" 
"List.add" -- "BigDecimal.valueOf" 
"List.add" -- "List<String>.forEach" 
"List.add" -- "AtomicInteger.incrementAndGet" 
"List.add" -- "LocalDateTime.now" 
"List.add" -- "FileInputStream.<init>" 
"List.add" -- "Path.toString" 
"List.add" -- "Date.<init>" 
"List.add" -- "Product.<init>" 
"List.add" -- "HashMap<String,Object>.<init>" 
"List.add" -- "Connection.createStatement" 
"List.add" -- "Class.cast" 
"List.add" -- "PreparedStatement.setString" 
"List.add" -- "Statement.executeQuery" 
"List.add" -- "ResultSet.next" 
"List.add" -- "ResultSet.getString" 
"List.add" -- "HashMap<String,String>.<init>" 
"List.add" -- "Map<String,String>.put" 
"List.add" -- "Map<String>.put" 
"List.add" -- "List<Message>.get" 
"List.add" -- "Collections.singletonList" 
"List.add" -- "Calendar.getInstance" 
"List.add" -- "Calendar.getTime" 
"List.add" -- "FileReader.<init>" 
"List.add" -- "Arrays.copyOfRange" 
"List.add" -- "AtomicInteger.get" 
"List.add" -- "List.subList" 
"List.add" -- "List.addAll" 
"List.add" -- "LocalDate.now" 
"List.add" -- "ServiceLoader.load" 
"List.add" -- "AtomicInteger.decrementAndGet" 
"List.add" -- "Iterator.remove" 
"List.add" -- "List.indexOf" 
"List.add" -- "Vector.add" 
"List.add" -- "Collections.sort" 
"List.add" -- "Pattern.compile" 
"List.add" -- "Pattern.matcher" 
"List.add" -- "Entry<String>.getKey" 
"List.add" -- "Map<String>.entrySet" 
"List.add" -- "Calendar.set" 
"List.add" -- "Integer.valueOf" 
"List.add" -- "Objects.requireNonNull" 
"List.add" -- "FileWriter.<init>" 
"List.add" -- "List<Boolean>.size" 
"List.add" -- "List<Boolean>.get" 
"List.add" -- "List<List>.add" 
"List.add" -- "Class.isInstance" 
"List.add" -- "Map<String>.get" 
"List.add" -- "Instant.now" 
"List.add" -- "Matcher.find" 
"List.add" -- "Matcher.group" 
"List.add" -- "Observable.from" 
"List.add" -- "Observable.toBlocking" 
"List.add" -- "Product.getPrice" 
"List.add" -- "BigDecimal.add" 
"List.add" -- "PreparedStatement.executeQuery" 
"List.add" -- "QName.<init>" 
"List.add" -- "ServiceLoader.forEach" 
"List.add" -- "Writer.close" 
"List.add" -- "Connection.prepareStatement" 
"List.add" -- "Map<Long>.entrySet" 
"List.add" -- "ResultSet.getInt" 
"List.add" -- "UUID.fromString" 
"List.add" -- "ResultSet.getBigDecimal" 
"List.add" -- "Channel.<init>" 
"List.add" -- "Channel.setLink" 
"List.add" -- "Channel.setTitle" 
"List.add" -- "Channel.setDescription" 
"List.add" -- "Channel.setPubDate" 
"List.add" -- "Parameter.<init>" 
"List.add" -- "Channel.setItems" 
"List.add" -- "Map<String,LinkedList<String>>.get" 
"List.add" -- "Entry<Long>.getValue" 
"List.add" -- "Role.getName" 
"List.add" -- "Role.getPrivileges" 
"List.add" -- "Float.valueOf" 
"List.add" -- "Detail.<init>" 
"List.add" -- "List<Detail>.add" 
"List.add" -- "XMLInputFactory.newInstance" 
"List.add" -- "XMLInputFactory.createXMLEventReader" 
"List.add" -- "XMLEventReader.hasNext" 
"List.add" -- "XMLEventReader.nextEvent" 
"List.add" -- "XMLEvent.isStartElement" 
"List.add" -- "XMLEvent.asStartElement" 
"List.add" -- "StartElement.getName" 
"List.add" -- "StartElement.getAttributeByName" 
"List.add" -- "XMLEvent.asCharacters" 
"List.add" -- "XMLEvent.isEndElement" 
"List.add" -- "XMLEvent.asEndElement" 
"List.add" -- "EndElement.getName" 
"List.add" -- "XMLEvent.getEventType" 
"List.add" -- "Iterator<Attribute>.hasNext" 
"List.add" -- "Iterator<Attribute>.next" 
"List.add" -- "Attribute.getName" 
"List.add" -- "Attribute.getValue" 
"List.stream" -- "Collectors.toList" 
"List.stream" -- "List.get" 
"List.stream" -- "Random.nextDouble" 
"List.stream" -- "IntStream.rangeClosed" 
"List.stream" -- "List.size" 
"List.stream" -- "ArrayList.<init>" 
"List.stream" -- "String.length" 
"List.stream" -- "String.equals" 
"List.stream" -- "Comparator.comparing" 
"List.stream" -- "String.isEmpty" 
"List.stream" -- "Collections.emptyList" 
"List.stream" -- "BigDecimal.<init>" 
"List.stream" -- "HashMap.<init>" 
"List.stream" -- "Map<String,Double>.get" 
"List.stream" -- "List.isEmpty" 
"List.stream" -- "Map<String,Double>.compute" 
"List.stream" -- "Map<String,Double>.put" 
"List.stream" -- "Map<String,Double>.forEach" 
"List.stream" -- "Collectors.joining" 
"List.stream" -- "String.cast" 
"List.stream" -- "Optional.empty" 
"List.stream" -- "Arrays.asList" 
"List.stream" -- "Optional.of" 
"List.stream" -- "System.currentTimeMillis" 
"List.stream" -- "Comparator.comparingDouble" 
"List.stream" -- "Collectors.toMap" 
"List.stream" -- "Product.<init>" 
"List.stream" -- "Collections.singletonList" 
"List.stream" -- "Stream.filter" 
"List.stream" -- "Stream.collect" 
"List.stream" -- "Objects.isNull" 
"List.stream" -- "Collectors.counting" 
"List.stream" -- "Collectors.groupingBy" 
"List.stream" -- "Function.identity" 
"List.stream" -- "Collectors.collectingAndThen" 
"List.stream" -- "ImmutablePair.of" 
"List.stream" -- "List<Double>.stream" 
"List.stream" -- "ImmutableTriple.of" 
"List.stream" -- "Double.compare" 
"List.stream" -- "EnumMap.<init>" 
"List.stream" -- "EnumSet.contains" 
"List.stream" -- "Optional<Integer>.orElse" 
"List.stream" -- "Optional.isPresent" 
"List.stream" -- "Optional.get" 
"List.stream" -- "Collectors.summingInt" 
"List.stream" -- "Collectors.toCollection" 
"List.stream" -- "List<Product>.remove" 
"List.stream" -- "List<Product>.forEach" 
"List.stream" -- "Long.parseLong" 
"List.stream" -- "List.removeIf" 
"List.stream" -- "Role.<init>" 
"List.stream" -- "Map<String,Role>.put" 
"List.stream" -- "List.sort" 
"List.stream" -- "Values.<init>" 
"List.stream" -- "Repository.getName" 
"List.stream" -- "Query.<init>" 
"List.stream" -- "List<>.get" 
"List.stream" -- "List<>.size" 
"CompletableFuture.supplyAsync" -- "Thread.sleep" 
"CompletableFuture.supplyAsync" -- "CompletableFuture.allOf" 
"CompletableFuture.supplyAsync" -- "CompletableFuture.supplyAsync(" 
"String.split" -- "Arrays.stream" 
"String.split" -- "Collectors.toList" 
"String.split" -- "ArrayList.<init>" 
"String.split" -- "String.substring" 
"String.split" -- "String.contains" 
"String.split" -- "String.equals" 
"String.split" -- "String.isEmpty" 
"String.split" -- "LinkedList.<init>" 
"String.split" -- "HashSet.<init>" 
"String.split" -- "StringBuilder.<init>" 
"String.split" -- "StringBuilder.append" 
"String.split" -- "StringBuilder.toString" 
"String.split" -- "String.trim" 
"String.split" -- "File.<init>" 
"String.split" -- "Integer.parseInt" 
"String.split" -- "Set<String>.contains" 
"String.split" -- "Collectors.joining" 
"String.split" -- "String.join" 
"String.split" -- "Integer.cast" 
"String.split" -- "String.startsWith" 
"String.split" -- "Arrays.asList" 
"String.split" -- "Math.max" 
"String.split" -- "Set<String>.add" 
"String.split" -- "String.<init>" 
"String.split" -- "Stream.of" 
"String.split" -- "Double.parseDouble" 
"String.split" -- "Collectors.toMap" 
"String.split" -- "Response.status" 
"String.split" -- "Builder.<init>" 
"String.split" -- "UUID.randomUUID" 
"String.split" -- "Date.<init>" 
"String.split" -- "Base64.getDecoder" 
"String.split" -- "String.getBytes" 
"String.split" -- "List<String>.stream" 
"String.split" -- "Date.before" 
"String.split" -- "ArrayList<String>.stream" 
"String.split" -- "LinkedHashSet.<init>" 
"String.split" -- "List<String>.contains" 
"String.split" -- "Pattern.matcher" 
"String.split" -- "Instant.plus" 
"String.split" -- "Date.from" 
"String.split" -- "Integer.valueOf" 
"String.split" -- "ProcessBuilder.<init>" 
"String.split" -- "File.getAbsoluteFile" 
"String.split" -- "ProcessBuilder.directory" 
"String.split" -- "ProcessBuilder.redirectErrorStream" 
"String.split" -- "ProcessBuilder.start" 
"String.split" -- "Process.waitFor" 
"String.split" -- "Instant.now" 
"String.split" -- "Matcher.find" 
"String.split" -- "Matcher.group" 
"String.split" -- "List<String>.containsAll" 
"String.split" -- "Collectors.toCollection" 
"String.split" -- "ArrayList<String>.removeAll" 
"String.split" -- "Character.toTitleCase" 
"String.split" -- "Integer.compareTo" 
"String.split" -- "Map<String>.containsKey" 
"String.split" -- "Long.parseLong" 
"String.split" -- "List<CompletableFuture>.add" 
"String.split" -- "List<CompletableFuture>.stream" 
"String.split" -- "Operation.<init>" 
"String.split" -- "Builder.issuer" 
"String.split" -- "Set<String>.containsAll" 
"String.split" -- "Deque<String>.peek" 
"String.split" -- "Deque<String>.isEmpty" 
"String.split" -- "Deque<String>.pop" 
"String.split" -- "Deque<Object>.push" 
"String.split" -- "Deque<String>.push" 
"Arrays.stream" -- "Collectors.toList" 
"Arrays.stream" -- "Math.abs" 
"Arrays.stream" -- "Collectors.toSet" 
"Arrays.stream" -- "String.equals" 
"Arrays.stream" -- "Comparator.comparing" 
"Arrays.stream" -- "String.isEmpty" 
"Arrays.stream" -- "LinkedList.<init>" 
"Arrays.stream" -- "List<String>.get" 
"Arrays.stream" -- "Set<String>.contains" 
"Arrays.stream" -- "LinkedHashMap.<init>" 
"Arrays.stream" -- "Collectors.joining" 
"Arrays.stream" -- "Map<String,Object>.put" 
"Arrays.stream" -- "Comparator.comparing((RomanNumeral" 
"Arrays.stream" -- "Arrays.asList" 
"Arrays.stream" -- "Comparator.comparingInt" 
"Arrays.stream" -- "Map<String,String>.entrySet" 
"Arrays.stream" -- "Collectors.toMap" 
"Arrays.stream" -- "Map<String,String>.containsKey" 
"Arrays.stream" -- "Map<String,String>.get" 
"Arrays.stream" -- "String.format("Value:" 
"Arrays.stream" -- "Stream.concat" 
"Arrays.stream" -- "Pattern.matcher" 
"Arrays.stream" -- "Integer.valueOf" 
"Arrays.stream" -- "Long.valueOf" 
"Arrays.stream" -- "Introspector.getBeanInfo" 
"Arrays.stream" -- "Matcher.find" 
"Arrays.stream" -- "Matcher.group" 
"Arrays.stream" -- "Character.toTitleCase" 
"Arrays.stream" -- "Map<String>.containsKey" 
"Arrays.stream" -- "List<String>.toString" 
"Arrays.stream" -- "Collections.emptySet" 
"Arrays.stream" -- "Builder.found" 
"Arrays.stream" -- "Builder.didNotFind" 
"Arrays.stream" -- "Double.valueOf" 
"Arrays.stream" -- "Deque<String>.peek" 
"Arrays.stream" -- "Deque<String>.isEmpty" 
"Arrays.stream" -- "Deque<String>.pop" 
"Arrays.stream" -- "Deque<Object>.push" 
"Arrays.stream" -- "Deque<String>.push" 
"Collectors.toList" -- "Math.random" 
"Collectors.toList" -- "Collections.shuffle" 
"Collectors.toList" -- "IntStream.range" 
"Collectors.toList" -- "List.get" 
"Collectors.toList" -- "IntStream.rangeClosed" 
"Collectors.toList" -- "List.size" 
"Collectors.toList" -- "ArrayList.<init>" 
"Collectors.toList" -- "Stream.generate" 
"Collectors.toList" -- "String.equals" 
"Collectors.toList" -- "Comparator.comparing" 
"Collectors.toList" -- "List<Integer>.forEach" 
"Collectors.toList" -- "Collections.emptyList" 
"Collectors.toList" -- "HashMap.<init>" 
"Collectors.toList" -- "Integer.parseInt" 
"Collectors.toList" -- "List<String>.get" 
"Collectors.toList" -- "Objects.equals" 
"Collectors.toList" -- "List.isEmpty" 
"Collectors.toList" -- "Collectors.joining" 
"Collectors.toList" -- "Map<String,Object>.put" 
"Collectors.toList" -- "String.join" 
"Collectors.toList" -- "String.cast" 
"Collectors.toList" -- "Map<String,Object>.get" 
"Collectors.toList" -- "Comparator.comparing((RomanNumeral" 
"Collectors.toList" -- "String.chars" 
"Collectors.toList" -- "IntStream.of" 
"Collectors.toList" -- "Optional.empty" 
"Collectors.toList" -- "Optional.ofNullable" 
"Collectors.toList" -- "Arrays.asList" 
"Collectors.toList" -- "Collections.reverse" 
"Collectors.toList" -- "String.toLowerCase" 
"Collectors.toList" -- "Math.min" 
"Collectors.toList" -- "List<Integer>.size" 
"Collectors.toList" -- "List<List<Integer>>.add" 
"Collectors.toList" -- "List<Integer>.get" 
"Collectors.toList" -- "String.<init>" 
"Collectors.toList" -- "Integer.equals" 
"Collectors.toList" -- "Cell.<init>" 
"Collectors.toList" -- "List<Integer>.add" 
"Collectors.toList" -- "List<List<Integer>>.stream" 
"Collectors.toList" -- "Stream.of" 
"Collectors.toList" -- "Comparator.comparingInt" 
"Collectors.toList" -- "Comparator.reverseOrder" 
"Collectors.toList" -- "TreeSet.<init>" 
"Collectors.toList" -- "Set<Integer>.addAll" 
"Collectors.toList" -- "Set<Integer>.stream" 
"Collectors.toList" -- "Optional.of" 
"Collectors.toList" -- "List<Node>.size" 
"Collectors.toList" -- "List<Node>.get" 
"Collectors.toList" -- "List<Integer>.stream" 
"Collectors.toList" -- "List<String>.add" 
"Collectors.toList" -- "Thread.<init>" 
"Collectors.toList" -- "Thread.start" 
"Collectors.toList" -- "List<String>.forEach" 
"Collectors.toList" -- "LocalDateTime.now" 
"Collectors.toList" -- "Paths.get" 
"Collectors.toList" -- "Product.<init>" 
"Collectors.toList" -- "Collections.singletonList" 
"Collectors.toList" -- "List<Integer>.parallelStream" 
"Collectors.toList" -- "URI.<init>" 
"Collectors.toList" -- "List<URI>.stream" 
"Collectors.toList" -- "Collection<String>.stream" 
"Collectors.toList" -- "Stream.generate(" 
"Collectors.toList" -- "List.subList" 
"Collectors.toList" -- "List<String>.stream" 
"Collectors.toList" -- "List.addAll" 
"Collectors.toList" -- "Stream.iterate" 
"Collectors.toList" -- "Stream.iterate(0,i" 
"Collectors.toList" -- "LocalDate.plusDays" 
"Collectors.toList" -- "Collection<Integer>.stream" 
"Collectors.toList" -- "LocalDate.datesUntil" 
"Collectors.toList" -- "Stream.filter" 
"Collectors.toList" -- "Stream.collect" 
"Collectors.toList" -- "SimpleDateFormat.parse" 
"Collectors.toList" -- "StreamSupport.stream" 
"Collectors.toList" -- "Objects.isNull" 
"Collectors.toList" -- "Stream.concat" 
"Collectors.toList" -- "List<Object>.stream" 
"Collectors.toList" -- "Collection.stream" 
"Collectors.toList" -- "Collection<String>.add" 
"Collectors.toList" -- "Collectors.groupingBy" 
"Collectors.toList" -- "Collectors.collectingAndThen" 
"Collectors.toList" -- "IntStream.iterate" 
"Collectors.toList" -- "IntStream.iterate(0,i" 
"Collectors.toList" -- "ZoneId.getAvailableZoneIds" 
"Collectors.toList" -- "Set<String>.stream" 
"Collectors.toList" -- "String.format("" 
"Collectors.toList" -- "Files.readAllLines" 
"Collectors.toList" -- "Integer.valueOf" 
"Collectors.toList" -- "Thread.setDaemon" 
"Collectors.toList" -- "List<Double>.stream" 
"Collectors.toList" -- "ImmutableTriple.of" 
"Collectors.toList" -- "Files.lines" 
"Collectors.toList" -- "Book.<init>" 
"Collectors.toList" -- "EnumMap.<init>" 
"Collectors.toList" -- "EnumSet.contains" 
"Collectors.toList" -- "NetworkInterface.getNetworkInterfaces" 
"Collectors.toList" -- "Enumeration<NetworkInterface>.hasMoreElements" 
"Collectors.toList" -- "Enumeration<NetworkInterface>.nextElement" 
"Collectors.toList" -- "NetworkInterface.isUp" 
"Collectors.toList" -- "NetworkInterface.isLoopback" 
"Collectors.toList" -- "NetworkInterface.getInterfaceAddresses" 
"Collectors.toList" -- "List<InetAddress>.addAll" 
"Collectors.toList" -- "InetAddress.getBroadcast" 
"Collectors.toList" -- "Optional<Integer>.orElse" 
"Collectors.toList" -- "Introspector.getBeanInfo" 
"Collectors.toList" -- "Stream<Character>.collect" 
"Collectors.toList" -- "StringTokenizer.<init>" 
"Collectors.toList" -- "List<Character>.stream" 
"Collectors.toList" -- "String.concat" 
"Collectors.toList" -- "Collections.list" 
"Collectors.toList" -- "Collections.list(new" 
"Collectors.toList" -- "MethodTree.getParameters" 
"Collectors.toList" -- "List<VariableTree>.isEmpty" 
"Collectors.toList" -- "List<VariableTree>.forEach" 
"Collectors.toList" -- "List<Product>.remove" 
"Collectors.toList" -- "List<Product>.forEach" 
"Collectors.toList" -- "Long.parseLong" 
"Collectors.toList" -- "List<Book>.stream" 
"Collectors.toList" -- "List<S>.stream" 
"Collectors.toList" -- "IntStream.iterate(start,i" 
"Collectors.toList" -- "TextField.getText" 
"Collectors.toList" -- "Task<>.<init>" 
"Collectors.toList" -- "Task<>.setOnSucceeded" 
"Collectors.toList" -- "Task<>.getValue" 
"Collectors.toList" -- "Query.getResultList" 
"Collectors.toList" -- "StringReader.<init>" 
"Collectors.toList" -- "String.instance" 
"Collectors.toList" -- "List<String>.toString" 
"Collectors.toList" -- "Role.<init>" 
"Collectors.toList" -- "Map<String,Role>.put" 
"Collectors.toList" -- "List<Repository>.stream" 
"Collectors.toList" -- "Stream.of("file" 
"Collectors.toList" -- "List<Event>.add" 
"Collectors.toList" -- "Map<String,List<Row>>.entrySet" 
"Collectors.toList" -- "Context.clear" 
"Collectors.toList" -- "List<String>.cast" 
"Collectors.toList" -- "List<String[]>.cast" 
"Collectors.toList" -- "Query.<init>" 
"Collectors.toList" -- "Book.title" 
"Collectors.toList" -- "Book.author" 
"Collectors.toList" -- "Book.genre" 
"Collectors.toList" -- "Group.setId" 
"Collectors.toList" -- "Page.getMaxResults" 
"Collectors.toList" -- "Page.getFirstResult" 
"Collectors.toList" -- "List<Task>.stream" 
"Collectors.toList" -- "Double.valueOf" 
"Collectors.toList" -- "Map<Long>.values" 
"Collectors.toList" -- "Entry>.stream" 
"Collectors.toList" -- "Object>.equals" 
"Collectors.toList" -- "Role.getName" 
"Collectors.toList" -- "Role.getPrivileges" 
"Collectors.toList" -- "List<Class>.size" 
"Collectors.toList" -- "List<Class>.get" 
"Collectors.toList" -- "Page<Book>.getTotalPages" 
"Collectors.toList" -- "Thread.getAllStackTraces" 
"Collectors.toList" -- "String.format("%-20s" 
"Math.abs" -- "Math.pow" 
"Math.abs" -- "Math.sqrt" 
"Math.abs" -- "IntStream.range" 
"Math.abs" -- "Random.nextInt" 
"Math.abs" -- "String.valueOf" 
"Math.abs" -- "Math.max" 
"Math.abs" -- "Math.min" 
"Math.abs" -- "Result.<init>" 
"Math.abs" -- "Tree.left" 
"Math.abs" -- "Tree.right" 
"Math.abs" -- "BigInteger.<init>" 
"Math.abs" -- "HashMap<Integer,Integer>.<init>" 
"Math.abs" -- "Map<Integer,Integer>.put" 
"Math.abs" -- "Math.hypot" 
"Math.abs" -- "Map<Integer,Integer>.get" 
"Math.pow" -- "Math.sqrt" 
"Math.pow" -- "Math.round" 
"Math.pow" -- "DecimalFormat.<init>" 
"Math.pow" -- "Map<List>.entrySet" 
"Math.pow" -- "Entry<List>.getKey" 
"Math.pow" -- "Entry<List>.getValue" 
"Math.pow" -- "Map<String,Double>.keySet" 
"Math.pow" -- "Map<String,Double>.get" 
"Math.pow" -- "Math.max" 
"Math.pow" -- "Math.min" 
"Math.pow" -- "Set<Integer>.addAll" 
"Math.pow" -- "HashSet<Integer>.<init>" 
"Math.pow" -- "Double.compare" 
"Math.pow" -- "Math.toRadians" 
"Math.pow" -- "Math.sin" 
"Math.pow" -- "Math.tan" 
"Math.pow" -- "DecimalFormat.format" 
"Math.pow" -- "Map<Integer,Integer>.keySet" 
"Math.pow" -- "Map<Integer,Integer>.getOrDefault" 
"Math.sqrt" -- "IntStream.rangeClosed" 
"Math.sqrt" -- "ArrayList.<init>" 
"Math.sqrt" -- "Map<String,Double>.keySet" 
"Math.sqrt" -- "Map<String,Double>.get" 
"Math.sqrt" -- "Math.max" 
"Math.sqrt" -- "Math.min" 
"Math.sqrt" -- "List<Integer>.size" 
"Math.sqrt" -- "List<List<Integer>>.add" 
"Math.sqrt" -- "List<List<Integer>>.get" 
"Math.sqrt" -- "Math.toRadians" 
"Math.sqrt" -- "Math.sin" 
"Math.sqrt" -- "Math.tan" 
"Math.random" -- "Math.exp" 
"Math.random" -- "ArrayList.size" 
"Math.random" -- "List.get" 
"Math.random" -- "IntStream.rangeClosed" 
"Math.random" -- "Math.round" 
"Math.random" -- "Population.getIndividual" 
"Math.random" -- "ArrayList.<init>" 
"Math.random" -- "Population.<init>" 
"Math.random" -- "Population.getIndividuals" 
"Math.random" -- "Population.getFittest" 
"Math.random" -- "HashSet.<init>" 
"Math.random" -- "HashMap.<init>" 
"Math.random" -- "HashMap<Double>.<init>" 
"Math.random" -- "Set.add" 
"Math.random" -- "HashMap<Double>.put" 
"Math.random" -- "Map<HashMap<Double>>.put" 
"Math.random" -- "Arrays.asList" 
"Math.random" -- "State.getEmptyPositions" 
"Math.random" -- "List<Position>.size" 
"Math.random" -- "List<Position>.get" 
"Math.random" -- "State.performMove" 
"Math.random" -- "Node.size" 
"Math.random" -- "Node.get" 
"Math.random" -- "Thread.sleep" 
"Math.random" -- "Thread.currentThread" 
"Math.random" -- "BigDecimal.multiply" 
"Math.random" -- "Date.<init>" 
"Math.random" -- "Calendar.getInstance" 
"Math.random" -- "HashSet<Integer>.<init>" 
"Math.random" -- "Integer.valueOf" 
"Math.random" -- "Math.ceil" 
"Math.random" -- "List<Double>.add" 
"Math.random" -- "List<Float>.add" 
"ArrayList.get" -- "ArrayList.set" 
"ArrayList.isEmpty" -- "Collections.shuffle" 
"Collections.shuffle" -- "String.chars" 
"Collections.shuffle" -- "Arrays.asList" 
"Collections.shuffle" -- "Stream.concat" 
"Collections.shuffle" -- "Stream<Character>.collect" 
"Collections.shuffle" -- "List<Character>.stream" 
"Collections.shuffle" -- "String.concat" 
"ArrayList.add" -- "ArrayList.<init>" 
"IntStream.range" -- "List.get" 
"IntStream.range" -- "Random.nextInt" 
"IntStream.range" -- "Random.nextDouble" 
"IntStream.range" -- "OptionalInt.isPresent" 
"IntStream.range" -- "OptionalInt.getAsInt" 
"IntStream.range" -- "IntStream.range(currentIndex,numberOfCities" 
"IntStream.range" -- "List.forEach" 
"IntStream.range" -- "Arrays.toString" 
"IntStream.range" -- "List.size" 
"IntStream.range" -- "ArrayList.<init>" 
"IntStream.range" -- "String.length" 
"IntStream.range" -- "Collectors.toSet" 
"IntStream.range" -- "System.arraycopy" 
"IntStream.range" -- "String.charAt" 
"IntStream.range" -- "StringBuilder.<init>" 
"IntStream.range" -- "StringBuilder.append" 
"IntStream.range" -- "StringBuilder.toString" 
"IntStream.range" -- "File.<init>" 
"IntStream.range" -- "HashMap.<init>" 
"IntStream.range" -- "Map<String,Object>.put" 
"IntStream.range" -- "System.lineSeparator" 
"IntStream.range" -- "String.replaceAll" 
"IntStream.range" -- "List<Integer>.add" 
"IntStream.range" -- "Random.<init>" 
"IntStream.range" -- "IntStream.range(0,n" 
"IntStream.range" -- "IntStream.range(1,n" 
"IntStream.range" -- "FileInputStream.<init>" 
"IntStream.range" -- "Paths.get" 
"IntStream.range" -- "UUID.randomUUID" 
"IntStream.range" -- "Files.write" 
"IntStream.range" -- "Random.nextLong" 
"IntStream.range" -- "List.subList" 
"IntStream.range" -- "Map<Integer,Integer>.put" 
"IntStream.range" -- "String.endsWith" 
"IntStream.range" -- "Book.<init>" 
"IntStream.range" -- "IntStream.range(1,epochsNum" 
"IntStream.range" -- "Map<Integer,Integer>.containsKey" 
"IntStream.range" -- "Map<Integer,Integer>.get" 
"IntStream.range" -- "Map<Integer,Integer>.containsValue" 
"IntStream.range" -- "List<Book>.add" 
"IntStream.range" -- "Book.title" 
"IntStream.range" -- "Book.author" 
"IntStream.range" -- "Book.genre" 
"IntStream.range" -- "Map<Integer,List>.values" 
"IntStream.range" -- "List<Book>.isEmpty" 
"List.get" -- "Random.nextInt" 
"List.get" -- "List.size" 
"List.get" -- "Population.getIndividual" 
"List.get" -- "ArrayList.<init>" 
"List.get" -- "String.length" 
"List.get" -- "String.substring" 
"List.get" -- "Collectors.toSet" 
"List.get" -- "String.valueOf" 
"List.get" -- "Comparator.comparing" 
"List.get" -- "String.charAt" 
"List.get" -- "HashSet.<init>" 
"List.get" -- "List.remove" 
"List.get" -- "StringBuilder.<init>" 
"List.get" -- "StringBuilder.append" 
"List.get" -- "StringBuilder.toString" 
"List.get" -- "HashMap.<init>" 
"List.get" -- "HashMap<Double>.<init>" 
"List.get" -- "Set.add" 
"List.get" -- "HashMap<Double>.put" 
"List.get" -- "Map<HashMap<Double>>.put" 
"List.get" -- "Integer.toString" 
"List.get" -- "List.isEmpty" 
"List.get" -- "Map<String,Object>.put" 
"List.get" -- "String.toUpperCase" 
"List.get" -- "String.startsWith" 
"List.get" -- "Optional.ofNullable" 
"List.get" -- "Integer.numberOfTrailingZeros" 
"List.get" -- "Integer.equals" 
"List.get" -- "Region.toString" 
"List.get" -- "Point.toString" 
"List.get" -- "ArrayList<Point>.<init>" 
"List.get" -- "Region.containsPoint" 
"List.get" -- "List<Point>.add" 
"List.get" -- "Random.<init>" 
"List.get" -- "List.set" 
"List.get" -- "Response.ok" 
"List.get" -- "PreparedStatement.setString" 
"List.get" -- "AtomicInteger.get" 
"List.get" -- "AtomicInteger.intValue" 
"List.get" -- "List.subList" 
"List.get" -- "AtomicInteger.set" 
"List.get" -- "AtomicInteger.getAndIncrement" 
"List.get" -- "List<String>.stream" 
"List.get" -- "List.addAll" 
"List.get" -- "Set<Set>.add" 
"List.get" -- "List<Boolean>.size" 
"List.get" -- "List<Boolean>.get" 
"List.get" -- "List<List>.add" 
"List.get" -- "HashSet.add" 
"List.get" -- "Iterator.<init>" 
"List.get" -- "Collectors.toCollection" 
"List.get" -- "Query.getResultList" 
"List.get" -- "String.instance" 
"List.get" -- "Connection.prepareStatement" 
"List.get" -- "List.sort" 
"List.get" -- "Values.<init>" 
"List.get" -- "Query.executeList" 
"List.get" -- "PreparedStatement.setInt" 
"List.get" -- "UUID.fromString" 
"List.get" -- "List<String>.cast" 
"List.get" -- "List<String[]>.cast" 
"List.get" -- "Document.of" 
"List.get" -- "Query<Double>.getResultList" 
"List.get" -- "Double.cast" 
"List.get" -- "List<>.get" 
"List.get" -- "List<>.size" 
"Random.nextInt" -- "Random.nextDouble" 
"Random.nextInt" -- "OptionalInt.isPresent" 
"Random.nextInt" -- "OptionalInt.getAsInt" 
"Random.nextInt" -- "List.forEach" 
"Random.nextInt" -- "List.size" 
"Random.nextInt" -- "ArrayList.<init>" 
"Random.nextInt" -- "Collectors.toSet" 
"Random.nextInt" -- "String.valueOf" 
"Random.nextInt" -- "HashMap.<init>" 
"Random.nextInt" -- "List<String>.get" 
"Random.nextInt" -- "List<String>.size" 
"Random.nextInt" -- "List.isEmpty" 
"Random.nextInt" -- "IntStream.of" 
"Random.nextInt" -- "List<List<Integer>>.add" 
"Random.nextInt" -- "List<Integer>.add" 
"Random.nextInt" -- "System.currentTimeMillis" 
"Random.nextInt" -- "Random.<init>" 
"Random.nextInt" -- "Thread.sleep" 
"Random.nextInt" -- "Runnable.<init>" 
"Random.nextInt" -- "Thread.currentThread" 
"Random.nextInt" -- "Thread.<init>" 
"Random.nextInt" -- "Thread.start" 
"Random.nextInt" -- "List<String>.forEach" 
"Random.nextInt" -- "AtomicInteger.incrementAndGet" 
"Random.nextInt" -- "LocalDateTime.now" 
"Random.nextInt" -- "Product.<init>" 
"Random.nextInt" -- "List.subList" 
"Random.nextInt" -- "CyclicBarrier.await" 
"Random.nextInt" -- "Book.<init>" 
"Random.nextInt" -- "Map<Integer,String>.put" 
"Random.nextInt" -- "Optional.ifPresent" 
"Random.nextInt" -- "Values.<init>" 
"Random.nextInt" -- "Utils.sleep" 
"Random.nextInt" -- "List<Book>.size" 
"Random.nextInt" -- "List<Book>.add" 
"Random.nextInt" -- "List<Book>.get" 
"Random.nextInt" -- "Integer>>.size" 
"Random.nextInt" -- "Integer>>.get" 
"Random.nextDouble" -- "OptionalInt.isPresent" 
"Random.nextDouble" -- "OptionalInt.getAsInt" 
"Random.nextDouble" -- "ArrayList.<init>" 
"Random.nextDouble" -- "HashMap.<init>" 
"Random.nextDouble" -- "Map<String,Double>.get" 
"Random.nextDouble" -- "Map<String,Double>.compute" 
"Random.nextDouble" -- "Map<String,Double>.put" 
"Random.nextDouble" -- "Random.<init>" 
"Random.nextDouble" -- "Product.<init>" 
"Random.nextDouble" -- "Optional.ifPresent" 
"OptionalInt.isPresent" -- "OptionalInt.getAsInt" 
"IntStream.range(currentIndex,numberOfCities" -- "List.forEach" 
"List.forEach" -- "List.size" 
"List.forEach" -- "ArrayList.<init>" 
"List.forEach" -- "HashMap.<init>" 
"List.forEach" -- "Class.cast" 
"List.forEach" -- "Map<Long>.put" 
"List.forEach" -- "Map<Long>.merge" 
"List.forEach" -- "Map<Long>.compute" 
"List.forEach" -- "Map<Long>.getOrDefault" 
"List.forEach" -- "Class.isInstance" 
"List.forEach" -- "View.forEach" 
"List.forEach" -- "View.newMembers" 
"List.forEach" -- "View.leftMembers" 
"List.forEach" -- "List<RowMapper>.size" 
"List.forEach" -- "List<RowMapper>.forEach" 
"Arrays.toString" -- "List.size" 
"Arrays.toString" -- "Arrays.sort" 
"Arrays.toString" -- "Iterator.next" 
"Arrays.toString" -- "Iterator.hasNext" 
"Arrays.toString" -- "Set<Set<Integer>>.size" 
"Arrays.toString" -- "Set<Set<Integer>>.toArray" 
"Arrays.toString" -- "Trie.builder" 
"Arrays.toString" -- "Trie.parseText" 
"Arrays.toString" -- "Collection.forEach" 
"Arrays.toString" -- "Collection.toArray" 
"IntStream.rangeClosed" -- "List.size" 
"IntStream.rangeClosed" -- "String.length" 
"IntStream.rangeClosed" -- "String.cast" 
"IntStream.rangeClosed" -- "System.currentTimeMillis" 
"IntStream.rangeClosed" -- "Integer.valueOf" 
"IntStream.rangeClosed" -- "Optional<Integer>.orElse" 
"IntStream.rangeClosed" -- "Page<Book>.getTotalPages" 
"Math.round" -- "Color.getRed" 
"Math.round" -- "Color.getGreen" 
"Math.round" -- "Color.getBlue" 
"List.size" -- "Population.getIndividual" 
"List.size" -- "ArrayList.<init>" 
"List.size" -- "String.length" 
"List.size" -- "String.substring" 
"List.size" -- "Collectors.toSet" 
"List.size" -- "String.valueOf" 
"List.size" -- "Comparator.comparing" 
"List.size" -- "String.charAt" 
"List.size" -- "List.remove" 
"List.size" -- "StringBuilder.<init>" 
"List.size" -- "StringBuilder.append" 
"List.size" -- "StringBuilder.toString" 
"List.size" -- "File.<init>" 
"List.size" -- "HashMap.<init>" 
"List.size" -- "List.isEmpty" 
"List.size" -- "Map<String,Double>.compute" 
"List.size" -- "Map<String,Double>.put" 
"List.size" -- "Map<String,Double>.forEach" 
"List.size" -- "String.cast" 
"List.size" -- "String.toUpperCase" 
"List.size" -- "String.startsWith" 
"List.size" -- "Arrays.asList" 
"List.size" -- "System.currentTimeMillis" 
"List.size" -- "Region.toString" 
"List.size" -- "Point.toString" 
"List.size" -- "Random.<init>" 
"List.size" -- "List.set" 
"List.size" -- "Date.<init>" 
"List.size" -- "AtomicInteger.get" 
"List.size" -- "AtomicInteger.intValue" 
"List.size" -- "List.subList" 
"List.size" -- "AtomicInteger.set" 
"List.size" -- "AtomicInteger.getAndIncrement" 
"List.size" -- "List.addAll" 
"List.size" -- "System.getProperty" 
"List.size" -- "File.getName" 
"List.size" -- "File.exists" 
"List.size" -- "File.mkdir" 
"List.size" -- "Collectors.toCollection" 
"List.size" -- "Query.getResultList" 
"List.size" -- "Role.<init>" 
"List.size" -- "Map<String,Role>.put" 
"List.size" -- "List.sort" 
"List.size" -- "Values.<init>" 
"List.size" -- "List<RowMapper>.size" 
"List.size" -- "List<RowMapper>.forEach" 
"List.size" -- "Query<Double>.getResultList" 
"List.size" -- "Double.cast" 
"List.size" -- "List<>.get" 
"List.size" -- "List<>.size" 
"Population.getIndividual" -- "Population.<init>" 
"Population.getIndividual" -- "Population.getIndividuals" 
"Population.getIndividual" -- "Population.getFittest" 
"ArrayList.<init>" -- "Population.createNewPopulation" 
"ArrayList.<init>" -- "String.length" 
"ArrayList.<init>" -- "String.substring" 
"ArrayList.<init>" -- "Collectors.toSet" 
"ArrayList.<init>" -- "String.valueOf" 
"ArrayList.<init>" -- "String.equals" 
"ArrayList.<init>" -- "State.<init>" 
"ArrayList.<init>" -- "Stack<String>.push" 
"ArrayList.<init>" -- "List<Stack<String>>.add" 
"ArrayList.<init>" -- "List<Stack<String>>.remove" 
"ArrayList.<init>" -- "Stack<String>.pop" 
"ArrayList.<init>" -- "Stack<String>.size" 
"ArrayList.<init>" -- "State.getState" 
"ArrayList.<init>" -- "List<State>.add" 
"ArrayList.<init>" -- "Collections.reverseOrder" 
"ArrayList.<init>" -- "Comparator.comparing" 
"ArrayList.<init>" -- "Node.getChildren" 
"ArrayList.<init>" -- "List<Integer>.forEach" 
"ArrayList.<init>" -- "List<Node>.add" 
"ArrayList.<init>" -- "String.charAt" 
"ArrayList.<init>" -- "Collections.emptyList" 
"ArrayList.<init>" -- "StringBuilder.<init>" 
"ArrayList.<init>" -- "StringBuilder.append" 
"ArrayList.<init>" -- "StringBuilder.toString" 
"ArrayList.<init>" -- "HashMap.<init>" 
"ArrayList.<init>" -- "Integer.toString" 
"ArrayList.<init>" -- "List<String>.get" 
"ArrayList.<init>" -- "List<String>.size" 
"ArrayList.<init>" -- "List.iterator" 
"ArrayList.<init>" -- "Iterator.next" 
"ArrayList.<init>" -- "Iterator.hasNext" 
"ArrayList.<init>" -- "List<String>.iterator" 
"ArrayList.<init>" -- "Iterator<String>.next" 
"ArrayList.<init>" -- "Iterator<String>.hasNext" 
"ArrayList.<init>" -- "Objects.equals" 
"ArrayList.<init>" -- "Map<String,Double>.get" 
"ArrayList.<init>" -- "List.isEmpty" 
"ArrayList.<init>" -- "Map<String,Double>.compute" 
"ArrayList.<init>" -- "Map<String,Double>.put" 
"ArrayList.<init>" -- "Map<List>.compute" 
"ArrayList.<init>" -- "List<String>.addAll" 
"ArrayList.<init>" -- "Map<String,Double>.entrySet" 
"ArrayList.<init>" -- "Set<String>.contains" 
"ArrayList.<init>" -- "Entry<String,Double>>.sort" 
"ArrayList.<init>" -- "LinkedHashMap.<init>" 
"ArrayList.<init>" -- "Entry<String,Double>.getValue" 
"ArrayList.<init>" -- "Entry<String,Double>.getKey" 
"ArrayList.<init>" -- "Map<String,Object>.put" 
"ArrayList.<init>" -- "Map<List>.forEach" 
"ArrayList.<init>" -- "Collections.singletonMap" 
"ArrayList.<init>" -- "List<Map<String,String>>.add" 
"ArrayList.<init>" -- "List<Map<String,Object>>.add" 
"ArrayList.<init>" -- "String.join" 
"ArrayList.<init>" -- "String.cast" 
"ArrayList.<init>" -- "Map<String,Object>.get" 
"ArrayList.<init>" -- "Integer.cast" 
"ArrayList.<init>" -- "String.startsWith" 
"ArrayList.<init>" -- "Arrays.asList" 
"ArrayList.<init>" -- "Collections.reverse" 
"ArrayList.<init>" -- "Math.min" 
"ArrayList.<init>" -- "List<Character>.size" 
"ArrayList.<init>" -- "List<List<Character>>.add" 
"ArrayList.<init>" -- "List<Character>.get" 
"ArrayList.<init>" -- "List<Character>.add" 
"ArrayList.<init>" -- "List<Character>.remove" 
"ArrayList.<init>" -- "ArrayList<Integer>.size" 
"ArrayList.<init>" -- "List<Integer>.size" 
"ArrayList.<init>" -- "List<List<Integer>>.add" 
"ArrayList.<init>" -- "List<Integer>.get" 
"ArrayList.<init>" -- "ArrayList<Integer>.add" 
"ArrayList.<init>" -- "ArrayList<Integer>.remove" 
"ArrayList.<init>" -- "StringBuffer.<init>" 
"ArrayList.<init>" -- "StringBuffer.append" 
"ArrayList.<init>" -- "StringBuffer.toString" 
"ArrayList.<init>" -- "PriorityQueue.<init>" 
"ArrayList.<init>" -- "BigInteger.valueOf" 
"ArrayList.<init>" -- "Integer.equals" 
"ArrayList.<init>" -- "List<<Integer>>.sort" 
"ArrayList.<init>" -- "Cell.<init>" 
"ArrayList.<init>" -- "List<Cell>.add" 
"ArrayList.<init>" -- "List<Integer>.add" 
"ArrayList.<init>" -- "List<List<Integer>>.stream" 
"ArrayList.<init>" -- "StringBuilder.length" 
"ArrayList.<init>" -- "List<Integer>.remove" 
"ArrayList.<init>" -- "PriorityQueue<Integer>.add" 
"ArrayList.<init>" -- "PriorityQueue<Integer>.size" 
"ArrayList.<init>" -- "PriorityQueue<Integer>.poll" 
"ArrayList.<init>" -- "State.getBoard" 
"ArrayList.<init>" -- "State.getEmptyPositions" 
"ArrayList.<init>" -- "List<Position>.forEach" 
"ArrayList.<init>" -- "State.setPlayerNo" 
"ArrayList.<init>" -- "State.getPlayerNo" 
"ArrayList.<init>" -- "Position.<init>" 
"ArrayList.<init>" -- "List<Position>.add" 
"ArrayList.<init>" -- "List<Node>.size" 
"ArrayList.<init>" -- "List<Node>.get" 
"ArrayList.<init>" -- "Node.getText" 
"ArrayList.<init>" -- "List<Node>.addAll" 
"ArrayList.<init>" -- "Node.getPosition" 
"ArrayList.<init>" -- "List<Integer>.addAll" 
"ArrayList.<init>" -- "List<Integer>.stream" 
"ArrayList.<init>" -- "List<String>.add" 
"ArrayList.<init>" -- "Random.<init>" 
"ArrayList.<init>" -- "List<List<Integer>>.get" 
"ArrayList.<init>" -- "Collectors.partitioningBy" 
"ArrayList.<init>" -- "Map<Integer>.put" 
"ArrayList.<init>" -- "Thread.sleep" 
"ArrayList.<init>" -- "Thread.currentThread" 
"ArrayList.<init>" -- "BigDecimal.valueOf" 
"ArrayList.<init>" -- "List<String>.forEach" 
"ArrayList.<init>" -- "LocalDateTime.now" 
"ArrayList.<init>" -- "CountDownLatch.countDown" 
"ArrayList.<init>" -- "CountDownLatch.await" 
"ArrayList.<init>" -- "Label.<init>" 
"ArrayList.<init>" -- "ArrayList<String>.<init>" 
"ArrayList.<init>" -- "FileInputStream.<init>" 
"ArrayList.<init>" -- "Object.<init>" 
"ArrayList.<init>" -- "Relationship.<init>" 
"ArrayList.<init>" -- "List<Relationship>.add" 
"ArrayList.<init>" -- "Path.toString" 
"ArrayList.<init>" -- "Date.<init>" 
"ArrayList.<init>" -- "Product.<init>" 
"ArrayList.<init>" -- "HashMap<String,Object>.<init>" 
"ArrayList.<init>" -- "Connection.createStatement" 
"ArrayList.<init>" -- "Class.cast" 
"ArrayList.<init>" -- "PreparedStatement.setString" 
"ArrayList.<init>" -- "Statement.executeQuery" 
"ArrayList.<init>" -- "ResultSet.next" 
"ArrayList.<init>" -- "ResultSet.getString" 
"ArrayList.<init>" -- "HashMap<String,String>.<init>" 
"ArrayList.<init>" -- "Map<String,String>.put" 
"ArrayList.<init>" -- "Map<String>.put" 
"ArrayList.<init>" -- "List<Message>.get" 
"ArrayList.<init>" -- "Map<Integer>.values" 
"ArrayList.<init>" -- "Map<String>.values" 
"ArrayList.<init>" -- "Collections.singletonList" 
"ArrayList.<init>" -- "Calendar.getInstance" 
"ArrayList.<init>" -- "Calendar.getTime" 
"ArrayList.<init>" -- "FileReader.<init>" 
"ArrayList.<init>" -- "Arrays.copyOfRange" 
"ArrayList.<init>" -- "Random.ints" 
"ArrayList.<init>" -- "Executors.newWorkStealingPool" 
"ArrayList.<init>" -- "Collection<String>.stream" 
"ArrayList.<init>" -- "List.subList" 
"ArrayList.<init>" -- "List<String>.stream" 
"ArrayList.<init>" -- "List.addAll" 
"ArrayList.<init>" -- "LocalDate.now" 
"ArrayList.<init>" -- "LocalDate.of" 
"ArrayList.<init>" -- "LocalDate.ofEpochDay" 
"ArrayList.<init>" -- "ThreadLocalRandom.current" 
"ArrayList.<init>" -- "ServiceLoader.load" 
"ArrayList.<init>" -- "ArrayList<String>.add" 
"ArrayList.<init>" -- "ArrayList<Integer>.toArray" 
"ArrayList.<init>" -- "List<String>.contains" 
"ArrayList.<init>" -- "Iterator<String>.remove" 
"ArrayList.<init>" -- "List<String>.listIterator" 
"ArrayList.<init>" -- "ListIterator<String>.hasNext" 
"ArrayList.<init>" -- "ListIterator<String>.nextIndex" 
"ArrayList.<init>" -- "ListIterator<String>.next" 
"ArrayList.<init>" -- "ListIterator<String>.set" 
"ArrayList.<init>" -- "ListIterator<String>.add" 
"ArrayList.<init>" -- "ListIterator<String>.hasPrevious" 
"ArrayList.<init>" -- "ListIterator<String>.previousIndex" 
"ArrayList.<init>" -- "ListIterator<String>.previous" 
"ArrayList.<init>" -- "ListIterator<String>.forEachRemaining" 
"ArrayList.<init>" -- "Iterator.remove" 
"ArrayList.<init>" -- "Collections.synchronizedList" 
"ArrayList.<init>" -- "List<Object>.addAll" 
"ArrayList.<init>" -- "Collection.cast" 
"ArrayList.<init>" -- "Collection<String>.add" 
"ArrayList.<init>" -- "Collection<String>.removeIf" 
"ArrayList.<init>" -- "Collection<String>.iterator" 
"ArrayList.<init>" -- "Map<Boolean,List<String>>.get" 
"ArrayList.<init>" -- "ArrayList<Integer>.<init>" 
"ArrayList.<init>" -- "ArrayList<Integer>.iterator" 
"ArrayList.<init>" -- "Iterator<Integer>.hasNext" 
"ArrayList.<init>" -- "Iterator<Integer>.next" 
"ArrayList.<init>" -- "Iterator<Integer>.remove" 
"ArrayList.<init>" -- "Collections.sort" 
"ArrayList.<init>" -- "List<String>.remove" 
"ArrayList.<init>" -- "List<String>.removeIf" 
"ArrayList.<init>" -- "ArrayList<ArrayList<Integer>>.add" 
"ArrayList.<init>" -- "ArrayList<ArrayList<Integer>>.get" 
"ArrayList.<init>" -- "ArrayList<ArrayList<Integer>>.size" 
"ArrayList.<init>" -- "ArrayList<ArrayList<String>>.<init>" 
"ArrayList.<init>" -- "ArrayList<ArrayList<ArrayList<String>>>.add" 
"ArrayList.<init>" -- "ArrayList<ArrayList<ArrayList<String>>>.get" 
"ArrayList.<init>" -- "List<Integer>.clear" 
"ArrayList.<init>" -- "List<Integer>.iterator" 
"ArrayList.<init>" -- "Pattern.compile" 
"ArrayList.<init>" -- "Pattern.matcher" 
"ArrayList.<init>" -- "List<String>.isEmpty" 
"ArrayList.<init>" -- "Entry<String>.getKey" 
"ArrayList.<init>" -- "Map<Integer,Integer>.put" 
"ArrayList.<init>" -- "Map<String>.entrySet" 
"ArrayList.<init>" -- "Map<String>.keySet" 
"ArrayList.<init>" -- "TreeMap.<init>" 
"ArrayList.<init>" -- "EnumSet.allOf" 
"ArrayList.<init>" -- "EnumSet.noneOf" 
"ArrayList.<init>" -- "EnumSet.of" 
"ArrayList.<init>" -- "EnumSet.complementOf" 
"ArrayList.<init>" -- "EnumSet.range" 
"ArrayList.<init>" -- "EnumSet.copyOf" 
"ArrayList.<init>" -- "List<Color>.add" 
"ArrayList.<init>" -- "EnumSet<Color>.add" 
"ArrayList.<init>" -- "EnumSet<Color>.contains" 
"ArrayList.<init>" -- "EnumSet<Color>.forEach" 
"ArrayList.<init>" -- "EnumSet<Color>.remove" 
"ArrayList.<init>" -- "CyclicBarrier.await" 
"ArrayList.<init>" -- "CountDownLatch.<init>" 
"ArrayList.<init>" -- "Executors.newScheduledThreadPool" 
"ArrayList.<init>" -- "Calendar.set" 
"ArrayList.<init>" -- "TimeZone.getAvailableIDs" 
"ArrayList.<init>" -- "TimeZone.getTimeZone" 
"ArrayList.<init>" -- "TimeZone.getRawOffset" 
"ArrayList.<init>" -- "StringBuffer.length" 
"ArrayList.<init>" -- "FileWriter.<init>" 
"ArrayList.<init>" -- "List<Number>.add" 
"ArrayList.<init>" -- "List<Boolean>.size" 
"ArrayList.<init>" -- "List<Boolean>.get" 
"ArrayList.<init>" -- "List<List>.add" 
"ArrayList.<init>" -- "List<Boolean>.add" 
"ArrayList.<init>" -- "List<List<Boolean>>.add" 
"ArrayList.<init>" -- "Class.isInstance" 
"ArrayList.<init>" -- "Circle.<init>" 
"ArrayList.<init>" -- "List<Shape>.add" 
"ArrayList.<init>" -- "Shape.name" 
"ArrayList.<init>" -- "Map<String>.get" 
"ArrayList.<init>" -- "Map<String,List<String>>.put" 
"ArrayList.<init>" -- "NetworkInterface.getNetworkInterfaces" 
"ArrayList.<init>" -- "Enumeration<NetworkInterface>.hasMoreElements" 
"ArrayList.<init>" -- "Enumeration<NetworkInterface>.nextElement" 
"ArrayList.<init>" -- "NetworkInterface.isUp" 
"ArrayList.<init>" -- "NetworkInterface.isLoopback" 
"ArrayList.<init>" -- "NetworkInterface.getInterfaceAddresses" 
"ArrayList.<init>" -- "List<InetAddress>.addAll" 
"ArrayList.<init>" -- "InetAddress.getBroadcast" 
"ArrayList.<init>" -- "List<Object>.add" 
"ArrayList.<init>" -- "List<Object>.size" 
"ArrayList.<init>" -- "List<Double>.add" 
"ArrayList.<init>" -- "Instant.now" 
"ArrayList.<init>" -- "Matcher.find" 
"ArrayList.<init>" -- "Matcher.group" 
"ArrayList.<init>" -- "StringTokenizer.<init>" 
"ArrayList.<init>" -- "StreamTokenizer.<init>" 
"ArrayList.<init>" -- "StreamTokenizer.wordChars" 
"ArrayList.<init>" -- "StreamTokenizer.ordinaryChar" 
"ArrayList.<init>" -- "StreamTokenizer.commentChar" 
"ArrayList.<init>" -- "StreamTokenizer.eolIsSignificant" 
"ArrayList.<init>" -- "StreamTokenizer.nextToken" 
"ArrayList.<init>" -- "StringTokenizer.hasMoreElements" 
"ArrayList.<init>" -- "StringTokenizer.nextToken" 
"ArrayList.<init>" -- "JAXBContext.newInstance" 
"ArrayList.<init>" -- "Marshaller.setProperty" 
"ArrayList.<init>" -- "Marshaller.marshal" 
"ArrayList.<init>" -- "Observable.from" 
"ArrayList.<init>" -- "Observable.toBlocking" 
"ArrayList.<init>" -- "Vertex.<init>" 
"ArrayList.<init>" -- "Map<Vertex,List<Vertex>>.putIfAbsent" 
"ArrayList.<init>" -- "Function.<init>" 
"ArrayList.<init>" -- "Map<String,List<Double>>.put" 
"ArrayList.<init>" -- "Button.<init>" 
"ArrayList.<init>" -- "Button.addStyleName" 
"ArrayList.<init>" -- "Button.setEnabled" 
"ArrayList.<init>" -- "PreparedStatement.executeQuery" 
"ArrayList.<init>" -- "ScheduledExecutorService.scheduleWithFixedDelay" 
"ArrayList.<init>" -- "QName.<init>" 
"ArrayList.<init>" -- "ConcurrentMap<String,Book>.values" 
"ArrayList.<init>" -- "List<Book>.addAll" 
"ArrayList.<init>" -- "Map<Integer,Integer>.containsKey" 
"ArrayList.<init>" -- "Map<Integer,Integer>.get" 
"ArrayList.<init>" -- "Map<Integer,Integer>.containsValue" 
"ArrayList.<init>" -- "ServiceLoader.forEach" 
"ArrayList.<init>" -- "Stream<String>.forEach" 
"ArrayList.<init>" -- "Stream.ofAll" 
"ArrayList.<init>" -- "Stream<String>.insert" 
"ArrayList.<init>" -- "Stream<String>.remove" 
"ArrayList.<init>" -- "Query.getResultList" 
"ArrayList.<init>" -- "String.instance" 
"ArrayList.<init>" -- "List<String>.retainAll" 
"ArrayList.<init>" -- "Writer.close" 
"ArrayList.<init>" -- "List<CompletableFuture>.add" 
"ArrayList.<init>" -- "List<CompletableFuture>.stream" 
"ArrayList.<init>" -- "Map.values" 
"ArrayList.<init>" -- "Map.keySet" 
"ArrayList.<init>" -- "Connection.prepareStatement" 
"ArrayList.<init>" -- "Reader.close" 
"ArrayList.<init>" -- "List<String[]>.add" 
"ArrayList.<init>" -- "List<Document>.add" 
"ArrayList.<init>" -- "Document.<init>" 
"ArrayList.<init>" -- "TextField.<init>" 
"ArrayList.<init>" -- "List<Long>.add" 
"ArrayList.<init>" -- "List<Event>.add" 
"ArrayList.<init>" -- "List<Book>.size" 
"ArrayList.<init>" -- "Map<Long>.entrySet" 
"ArrayList.<init>" -- "List<Connection>.add" 
"ArrayList.<init>" -- "ResultSet.getInt" 
"ArrayList.<init>" -- "ResultSet.getLong" 
"ArrayList.<init>" -- "List<Book>.add" 
"ArrayList.<init>" -- "List<Book>.get" 
"ArrayList.<init>" -- "UUID.fromString" 
"ArrayList.<init>" -- "List<String>.cast" 
"ArrayList.<init>" -- "List<String[]>.cast" 
"ArrayList.<init>" -- "Document.append" 
"ArrayList.<init>" -- "ArrayList.build" 
"ArrayList.<init>" -- "Collection.add" 
"ArrayList.<init>" -- "List<Predicate>.add" 
"ArrayList.<init>" -- "List<Predicate>.size" 
"ArrayList.<init>" -- "List<Predicate>.toArray" 
"ArrayList.<init>" -- "Iterator<Map<String,Object>>.hasNext" 
"ArrayList.<init>" -- "Iterator<Map<String,Object>>.next" 
"ArrayList.<init>" -- "List<Map<String,Object>>.indexOf" 
"ArrayList.<init>" -- "List<Object[]>.add" 
"ArrayList.<init>" -- "List<Float>.add" 
"ArrayList.<init>" -- "ResultSet.getBigDecimal" 
"ArrayList.<init>" -- "HashMap<String>.get" 
"ArrayList.<init>" -- "HashMap<String>.values" 
"ArrayList.<init>" -- "Collection<>.add" 
"ArrayList.<init>" -- "List<LinkedHashMap<String,String>>.cast" 
"ArrayList.<init>" -- "LinkedHashMap<String,String>.get" 
"ArrayList.<init>" -- "Channel.<init>" 
"ArrayList.<init>" -- "Channel.setLink" 
"ArrayList.<init>" -- "Channel.setTitle" 
"ArrayList.<init>" -- "Channel.setDescription" 
"ArrayList.<init>" -- "Channel.setPubDate" 
"ArrayList.<init>" -- "Map<Long,Task>.values" 
"ArrayList.<init>" -- "Parameter.<init>" 
"ArrayList.<init>" -- "Map<Long,Book>.values" 
"ArrayList.<init>" -- "Object>>.add" 
"ArrayList.<init>" -- "Channel.setItems" 
"ArrayList.<init>" -- "Map<Integer,List>.put" 
"ArrayList.<init>" -- "Map<Integer,List>.get" 
"ArrayList.<init>" -- "Map<String,LinkedList<String>>.get" 
"ArrayList.<init>" -- "Entry<Long>.getValue" 
"ArrayList.<init>" -- "Collection<String>.addAll" 
"ArrayList.<init>" -- "Collection<String>.toArray" 
"ArrayList.<init>" -- "Role.getName" 
"ArrayList.<init>" -- "Role.getPrivileges" 
"ArrayList.<init>" -- "Detail.<init>" 
"ArrayList.<init>" -- "List<Detail>.add" 
"ArrayList.<init>" -- "Binder.setBean" 
"ArrayList.<init>" -- "Button.addClickListener" 
"ArrayList.<init>" -- "GridLayout.<init>" 
"ArrayList.<init>" -- "GridLayout.setSpacing" 
"ArrayList.<init>" -- "GridLayout.setMargin" 
"ArrayList.<init>" -- "Label.setId" 
"ArrayList.<init>" -- "Label.setValue" 
"ArrayList.<init>" -- "Label.setCaption" 
"ArrayList.<init>" -- "GridLayout.addComponent" 
"ArrayList.<init>" -- "Link.<init>" 
"ArrayList.<init>" -- "Link.setId" 
"ArrayList.<init>" -- "Link.setTargetName" 
"ArrayList.<init>" -- "TextField.setId" 
"ArrayList.<init>" -- "TextField.setCaption" 
"ArrayList.<init>" -- "TextField.setValue" 
"ArrayList.<init>" -- "TextField.setIcon" 
"ArrayList.<init>" -- "TextArea.<init>" 
"ArrayList.<init>" -- "TextArea.setCaption" 
"ArrayList.<init>" -- "TextArea.setId" 
"ArrayList.<init>" -- "TextArea.setValue" 
"ArrayList.<init>" -- "Panel.<init>" 
"ArrayList.<init>" -- "Panel.setContent" 
"ArrayList.<init>" -- "Button.setId" 
"ArrayList.<init>" -- "Button.setDescription" 
"ArrayList.<init>" -- "Button.setIcon" 
"ArrayList.<init>" -- "Grid.<init>" 
"ArrayList.<init>" -- "Grid<Row>.setColumns" 
"ArrayList.<init>" -- "Row.<init>" 
"ArrayList.<init>" -- "List<Row>.add" 
"ArrayList.<init>" -- "Grid<Row>.setItems" 
"ArrayList.<init>" -- "Panel.setSizeUndefined" 
"ArrayList.<init>" -- "Binder.<init>" 
"ArrayList.<init>" -- "Binder.readBean" 
"ArrayList.<init>" -- "TextField.setWidth" 
"ArrayList.<init>" -- "Binder.forField" 
"ArrayList.<init>" -- "Binder.validate" 
"ArrayList.<init>" -- "ArrayList<String>.get" 
"ArrayList.<init>" -- "Label.setOutputMarkupId" 
"ArrayList.<init>" -- "JAXBContext.createMarshaller" 
"ArrayList.<init>" -- "XMLInputFactory.newInstance" 
"ArrayList.<init>" -- "XMLInputFactory.createXMLEventReader" 
"ArrayList.<init>" -- "XMLEventReader.hasNext" 
"ArrayList.<init>" -- "XMLEventReader.nextEvent" 
"ArrayList.<init>" -- "XMLEvent.isStartElement" 
"ArrayList.<init>" -- "XMLEvent.asStartElement" 
"ArrayList.<init>" -- "StartElement.getName" 
"ArrayList.<init>" -- "StartElement.getAttributeByName" 
"ArrayList.<init>" -- "XMLEvent.asCharacters" 
"ArrayList.<init>" -- "XMLEvent.isEndElement" 
"ArrayList.<init>" -- "XMLEvent.asEndElement" 
"ArrayList.<init>" -- "EndElement.getName" 
"ArrayList.<init>" -- "XMLEvent.getEventType" 
"ArrayList.<init>" -- "Iterator<Attribute>.hasNext" 
"ArrayList.<init>" -- "Iterator<Attribute>.next" 
"ArrayList.<init>" -- "Attribute.getName" 
"ArrayList.<init>" -- "Attribute.getValue" 
"String.length" -- "String.substring" 
"String.length" -- "String.contains" 
"String.length" -- "Byte.parseByte" 
"String.length" -- "Population.<init>" 
"String.length" -- "Population.getFittest" 
"String.length" -- "Arrays.sort" 
"String.length" -- "List<Node>.stream" 
"String.length" -- "Node.getChildren" 
"String.length" -- "Node.<init>" 
"String.length" -- "List<Node>.add" 
"String.length" -- "String.charAt" 
"String.length" -- "String.isEmpty" 
"String.length" -- "LinkedList.<init>" 
"String.length" -- "HashSet.<init>" 
"String.length" -- "Arrays.fill" 
"String.length" -- "StringBuilder.<init>" 
"String.length" -- "StringBuilder.append" 
"String.length" -- "StringBuilder.toString" 
"String.length" -- "String.trim" 
"String.length" -- "File.<init>" 
"String.length" -- "HashMap.<init>" 
"String.length" -- "List<String>.get" 
"String.length" -- "List<String>.size" 
"String.length" -- "String.cast" 
"String.length" -- "System.lineSeparator" 
"String.length" -- "String.toUpperCase" 
"String.length" -- "String.startsWith" 
"String.length" -- "Arrays.equals" 
"String.length" -- "String.toLowerCase" 
"String.length" -- "Map<Character,Integer>.containsKey" 
"String.length" -- "Map<Character,Integer>.get" 
"String.length" -- "Math.max" 
"String.length" -- "Map<Character,Integer>.put" 
"String.length" -- "Set<Character>.contains" 
"String.length" -- "Set<Character>.add" 
"String.length" -- "String.toCharArray" 
"String.length" -- "Character.toString" 
"String.length" -- "Set<String>.add" 
"String.length" -- "Math.min" 
"String.length" -- "Set<String>.addAll" 
"String.length" -- "String.<init>" 
"String.length" -- "StringBuffer.<init>" 
"String.length" -- "StringBuffer.append" 
"String.length" -- "StringBuffer.toString" 
"String.length" -- "Deque<Character>.addFirst" 
"String.length" -- "Deque<Character>.peekFirst" 
"String.length" -- "Deque<Character>.isEmpty" 
"String.length" -- "Deque<Character>.removeFirst" 
"String.length" -- "String.replaceAll" 
"String.length" -- "ChiSquareTest.<init>" 
"String.length" -- "ChiSquareTest.chiSquare" 
"String.length" -- "List<Integer>.add" 
"String.length" -- "StringBuilder.length" 
"String.length" -- "System.currentTimeMillis" 
"String.length" -- "List<Node>.size" 
"String.length" -- "Node.getText" 
"String.length" -- "List<Node>.addAll" 
"String.length" -- "List<Node>.remove" 
"String.length" -- "String.lastIndexOf" 
"String.length" -- "Map<String,String>.entrySet" 
"String.length" -- "String.replace" 
"String.length" -- "Character.isLetterOrDigit" 
"String.length" -- "File.getAbsolutePath" 
"String.length" -- "Label.<init>" 
"String.length" -- "Number.<init>" 
"String.length" -- "Row.createCell" 
"String.length" -- "Cell.setCellValue" 
"String.length" -- "Cell.setCellStyle" 
"String.length" -- "FileOutputStream.<init>" 
"String.length" -- "FileOutputStream.close" 
"String.length" -- "Paths.get" 
"String.length" -- "Map<String,String>.put" 
"String.length" -- "Entry<String,String>.getKey" 
"String.length" -- "Entry<String,String>.getValue" 
"String.length" -- "ByteBuffer.allocate" 
"String.length" -- "ByteBuffer.put" 
"String.length" -- "Files.createTempFile" 
"String.length" -- "String.matches" 
"String.length" -- "String.getBytes" 
"String.length" -- "InputStream.close" 
"String.length" -- "Function<>.apply" 
"String.length" -- "LinkedHashSet.<init>" 
"String.length" -- "ArrayList<Integer>.<init>" 
"String.length" -- "Pattern.matcher" 
"String.length" -- "ForkJoinTask.invokeAll" 
"String.length" -- "Integer.valueOf" 
"String.length" -- "FileOutputStream.write" 
"String.length" -- "String.endsWith" 
"String.length" -- "Files.walk" 
"String.length" -- "Files.copy" 
"String.length" -- "InputStream.read" 
"String.length" -- "String.indexOf" 
"String.length" -- "Set.size" 
"String.length" -- "Files.lines" 
"String.length" -- "URLEncoder.encode" 
"String.length" -- "ByteBuffer.hasRemaining" 
"String.length" -- "ByteBuffer.flip" 
"String.length" -- "Matcher.find" 
"String.length" -- "Matcher.start" 
"String.length" -- "Function<Matcher,String>.apply" 
"String.length" -- "Matcher.end" 
"String.length" -- "Matcher.group" 
"String.length" -- "Integer.toHexString" 
"String.length" -- "String.getChars" 
"String.length" -- "StringBuilder.substring" 
"String.length" -- "String.regionMatches" 
"String.length" -- "Character.isWhitespace" 
"String.length" -- "Map<String,List<String>>.get" 
"String.length" -- "Part.getHeader" 
"String.length" -- "Page.getWebURL" 
"String.length" -- "Page.getParseData" 
"String.length" -- "Request.getParam" 
"String.length" -- "Reader.fromBuf" 
"String.length" -- "Request.version" 
"String.length" -- "Response.apply" 
"String.length" -- "Future.value" 
"String.length" -- "FileOutputStream.flush" 
"String.length" -- "BigDecimal.longValue" 
"String.length" -- "Function<TemporalAccessor>.apply" 
"String.length" -- "BiFunction<ZoneId>.apply" 
"String.length" -- "NodeList.getLength" 
"String.length" -- "NodeList.item" 
"String.length" -- "Node.getChildNodes" 
"String.length" -- "Node.getNodeType" 
"String.length" -- "Node.getNodeValue" 
"String.length" -- "Node.removeChild" 
"String.length" -- "Node.setNodeValue" 
"String.substring" -- "String.contains" 
"String.substring" -- "Byte.parseByte" 
"String.substring" -- "String.valueOf" 
"String.substring" -- "String.equals" 
"String.substring" -- "List<Node>.stream" 
"String.substring" -- "Node.getChildren" 
"String.substring" -- "Node.<init>" 
"String.substring" -- "List<Node>.add" 
"String.substring" -- "String.charAt" 
"String.substring" -- "String.isEmpty" 
"String.substring" -- "HashSet.<init>" 
"String.substring" -- "StringBuilder.<init>" 
"String.substring" -- "StringBuilder.append" 
"String.substring" -- "StringBuilder.toString" 
"String.substring" -- "String.trim" 
"String.substring" -- "File.<init>" 
"String.substring" -- "HashMap.<init>" 
"String.substring" -- "System.lineSeparator" 
"String.substring" -- "String.toUpperCase" 
"String.substring" -- "String.startsWith" 
"String.substring" -- "Map<Character,Integer>.containsKey" 
"String.substring" -- "Map<Character,Integer>.get" 
"String.substring" -- "Math.max" 
"String.substring" -- "Map<Character,Integer>.put" 
"String.substring" -- "Set<Character>.contains" 
"String.substring" -- "Set<Character>.add" 
"String.substring" -- "String.toCharArray" 
"String.substring" -- "Character.toString" 
"String.substring" -- "Set<String>.add" 
"String.substring" -- "Math.min" 
"String.substring" -- "String.<init>" 
"String.substring" -- "String.replaceAll" 
"String.substring" -- "List<Node>.size" 
"String.substring" -- "Node.getText" 
"String.substring" -- "List<Node>.addAll" 
"String.substring" -- "List<Node>.remove" 
"String.substring" -- "List<String>.add" 
"String.substring" -- "String.lastIndexOf" 
"String.substring" -- "Map<String,String>.entrySet" 
"String.substring" -- "String.replace" 
"String.substring" -- "File.getAbsolutePath" 
"String.substring" -- "Label.<init>" 
"String.substring" -- "Number.<init>" 
"String.substring" -- "Row.createCell" 
"String.substring" -- "Cell.setCellValue" 
"String.substring" -- "Cell.setCellStyle" 
"String.substring" -- "FileOutputStream.<init>" 
"String.substring" -- "FileOutputStream.close" 
"String.substring" -- "Paths.get" 
"String.substring" -- "Map<String,String>.put" 
"String.substring" -- "Entry<String,String>.getKey" 
"String.substring" -- "Entry<String,String>.getValue" 
"String.substring" -- "Base64.getDecoder" 
"String.substring" -- "InputStream.close" 
"String.substring" -- "Function<>.apply" 
"String.substring" -- "Pattern.matcher" 
"String.substring" -- "Integer.valueOf" 
"String.substring" -- "File.getCanonicalPath" 
"String.substring" -- "FileOutputStream.write" 
"String.substring" -- "String.endsWith" 
"String.substring" -- "Files.copy" 
"String.substring" -- "InputStream.read" 
"String.substring" -- "String.indexOf" 
"String.substring" -- "URLEncoder.encode" 
"String.substring" -- "File.toPath" 
"String.substring" -- "Character.isWhitespace" 
"String.substring" -- "Map<String,List<String>>.get" 
"String.substring" -- "Part.getHeader" 
"String.substring" -- "Page.getWebURL" 
"String.substring" -- "Page.getParseData" 
"String.substring" -- "Page.getContentData" 
"String.substring" -- "Resource.getFilename" 
"String.substring" -- "FileOutputStream.flush" 
"String.substring" -- "BigDecimal.longValue" 
"String.substring" -- "Function<TemporalAccessor>.apply" 
"String.substring" -- "BiFunction<ZoneId>.apply" 
"String.contains" -- "Byte.parseByte" 
"String.contains" -- "String.isEmpty" 
"String.contains" -- "File.<init>" 
"String.contains" -- "String.cast" 
"String.contains" -- "String.toCharArray" 
"String.contains" -- "StringBuffer.<init>" 
"String.contains" -- "StringBuffer.append" 
"String.contains" -- "StringBuffer.toString" 
"String.contains" -- "String.replaceAll" 
"String.contains" -- "List<String>.add" 
"String.contains" -- "String.replace" 
"String.contains" -- "ArrayList<String>.<init>" 
"String.contains" -- "InputStreamReader.<init>" 
"String.contains" -- "BufferedReader.<init>" 
"String.contains" -- "Enumeration.hasMoreElements" 
"String.contains" -- "Enumeration.nextElement" 
"String.contains" -- "Predicate<String>.<init>" 
"String.contains" -- "Iterable<String>.iterator" 
"String.contains" -- "BufferedReader.readLine" 
"String.contains" -- "PrintWriter.println" 
"String.contains" -- "Socket.getOutputStream" 
"String.contains" -- "PrintWriter.<init>" 
"String.contains" -- "Socket.getInputStream" 
"String.contains" -- "ServerSocket.<init>" 
"String.contains" -- "ServerSocket.accept" 
"String.contains" -- "StringBuffer.length" 
"String.contains" -- "JAXBElement.cast" 
"String.contains" -- "JAXBElement.getValue" 
"String.contains" -- "Text.cast" 
"String.contains" -- "Text.getValue" 
"Population.<init>" -- "Population.getIndividuals" 
"Population.<init>" -- "Population.getFittest" 
"Population.getIndividuals" -- "Population.getFittest" 
"Stream.generate" -- "Engine.builder" 
"Stream.generate" -- "Engine<Double>.stream" 
"Stream.generate" -- "Random.<init>" 
"Stream.generate" -- "Random.nextLong" 
"Stream.generate" -- "Stream.generate(" 
"Stream.generate" -- "Duration.ofSeconds" 
"Engine.builder" -- "Engine<Double>.stream" 
"Engine.builder" -- "Engine<Integer>.stream" 
"Engine.builder" -- "Codec<>.decoder" 
"Engine.builder" -- "Collectors.toSet" 
"Engine.builder" -- "Engine<<Integer>,Integer>.stream" 
"Engine.builder" -- "Engine<<Integer>,Double>.stream" 
"Engine<Double>.stream" -- "Codec<>.decoder" 
"Engine<Double>.stream" -- "Collectors.toSet" 
"Codec<>.decoder" -- "Collectors.toSet" 
"Collectors.toSet" -- "HashSet.<init>" 
"Collectors.toSet" -- "File.<init>" 
"Collectors.toSet" -- "Set<String>.contains" 
"Collectors.toSet" -- "LinkedHashMap.<init>" 
"Collectors.toSet" -- "Map<String,Object>.put" 
"Collectors.toSet" -- "List<Map<String,Object>>.cast" 
"Collectors.toSet" -- "List<Map<String,Object>>.stream" 
"Collectors.toSet" -- "String.cast" 
"Collectors.toSet" -- "Map<String,Object>.get" 
"Collectors.toSet" -- "Stream.of(new" 
"Collectors.toSet" -- "Stream.of" 
"Collectors.toSet" -- "Random.<init>" 
"Collectors.toSet" -- "Map<String,String>.entrySet" 
"Collectors.toSet" -- "Map<String,String>.containsKey" 
"Collectors.toSet" -- "Map<String,String>.get" 
"Collectors.toSet" -- "List.subList" 
"Collectors.toSet" -- "Stream.concat" 
"Collectors.toSet" -- "Set<Object>.stream" 
"Collectors.toSet" -- "Set.stream" 
"Collectors.toSet" -- "Set<String>.stream" 
"Collectors.toSet" -- "File.listFiles" 
"Collectors.toSet" -- "Files.isDirectory" 
"Collectors.toSet" -- "Long.valueOf" 
"Collectors.toSet" -- "Collections.emptySet" 
"Scanner.<init>" -- "Scanner.nextInt" 
"Scanner.<init>" -- "Scanner.close" 
"Scanner.<init>" -- "String.trim" 
"Scanner.<init>" -- "File.<init>" 
"Scanner.<init>" -- "Integer.parseInt" 
"Scanner.<init>" -- "System.exit" 
"Scanner.<init>" -- "InputStreamReader.<init>" 
"Scanner.<init>" -- "BufferedReader.<init>" 
"Scanner.<init>" -- "Pattern.compile" 
"Scanner.<init>" -- "Runtime.getRuntime" 
"Scanner.<init>" -- "Scanner.nextLine" 
"Scanner.<init>" -- "Scanner.next" 
"Scanner.<init>" -- "Scanner.nextDouble" 
"Scanner.<init>" -- "BufferedReader.readLine" 
"Scanner.<init>" -- "Scanner.hasNextInt" 
"Scanner.<init>" -- "Scanner.hasNext" 
"Scanner.<init>" -- "Scanner.hasNextLine" 
"Scanner.<init>" -- "Scanner.useDelimiter" 
"Scanner.<init>" -- "String.equalsIgnoreCase" 
"Scanner.<init>" -- "Response.getBody" 
"Scanner.<init>" -- "Runtime.exec" 
"Scanner.nextInt" -- "Scanner.close" 
"Scanner.nextInt" -- "Integer.parseInt" 
"Scanner.nextInt" -- "InputStreamReader.<init>" 
"Scanner.nextInt" -- "BufferedReader.<init>" 
"Scanner.nextInt" -- "Pattern.compile" 
"Scanner.nextInt" -- "Scanner.nextLine" 
"Scanner.nextInt" -- "Scanner.next" 
"Scanner.nextInt" -- "Scanner.nextDouble" 
"Scanner.nextInt" -- "BufferedReader.readLine" 
"Scanner.nextInt" -- "Scanner.hasNextInt" 
"Scanner.nextInt" -- "Scanner.hasNext" 
"Scanner.close" -- "String.trim" 
"Scanner.close" -- "File.<init>" 
"Scanner.close" -- "Integer.parseInt" 
"Scanner.close" -- "System.exit" 
"Scanner.close" -- "InputStreamReader.<init>" 
"Scanner.close" -- "BufferedReader.<init>" 
"Scanner.close" -- "Pattern.compile" 
"Scanner.close" -- "Scanner.nextLine" 
"Scanner.close" -- "Scanner.next" 
"Scanner.close" -- "Scanner.nextDouble" 
"Scanner.close" -- "BufferedReader.readLine" 
"Scanner.close" -- "Scanner.hasNextInt" 
"Scanner.close" -- "Scanner.hasNext" 
"Scanner.close" -- "Scanner.hasNextLine" 
"Scanner.close" -- "Scanner.useDelimiter" 
"String.valueOf" -- "String.isEmpty" 
"String.valueOf" -- "StringBuilder.<init>" 
"String.valueOf" -- "StringBuilder.append" 
"String.valueOf" -- "StringBuilder.toString" 
"String.valueOf" -- "String.trim" 
"String.valueOf" -- "BigDecimal.<init>" 
"String.valueOf" -- "HashMap.<init>" 
"String.valueOf" -- "Integer.parseInt" 
"String.valueOf" -- "Map<String,Object>.put" 
"String.valueOf" -- "Map<String,Object>.get" 
"String.valueOf" -- "Arrays.asList" 
"String.valueOf" -- "String.toCharArray" 
"String.valueOf" -- "BigInteger.<init>" 
"String.valueOf" -- "String.<init>" 
"String.valueOf" -- "StringBuffer.<init>" 
"String.valueOf" -- "StringBuffer.append" 
"String.valueOf" -- "StringBuffer.toString" 
"String.valueOf" -- "TreeNode.getValue" 
"String.valueOf" -- "TreeNode.getLeftChild" 
"String.valueOf" -- "TreeNode.getRightChild" 
"String.valueOf" -- "StringBuilder.length" 
"String.valueOf" -- "System.currentTimeMillis" 
"String.valueOf" -- "Region.toString" 
"String.valueOf" -- "Point.toString" 
"String.valueOf" -- "List<Node>.size" 
"String.valueOf" -- "List<Node>.get" 
"String.valueOf" -- "List<String>.add" 
"String.valueOf" -- "Random.<init>" 
"String.valueOf" -- "Double.parseDouble" 
"String.valueOf" -- "Thread.sleep" 
"String.valueOf" -- "Runnable.<init>" 
"String.valueOf" -- "Builder.name" 
"String.valueOf" -- "Thread.currentThread" 
"String.valueOf" -- "Thread.<init>" 
"String.valueOf" -- "Thread.start" 
"String.valueOf" -- "String.replace" 
"String.valueOf" -- "ByteArrayOutputStream.<init>" 
"String.valueOf" -- "ByteArrayOutputStream.toByteArray" 
"String.valueOf" -- "Map<String,String>.put" 
"String.valueOf" -- "InputStreamReader.<init>" 
"String.valueOf" -- "Response.text" 
"String.valueOf" -- "ScriptEngine.eval" 
"String.valueOf" -- "LocalTime.now" 
"String.valueOf" -- "Collection.instance" 
"String.valueOf" -- "Collection.cast" 
"String.valueOf" -- "Pattern.compile" 
"String.valueOf" -- "Pattern.matcher" 
"String.valueOf" -- "ExecutorService.execute" 
"String.valueOf" -- "Executors.newSingleThreadExecutor" 
"String.valueOf" -- "System.console" 
"String.valueOf" -- "Console.printf" 
"String.valueOf" -- "Console.readPassword" 
"String.valueOf" -- "Reader.read" 
"String.valueOf" -- "ByteArrayOutputStream.write" 
"String.valueOf" -- "BigDecimal.intValue" 
"String.valueOf" -- "BigDecimal.toPlainString" 
"String.valueOf" -- "BigDecimal.subtract" 
"String.valueOf" -- "String.indexOf" 
"String.valueOf" -- "Map<Integer,String>.put" 
"String.valueOf" -- "BigDecimal.add" 
"String.valueOf" -- "Response.created" 
"String.valueOf" -- "Environment.getProperty" 
"String.valueOf" -- "Duration.ofSeconds" 
"String.valueOf" -- "ScriptEngineManager.<init>" 
"String.valueOf" -- "Message.getMessageProperties" 
"String.valueOf" -- "Channel.basicReject" 
"String.valueOf" -- "ScriptEngineManager.getEngineByName" 
"String.valueOf" -- "Map<String,Object>.remove" 
"String.valueOf" -- "Date.instance" 
"String.valueOf" -- "Date.cast" 
"Stack<String>.get" -- "String.equals" 
"String.equals" -- "String.isEmpty" 
"String.equals" -- "HashSet.<init>" 
"String.equals" -- "StringBuilder.<init>" 
"String.equals" -- "StringBuilder.append" 
"String.equals" -- "StringBuilder.toString" 
"String.equals" -- "List<String>.get" 
"String.equals" -- "String.compareTo" 
"String.equals" -- "AssertionError.<init>" 
"String.equals" -- "Object.getClass" 
"String.equals" -- "Objects.equals" 
"String.equals" -- "Set<String>.contains" 
"String.equals" -- "Collections.singletonMap" 
"String.equals" -- "String.cast" 
"String.equals" -- "String.toUpperCase" 
"String.equals" -- "String.startsWith" 
"String.equals" -- "Double.doubleToLongBits" 
"String.equals" -- "Arrays.equals" 
"String.equals" -- "Arrays.asList" 
"String.equals" -- "String.<init>" 
"String.equals" -- "Integer.equals" 
"String.equals" -- "Response.status" 
"String.equals" -- "Response.ok" 
"String.equals" -- "LocalDateTime.now" 
"String.equals" -- "Long.equals" 
"String.equals" -- "List.equals" 
"String.equals" -- "Map<String,String>.get" 
"String.equals" -- "Date.<init>" 
"String.equals" -- "ClassFileTransformer.<init>" 
"String.equals" -- "Instrumentation.addTransformer" 
"String.equals" -- "InputStreamReader.<init>" 
"String.equals" -- "BufferedReader.<init>" 
"String.equals" -- "Date.before" 
"String.equals" -- "List<String>.contains" 
"String.equals" -- "Predicate<String>.<init>" 
"String.equals" -- "Map<String>.entrySet" 
"String.equals" -- "Product.getClass" 
"String.equals" -- "Product.cast" 
"String.equals" -- "BufferedReader.readLine" 
"String.equals" -- "ClassLoader.equals" 
"String.equals" -- "Integer.compare" 
"String.equals" -- "Double.compare" 
"String.equals" -- "DatagramSocket.close" 
"String.equals" -- "DatagramPacket.<init>" 
"String.equals" -- "DatagramSocket.receive" 
"String.equals" -- "DatagramSocket.send" 
"String.equals" -- "DatagramPacket.getAddress" 
"String.equals" -- "DatagramPacket.getPort" 
"String.equals" -- "DatagramPacket.getData" 
"String.equals" -- "DatagramPacket.getLength" 
"String.equals" -- "MulticastSocket.receive" 
"String.equals" -- "MulticastSocket.send" 
"String.equals" -- "MulticastSocket.leaveGroup" 
"String.equals" -- "MulticastSocket.close" 
"String.equals" -- "NameCallback.<init>" 
"String.equals" -- "PasswordCallback.<init>" 
"String.equals" -- "CallbackHandler.handle" 
"String.equals" -- "NameCallback.getName" 
"String.equals" -- "PasswordCallback.getPassword" 
"String.equals" -- "Graph.getClass" 
"String.equals" -- "Vertex.cast" 
"String.equals" -- "Vertex.getOuterType" 
"String.equals" -- "Graph.getOuterType" 
"String.equals" -- "Graph.equals" 
"String.equals" -- "BigDecimal.equals" 
"String.equals" -- "Book.cast" 
"String.equals" -- "View.getMembers" 
"String.equals" -- "Optional.orElseThrow" 
"String.equals" -- "Environment.getProperty" 
"String.equals" -- "MultiValueMap<String,String>.add" 
"String.equals" -- "Book.getClass" 
"String.equals" -- "Supplier.getClass" 
"String.equals" -- "Supplier.cast" 
"String.equals" -- "Response.getBody" 
"String.equals" -- "Set<String>.containsAll" 
"String.equals" -- "Form.<init>" 
"String.equals" -- "Form.param" 
"String.equals" -- "Entity.entity" 
"String.equals" -- "Set<View>.addAll" 
"String.equals" -- "Set<View>.stream" 
"List<Stack<String>>.stream" -- "Optional<State>.orElse" 
"List<Stack<String>>.stream" -- "State.getState" 
"List<Stack<String>>.stream" -- "State.getHeuristics" 
"Stack.push" -- "State.<init>" 
"Stack.push" -- "Stack.pop" 
"Stack.push" -- "Stack.<init>" 
"Stack.push" -- "Stack.isEmpty" 
"Stack.push" -- "Stack.addAll" 
"State.<init>" -- "Stack.pop" 
"State.<init>" -- "Stack.<init>" 
"State.<init>" -- "Stack<String>.push" 
"State.<init>" -- "List<Stack<String>>.add" 
"State.<init>" -- "List<Stack<String>>.remove" 
"State.<init>" -- "State.getState" 
"State.<init>" -- "List<State>.add" 
"State.<init>" -- "State.getBoard" 
"State.<init>" -- "State.getEmptyPositions" 
"State.<init>" -- "List<Position>.forEach" 
"State.<init>" -- "State.setPlayerNo" 
"State.<init>" -- "State.getPlayerNo" 
"Stack.pop" -- "Stack.<init>" 
"Stack.pop" -- "Stack.isEmpty" 
"Stack.pop" -- "Stack.addAll" 
"Stack.<init>" -- "Stack<String>.push" 
"Stack.<init>" -- "List<Stack<String>>.add" 
"Stack.<init>" -- "List<Stack<String>>.remove" 
"Stack.<init>" -- "Stack.isEmpty" 
"Stack.<init>" -- "Stack.addAll" 
"Stack<String>.push" -- "List<Stack<String>>.add" 
"Stack<String>.push" -- "List<Stack<String>>.remove" 
"Stack<String>.push" -- "Stack<String>.pop" 
"Stack<String>.push" -- "Stack<String>.size" 
"Stack<String>.push" -- "Set<String>.contains" 
"Stack<String>.push" -- "Set<String>.add" 
"Stack<String>.push" -- "Thread.currentThread" 
"Stack<String>.push" -- "ReentrantLock.lock" 
"Stack<String>.push" -- "ReentrantLock.unlock" 
"Stack<String>.push" -- "Condition.await" 
"Stack<String>.push" -- "Condition.signalAll" 
"Stack<String>.push" -- "LinkedHashSet<String>.<init>" 
"Stack<String>.push" -- "Graph.getAdjVertices" 
"Stack<String>.push" -- "Stack<String>.<init>" 
"Stack<String>.push" -- "Stack<String>.isEmpty" 
"List<Stack<String>>.add" -- "List<Stack<String>>.remove" 
"List<Stack<String>>.add" -- "State.getState" 
"List<Stack<String>>.add" -- "List<State>.add" 
"List<Stack<String>>.remove" -- "Stack<String>.pop" 
"List<Stack<String>>.remove" -- "Stack<String>.size" 
"Stack<String>.pop" -- "Stack<String>.size" 
"Stack<String>.pop" -- "Set<String>.contains" 
"Stack<String>.pop" -- "Set<String>.add" 
"Stack<String>.pop" -- "Thread.currentThread" 
"Stack<String>.pop" -- "ReentrantLock.lock" 
"Stack<String>.pop" -- "ReentrantLock.unlock" 
"Stack<String>.pop" -- "Condition.await" 
"Stack<String>.pop" -- "Condition.signalAll" 
"Stack<String>.pop" -- "LinkedHashSet<String>.<init>" 
"Stack<String>.pop" -- "Graph.getAdjVertices" 
"Stack<String>.pop" -- "Stack<String>.<init>" 
"Stack<String>.pop" -- "Stack<String>.isEmpty" 
"Stack<String>.size" -- "Thread.currentThread" 
"Stack<String>.size" -- "ReentrantLock.lock" 
"Stack<String>.size" -- "ReentrantLock.unlock" 
"Stack<String>.size" -- "Condition.await" 
"Stack<String>.size" -- "Condition.signalAll" 
"State.getState" -- "State.getHeuristics" 
"State.getState" -- "List<State>.add" 
"State.getState" -- "List<Stack<String>>.forEach" 
"List<State>.add" -- "State.getBoard" 
"List<State>.add" -- "State.getEmptyPositions" 
"List<State>.add" -- "List<Position>.forEach" 
"List<State>.add" -- "State.setPlayerNo" 
"List<State>.add" -- "State.getPlayerNo" 
"List<State>.forEach" -- "Node.<init>" 
"List<State>.forEach" -- "Node.getState" 
"List<State>.forEach" -- "Node.setParent" 
"List<State>.forEach" -- "Node.getChildArray" 
"System.arraycopy" -- "Arrays.sort" 
"System.arraycopy" -- "Arrays.asList" 
"System.arraycopy" -- "BigInteger.<init>" 
"System.arraycopy" -- "BigInteger.toByteArray" 
"System.arraycopy" -- "List.cast" 
"System.arraycopy" -- "SecureRandom.nextBytes" 
"System.arraycopy" -- "Base64.getUrlEncoder" 
"System.arraycopy" -- "Encoder.encodeToString" 
"Collections.reverseOrder" -- "Arrays.sort" 
"Collections.reverseOrder" -- "Comparator.comparing" 
"Collections.reverseOrder" -- "List<<Integer>>.sort" 
"Arrays.sort" -- "Comparator.comparing" 
"Arrays.sort" -- "String.isEmpty" 
"Arrays.sort" -- "StringBuilder.<init>" 
"Arrays.sort" -- "StringBuilder.append" 
"Arrays.sort" -- "StringBuilder.toString" 
"Arrays.sort" -- "Arrays.equals" 
"Arrays.sort" -- "Arrays.asList" 
"Arrays.sort" -- "Collections.reverse" 
"Arrays.sort" -- "String.toCharArray" 
"Arrays.sort" -- "String.<init>" 
"Arrays.sort" -- "Arrays.binarySearch" 
"Comparator.comparing" -- "List<Node>.stream" 
"Comparator.comparing" -- "Comparator<Node>.reversed" 
"Comparator.comparing" -- "Comparator.naturalOrder" 
"Comparator.comparing" -- "Comparator.comparing((RomanNumeral" 
"Comparator.comparing" -- "List<<Integer>>.sort" 
"Comparator.comparing" -- "Node.getState" 
"Comparator.comparing" -- "Node.getChildArray" 
"Comparator.comparing" -- "Collections.max" 
"Comparator.comparing" -- "Entry<>.getValue" 
"Comparator.comparing" -- "Executors.newFixedThreadPool" 
"Comparator.comparing" -- "Map<>.entrySet" 
"Comparator.comparing" -- "Optional<Entry<>>.get" 
"Comparator.comparing" -- "ExecutorService.execute" 
"Comparator.comparing" -- "PriorityBlockingQueue.<init>" 
"Comparator.comparing" -- "PriorityBlockingQueue.take" 
"Comparator.comparing" -- "Comparator.nullsLast" 
"Comparator.comparing" -- "List.sort" 
"Comparator.comparing" -- "Values.<init>" 
"List<Node>.stream" -- "Comparator<Node>.reversed" 
"List<Node>.stream" -- "List<Node>.size" 
"List<Node>.stream" -- "List<Node>.remove" 
"Node.getChildren" -- "Node.<init>" 
"Node.getChildren" -- "List<Node>.add" 
"Node.getChildren" -- "String.charAt" 
"Node.getChildren" -- "Math.min" 
"Node.getChildren" -- "List<Integer>.add" 
"Node.getChildren" -- "List<Node>.size" 
"Node.getChildren" -- "Node.getText" 
"Node.getChildren" -- "List<Node>.addAll" 
"Node.getChildren" -- "Node.getPosition" 
"Node.getChildren" -- "Node.setText" 
"Node.getChildren" -- "Node.setPosition" 
"Node.getChildren" -- "List<Integer>.addAll" 
"Node.getScore" -- "Tree.getRoot" 
"Tree.getRoot" -- "Tree.<init>" 
"Tree.getRoot" -- "Tree.setRoot" 
"Tree.getRoot" -- "Node.getState" 
"Tree.getRoot" -- "Node.getChildArray" 
"Tree.getRoot" -- "System.currentTimeMillis" 
"Tree.getRoot" -- "Node.getRandomChildNode" 
"Tree.getRoot" -- "Node.getChildWithMaxScore" 
"List<Integer>.forEach" -- "StringBuilder.<init>" 
"List<Integer>.forEach" -- "StringBuilder.append" 
"List<Integer>.forEach" -- "StringBuilder.toString" 
"List<Integer>.forEach" -- "Arrays.asList" 
"List<Integer>.forEach" -- "Collections.reverse" 
"List<Integer>.forEach" -- "PriorityQueue.<init>" 
"List<Integer>.forEach" -- "List<Integer>.add" 
"List<Integer>.forEach" -- "StringBuilder.length" 
"List<Integer>.forEach" -- "PriorityQueue<Integer>.add" 
"List<Integer>.forEach" -- "PriorityQueue<Integer>.size" 
"List<Integer>.forEach" -- "PriorityQueue<Integer>.poll" 
"List<Integer>.forEach" -- "List<Node>.size" 
"List<Integer>.forEach" -- "List<Node>.get" 
"List<Integer>.forEach" -- "List<Integer>.stream" 
"List<Integer>.forEach" -- "List<String>.add" 
"List<Integer>.forEach" -- "Double.parseDouble" 
"List<Integer>.forEach" -- "Collections.sort" 
"List<Integer>.forEach" -- "Math.ceil" 
"List<Integer>.forEach" -- "Frequency.<init>" 
"List<Integer>.forEach" -- "Frequency.addValue" 
"List<Integer>.forEach" -- "Frequency.getCount" 
"List<Integer>.forEach" -- "Math.multiplyExact" 
"List<Integer>.forEach" -- "Math.subtractExact" 
"Node.<init>" -- "Tree.<init>" 
"Node.<init>" -- "Tree.setRoot" 
"Node.<init>" -- "BinaryTree.addRecursive" 
"Node.<init>" -- "Node.getState" 
"Node.<init>" -- "State.getBoard" 
"Node.<init>" -- "Node.getParent" 
"Node.<init>" -- "State.togglePlayer" 
"Node.<init>" -- "State.randomPlay" 
"Node.<init>" -- "Node.setParent" 
"Node.<init>" -- "Node.getChildArray" 
"Node.<init>" -- "Node.getPosition" 
"Node.<init>" -- "Node.setText" 
"Node.<init>" -- "Node.setPosition" 
"Node.<init>" -- "AtomicInteger.incrementAndGet" 
"Node.<init>" -- "AtomicReference<Node>.get" 
"Node.<init>" -- "AtomicReference<Node>.compareAndSet" 
"Node.<init>" -- "Node.setPrevious" 
"Tree.<init>" -- "Tree.setRoot" 
"Tree.<init>" -- "Node.getState" 
"Tree.<init>" -- "Node.getChildArray" 
"Tree.<init>" -- "System.currentTimeMillis" 
"Tree.<init>" -- "Node.getRandomChildNode" 
"Tree.<init>" -- "Node.getChildWithMaxScore" 
"Tree.setRoot" -- "Node.getState" 
"Tree.setRoot" -- "Node.getChildArray" 
"Tree.setRoot" -- "System.currentTimeMillis" 
"Tree.setRoot" -- "Node.getRandomChildNode" 
"Tree.setRoot" -- "Node.getChildWithMaxScore" 
"List<Node>.add" -- "String.charAt" 
"List<Node>.add" -- "Math.min" 
"List<Node>.add" -- "List<Node>.size" 
"List<Node>.add" -- "Node.getText" 
"List<Node>.add" -- "List<Node>.addAll" 
"String.charAt" -- "String.isEmpty" 
"String.charAt" -- "HashSet.<init>" 
"String.charAt" -- "Arrays.fill" 
"String.charAt" -- "StringBuilder.<init>" 
"String.charAt" -- "StringBuilder.append" 
"String.charAt" -- "StringBuilder.toString" 
"String.charAt" -- "HashMap.<init>" 
"String.charAt" -- "String.toUpperCase" 
"String.charAt" -- "Map<Character,Integer>.containsKey" 
"String.charAt" -- "Map<Character,Integer>.get" 
"String.charAt" -- "Math.max" 
"String.charAt" -- "Map<Character,Integer>.put" 
"String.charAt" -- "Set<Character>.contains" 
"String.charAt" -- "Set<Character>.add" 
"String.charAt" -- "Set<String>.add" 
"String.charAt" -- "Math.min" 
"String.charAt" -- "Character.digit" 
"String.charAt" -- "String.replaceAll" 
"String.charAt" -- "List<Node>.size" 
"String.charAt" -- "Node.getText" 
"String.charAt" -- "List<Node>.addAll" 
"String.charAt" -- "List<String>.add" 
"String.charAt" -- "Character.isUpperCase" 
"String.charAt" -- "Character.isLetterOrDigit" 
"String.charAt" -- "LinkedHashSet.<init>" 
"String.charAt" -- "String.indexOf" 
"String.charAt" -- "Character.isWhitespace" 
"String.isEmpty" -- "HashSet.<init>" 
"String.isEmpty" -- "StringBuilder.<init>" 
"String.isEmpty" -- "StringBuilder.append" 
"String.isEmpty" -- "StringBuilder.toString" 
"String.isEmpty" -- "Collectors.joining" 
"String.isEmpty" -- "String.startsWith" 
"String.isEmpty" -- "Arrays.asList" 
"String.isEmpty" -- "String.toCharArray" 
"String.isEmpty" -- "Set<String>.add" 
"String.isEmpty" -- "Set<String>.addAll" 
"String.isEmpty" -- "String.replaceAll" 
"String.isEmpty" -- "List<String>.add" 
"String.isEmpty" -- "Response.status" 
"String.isEmpty" -- "Response.ok" 
"String.isEmpty" -- "Label.<init>" 
"String.isEmpty" -- "ArrayList<String>.<init>" 
"String.isEmpty" -- "FileOutputStream.<init>" 
"String.isEmpty" -- "FileOutputStream.close" 
"String.isEmpty" -- "Date.<init>" 
"String.isEmpty" -- "InputStreamReader.<init>" 
"String.isEmpty" -- "BufferedReader.<init>" 
"String.isEmpty" -- "Principal.getName" 
"String.isEmpty" -- "LocalDate.now" 
"String.isEmpty" -- "Period.between" 
"String.isEmpty" -- "Date.before" 
"String.isEmpty" -- "Field.getAnnotation" 
"String.isEmpty" -- "Field.getName" 
"String.isEmpty" -- "List<String>.contains" 
"String.isEmpty" -- "Collection.instance" 
"String.isEmpty" -- "Collection.cast" 
"String.isEmpty" -- "Pattern.compile" 
"String.isEmpty" -- "SecureRandom.<init>" 
"String.isEmpty" -- "BufferedReader.readLine" 
"String.isEmpty" -- "KeyStore.load" 
"String.isEmpty" -- "KeyStore.getDefaultType" 
"String.isEmpty" -- "KeyStore.getInstance" 
"String.isEmpty" -- "KeyStore.store" 
"String.isEmpty" -- "SecureRandom.getInstance" 
"String.isEmpty" -- "BreakIterator.getTitleInstance" 
"String.isEmpty" -- "Character.toTitleCase" 
"String.isEmpty" -- "Character.isSpaceChar" 
"String.isEmpty" -- "Character.toLowerCase" 
"String.isEmpty" -- "Button.<init>" 
"String.isEmpty" -- "Button.addStyleName" 
"String.isEmpty" -- "Button.getElement" 
"String.isEmpty" -- "HTML.<init>" 
"String.isEmpty" -- "Button.addClickHandler" 
"String.isEmpty" -- "Button.setEnabled" 
"String.isEmpty" -- "Button.setFocus" 
"String.isEmpty" -- "Label.setText" 
"String.isEmpty" -- "HTML.setText" 
"String.isEmpty" -- "HTML.addStyleName" 
"String.isEmpty" -- "HTML.setHTML" 
"String.isEmpty" -- "HTML.removeStyleName" 
"String.isEmpty" -- "Optional.orElseThrow" 
"String.isEmpty" -- "MultiValueMap<String,String>.add" 
"String.isEmpty" -- "Set<String>.containsAll" 
"String.isEmpty" -- "Form.<init>" 
"String.isEmpty" -- "Form.param" 
"String.isEmpty" -- "Entity.entity" 
"String.isEmpty" -- "Response.readEntity" 
"String.isEmpty" -- "Response.getStatus" 
"String.isEmpty" -- "Collection.isEmpty" 
"String.isEmpty" -- "Result.include" 
"String.isEmpty" -- "Result.redirectTo" 
"Node.getDistance" -- "Node.setDistance" 
"Node.getDistance" -- "Node.getShortestPath" 
"Node.getDistance" -- "LinkedList.<init>" 
"Node.getDistance" -- "LinkedList<Node>.add" 
"Node.getDistance" -- "Node.setShortestPath" 
"Node.setDistance" -- "Node.getShortestPath" 
"Node.setDistance" -- "LinkedList.<init>" 
"Node.setDistance" -- "LinkedList<Node>.add" 
"Node.setDistance" -- "Node.setShortestPath" 
"Node.setDistance" -- "HashSet.<init>" 
"Node.setDistance" -- "Set<Node>.add" 
"Node.setDistance" -- "Set<Node>.size" 
"Node.setDistance" -- "Set<Node>.remove" 
"Node.setDistance" -- "Node.getAdjacentNodes" 
"Node.setDistance" -- "Entry<Node,Integer>.getKey" 
"Node.setDistance" -- "Entry<Node,Integer>.getValue" 
"Node.setDistance" -- "Set<Node>.contains" 
"Node.getShortestPath" -- "LinkedList.<init>" 
"Node.getShortestPath" -- "LinkedList<Node>.add" 
"Node.getShortestPath" -- "Node.setShortestPath" 
"LinkedList.<init>" -- "LinkedList<Node>.add" 
"LinkedList.<init>" -- "Node.setShortestPath" 
"LinkedList.<init>" -- "LinkedList.add" 
"LinkedList.<init>" -- "LinkedList.isEmpty" 
"LinkedList.<init>" -- "LinkedList.remove" 
"LinkedList.<init>" -- "Collections.emptyList" 
"LinkedList.<init>" -- "Arrays.fill" 
"LinkedList.<init>" -- "Arrays.asList" 
"LinkedList.<init>" -- "String.toCharArray" 
"LinkedList.<init>" -- "Deque<Character>.addFirst" 
"LinkedList.<init>" -- "Deque<Character>.peekFirst" 
"LinkedList.<init>" -- "Deque<Character>.isEmpty" 
"LinkedList.<init>" -- "Deque<Character>.removeFirst" 
"LinkedList.<init>" -- "Arrays.deepToString" 
"LinkedList.<init>" -- "Arrays.copyOf" 
"LinkedList.<init>" -- "LinkedList<Integer>.add" 
"LinkedList.<init>" -- "LinkedList<Integer>.size" 
"LinkedList.<init>" -- "LinkedList<Integer>.pop" 
"LinkedList.<init>" -- "LinkedList<Integer>.peek" 
"LinkedList.<init>" -- "LinkedList<Integer>.addAll" 
"LinkedList.<init>" -- "LinkedList<Integer>.isEmpty" 
"LinkedList.<init>" -- "List<Integer>.add" 
"LinkedList.<init>" -- "Stream.of" 
"LinkedList.<init>" -- "Queue<Node>.add" 
"LinkedList.<init>" -- "Queue<Node>.isEmpty" 
"LinkedList.<init>" -- "Queue<Node>.remove" 
"LinkedList.<init>" -- "List<Integer>.addAll" 
"LinkedList.<init>" -- "Pattern.matcher" 
"LinkedList.<init>" -- "Matcher.find" 
"LinkedList.<init>" -- "Matcher.group" 
"LinkedList.<init>" -- "Map<String>.containsKey" 
"LinkedList.<init>" -- "Deque<String>.peek" 
"LinkedList.<init>" -- "Deque<String>.isEmpty" 
"LinkedList.<init>" -- "Deque<String>.pop" 
"LinkedList.<init>" -- "Deque<Object>.push" 
"LinkedList.<init>" -- "Deque<String>.push" 
"LinkedList<Node>.add" -- "Node.setShortestPath" 
"HashSet.<init>" -- "Set<Node>.add" 
"HashSet.<init>" -- "Set<Node>.size" 
"HashSet.<init>" -- "Set<Node>.remove" 
"HashSet.<init>" -- "Node.getAdjacentNodes" 
"HashSet.<init>" -- "Entry<Node,Integer>.getKey" 
"HashSet.<init>" -- "Entry<Node,Integer>.getValue" 
"HashSet.<init>" -- "Set<Node>.contains" 
"HashSet.<init>" -- "StringBuilder.<init>" 
"HashSet.<init>" -- "StringBuilder.append" 
"HashSet.<init>" -- "StringBuilder.toString" 
"HashSet.<init>" -- "HashMap.<init>" 
"HashSet.<init>" -- "HashMap<Double>.<init>" 
"HashSet.<init>" -- "Set.add" 
"HashSet.<init>" -- "HashMap<Double>.put" 
"HashSet.<init>" -- "Map<HashMap<Double>>.put" 
"HashSet.<init>" -- "Iterator.next" 
"HashSet.<init>" -- "Iterator.hasNext" 
"HashSet.<init>" -- "Set<String>.contains" 
"HashSet.<init>" -- "String.join" 
"HashSet.<init>" -- "String.cast" 
"HashSet.<init>" -- "Optional.ofNullable" 
"HashSet.<init>" -- "Arrays.asList" 
"HashSet.<init>" -- "Math.max" 
"HashSet.<init>" -- "Set<Character>.contains" 
"HashSet.<init>" -- "Set<Character>.add" 
"HashSet.<init>" -- "String.toCharArray" 
"HashSet.<init>" -- "Character.toString" 
"HashSet.<init>" -- "Set<String>.add" 
"HashSet.<init>" -- "Math.min" 
"HashSet.<init>" -- "Set<String>.addAll" 
"HashSet.<init>" -- "Response.status" 
"HashSet.<init>" -- "Entry<>.getValue" 
"HashSet.<init>" -- "Paths.get" 
"HashSet.<init>" -- "Path.getFileName" 
"HashSet.<init>" -- "Map<String,Set<String>>.containsKey" 
"HashSet.<init>" -- "Map<String,Set<String>>.get" 
"HashSet.<init>" -- "Date.<init>" 
"HashSet.<init>" -- "Long.<init>" 
"HashSet.<init>" -- "Map<Integer>.values" 
"HashSet.<init>" -- "Date.before" 
"HashSet.<init>" -- "Set<Integer>.size" 
"HashSet.<init>" -- "Set<Integer>.toArray" 
"HashSet.<init>" -- "LinkedHashSet.<init>" 
"HashSet.<init>" -- "Set<Object>.addAll" 
"HashSet.<init>" -- "Map<>.entrySet" 
"HashSet.<init>" -- "Entry<>.getKey" 
"HashSet.<init>" -- "Set.addAll" 
"HashSet.<init>" -- "Set<String>.stream" 
"HashSet.<init>" -- "Objects.requireNonNull" 
"HashSet.<init>" -- "Files.isDirectory" 
"HashSet.<init>" -- "SimpleFileVisitor<Path>.<init>" 
"HashSet.<init>" -- "Files.walkFileTree" 
"HashSet.<init>" -- "Set<Set>.add" 
"HashSet.<init>" -- "List<Boolean>.size" 
"HashSet.<init>" -- "List<Boolean>.get" 
"HashSet.<init>" -- "HashSet.add" 
"HashSet.<init>" -- "Set.isEmpty" 
"HashSet.<init>" -- "Set.iterator" 
"HashSet.<init>" -- "Set<Set>.addAll" 
"HashSet.<init>" -- "HashSet<String>.contains" 
"HashSet.<init>" -- "HashSet<String>.add" 
"HashSet.<init>" -- "Map<String,List<String>>.get" 
"HashSet.<init>" -- "Set.forEach" 
"HashSet.<init>" -- "Set<String>.containsAll" 
"HashSet.<init>" -- "Collection.add" 
"HashSet.<init>" -- "Role.getRole" 
"HashSet.<init>" -- "Set<View>.addAll" 
"HashSet.<init>" -- "Set<View>.stream" 
"Set<Node>.add" -- "Set<Node>.size" 
"Set<Node>.add" -- "Set<Node>.remove" 
"Set<Node>.add" -- "Node.getAdjacentNodes" 
"Set<Node>.add" -- "Entry<Node,Integer>.getKey" 
"Set<Node>.add" -- "Entry<Node,Integer>.getValue" 
"Set<Node>.add" -- "Set<Node>.contains" 
"Set<Node>.size" -- "Set<Node>.remove" 
"Set<Node>.size" -- "Node.getAdjacentNodes" 
"Set<Node>.size" -- "Entry<Node,Integer>.getKey" 
"Set<Node>.size" -- "Entry<Node,Integer>.getValue" 
"Set<Node>.size" -- "Set<Node>.contains" 
"Set<Node>.remove" -- "Node.getAdjacentNodes" 
"Set<Node>.remove" -- "Entry<Node,Integer>.getKey" 
"Set<Node>.remove" -- "Entry<Node,Integer>.getValue" 
"Set<Node>.remove" -- "Set<Node>.contains" 
"Node.getAdjacentNodes" -- "Entry<Node,Integer>.getKey" 
"Node.getAdjacentNodes" -- "Entry<Node,Integer>.getValue" 
"Node.getAdjacentNodes" -- "Set<Node>.contains" 
"Entry<Node,Integer>.getKey" -- "Entry<Node,Integer>.getValue" 
"Entry<Node,Integer>.getKey" -- "Set<Node>.contains" 
"Entry<Node,Integer>.getValue" -- "Set<Node>.contains" 
"LinkedList.add" -- "LinkedList.isEmpty" 
"LinkedList.add" -- "LinkedList.remove" 
"LinkedList.add" -- "Collections.emptyList" 
"LinkedList.isEmpty" -- "LinkedList.remove" 
"LinkedList.isEmpty" -- "Collections.emptyList" 
"LinkedList.remove" -- "Collections.emptyList" 
"Collections.emptyList" -- "Arrays.asList" 
"Collections.emptyList" -- "Math.min" 
"Collections.emptyList" -- "Stream.of" 
"Collections.emptyList" -- "Class.getSimpleName" 
"Collections.emptyList" -- "Function.<init>" 
"Collections.emptyList" -- "Repository.getName" 
"Collections.emptyList" -- "List<Repository>.stream" 
"Collections.emptyList" -- "List<Book>.size" 
"Collections.emptyList" -- "Pageable.getPageNumber" 
"Collections.emptyList" -- "Pageable.getPageSize" 
"Collections.emptyList" -- "List<Book>.subList" 
"List.remove" -- "Response.status" 
"List.remove" -- "Response.ok" 
"List.remove" -- "BigDecimal.subtract" 
"Arrays.fill" -- "String.toUpperCase" 
"Arrays.fill" -- "List<Integer>.add" 
"StringBuilder.<init>" -- "StringBuilder.append" 
"StringBuilder.<init>" -- "StringBuilder.toString" 
"StringBuilder.<init>" -- "String.trim" 
"StringBuilder.<init>" -- "Integer.toString" 
"StringBuilder.<init>" -- "List<String>.iterator" 
"StringBuilder.<init>" -- "Iterator<String>.next" 
"StringBuilder.<init>" -- "Iterator<String>.hasNext" 
"StringBuilder.<init>" -- "Vertex.isVisited" 
"StringBuilder.<init>" -- "String.join" 
"StringBuilder.<init>" -- "System.lineSeparator" 
"StringBuilder.<init>" -- "String.toUpperCase" 
"StringBuilder.<init>" -- "String.chars" 
"StringBuilder.<init>" -- "String.toLowerCase" 
"StringBuilder.<init>" -- "Set<Character>.add" 
"StringBuilder.<init>" -- "String.toCharArray" 
"StringBuilder.<init>" -- "StringBuilder.reverse" 
"StringBuilder.<init>" -- "String.<init>" 
"StringBuilder.<init>" -- "Vertex.includedToString" 
"StringBuilder.<init>" -- "Entry<Vertex,Edge>>.hasNext" 
"StringBuilder.<init>" -- "Entry<Vertex,Edge>>.next" 
"StringBuilder.<init>" -- "Entry<Vertex,Edge>.getValue" 
"StringBuilder.<init>" -- "Vertex.originalToString" 
"StringBuilder.<init>" -- "Map<Vertex,Edge>.entrySet" 
"StringBuilder.<init>" -- "Vertex.getLabel" 
"StringBuilder.<init>" -- "Entry<Vertex,Edge>.getKey" 
"StringBuilder.<init>" -- "String.replaceAll" 
"StringBuilder.<init>" -- "Cell.<init>" 
"StringBuilder.<init>" -- "List<Integer>.add" 
"StringBuilder.<init>" -- "StringBuilder.length" 
"StringBuilder.<init>" -- "StringBuilder.insert" 
"StringBuilder.<init>" -- "ArrayList<Point>.<init>" 
"StringBuilder.<init>" -- "Region.containsPoint" 
"StringBuilder.<init>" -- "List<Point>.add" 
"StringBuilder.<init>" -- "Map<String,String>.entrySet" 
"StringBuilder.<init>" -- "LocalDateTime.now" 
"StringBuilder.<init>" -- "Object.<init>" 
"StringBuilder.<init>" -- "Connection.createStatement" 
"StringBuilder.<init>" -- "PreparedStatement.setString" 
"StringBuilder.<init>" -- "InputStreamReader.<init>" 
"StringBuilder.<init>" -- "BufferedReader.<init>" 
"StringBuilder.<init>" -- "Entry<String,String>.getKey" 
"StringBuilder.<init>" -- "Entry<String,String>.getValue" 
"StringBuilder.<init>" -- "FileReader.<init>" 
"StringBuilder.<init>" -- "URL.<init>" 
"StringBuilder.<init>" -- "URL.openConnection" 
"StringBuilder.<init>" -- "HttpURLConnection.cast" 
"StringBuilder.<init>" -- "HttpURLConnection.setRequestMethod" 
"StringBuilder.<init>" -- "HttpURLConnection.setRequestProperty" 
"StringBuilder.<init>" -- "HttpURLConnection.setDoOutput" 
"StringBuilder.<init>" -- "String.getBytes" 
"StringBuilder.<init>" -- "HttpURLConnection.getResponseCode" 
"StringBuilder.<init>" -- "MessageDigest.getInstance" 
"StringBuilder.<init>" -- "MessageDigest.update" 
"StringBuilder.<init>" -- "MessageDigest.digest" 
"StringBuilder.<init>" -- "DateTimeFormatter.ofPattern" 
"StringBuilder.<init>" -- "LinkedHashSet.<init>" 
"StringBuilder.<init>" -- "List<String>.contains" 
"StringBuilder.<init>" -- "Collection.instance" 
"StringBuilder.<init>" -- "Collection.cast" 
"StringBuilder.<init>" -- "ArrayList<Integer>.<init>" 
"StringBuilder.<init>" -- "Pattern.compile" 
"StringBuilder.<init>" -- "Pattern.matcher" 
"StringBuilder.<init>" -- "List<String>.isEmpty" 
"StringBuilder.<init>" -- "Map<Integer>.keySet" 
"StringBuilder.<init>" -- "Map<Integer>.get" 
"StringBuilder.<init>" -- "StringBuilder.delete" 
"StringBuilder.<init>" -- "BufferedImage.getGraphics" 
"StringBuilder.<init>" -- "Graphics2D.drawString" 
"StringBuilder.<init>" -- "BufferedImage.getRGB" 
"StringBuilder.<init>" -- "BufferedReader.readLine" 
"StringBuilder.<init>" -- "Integer.valueOf" 
"StringBuilder.<init>" -- "BufferedReader.close" 
"StringBuilder.<init>" -- "Socket.getInputStream" 
"StringBuilder.<init>" -- "ServerSocket.<init>" 
"StringBuilder.<init>" -- "ServerSocket.accept" 
"StringBuilder.<init>" -- "BufferedReader.read" 
"StringBuilder.<init>" -- "Reader.read" 
"StringBuilder.<init>" -- "ClassLoader.equals" 
"StringBuilder.<init>" -- "String.indexOf" 
"StringBuilder.<init>" -- "Book.<init>" 
"StringBuilder.<init>" -- "Map<String,List<String>>.entrySet" 
"StringBuilder.<init>" -- "Entry<String,List<String>>.getValue" 
"StringBuilder.<init>" -- "HttpURLConnection.getResponseMessage" 
"StringBuilder.<init>" -- "HttpURLConnection.getInputStream" 
"StringBuilder.<init>" -- "DataInputStream.<init>" 
"StringBuilder.<init>" -- "BufferedInputStream.<init>" 
"StringBuilder.<init>" -- "DataInputStream.readChar" 
"StringBuilder.<init>" -- "DataInputStream.readInt" 
"StringBuilder.<init>" -- "DataInputStream.read" 
"StringBuilder.<init>" -- "HttpURLConnection.getHeaderFields" 
"StringBuilder.<init>" -- "HttpURLConnection.getErrorStream" 
"StringBuilder.<init>" -- "URLEncoder.encode" 
"StringBuilder.<init>" -- "System.getProperties" 
"StringBuilder.<init>" -- "Matcher.find" 
"StringBuilder.<init>" -- "Matcher.start" 
"StringBuilder.<init>" -- "Function<Matcher,String>.apply" 
"StringBuilder.<init>" -- "Matcher.end" 
"StringBuilder.<init>" -- "Matcher.group" 
"StringBuilder.<init>" -- "Integer.toString((bytes[i]" 
"StringBuilder.<init>" -- "StringBuilder.substring" 
"StringBuilder.<init>" -- "StringBuilder.charAt" 
"StringBuilder.<init>" -- "StringBuilder.setLength" 
"StringBuilder.<init>" -- "StringBuilder.deleteCharAt" 
"StringBuilder.<init>" -- "StringBuilder.setCharAt" 
"StringBuilder.<init>" -- "Character.toTitleCase" 
"StringBuilder.<init>" -- "Character.isSpaceChar" 
"StringBuilder.<init>" -- "Character.toLowerCase" 
"StringBuilder.<init>" -- "StringBuilder.append("Get" 
"StringBuilder.<init>" -- "Observable.from" 
"StringBuilder.<init>" -- "StringBuilder.append("Hello," 
"StringBuilder.<init>" -- "PreparedStatement.execute" 
"StringBuilder.<init>" -- "Book.getId" 
"StringBuilder.<init>" -- "Book.getAuthor" 
"StringBuilder.<init>" -- "BigDecimal.setScale" 
"StringBuilder.<init>" -- "Currency.getAvailableCurrencies" 
"StringBuilder.<init>" -- "InetAddress.getLocalHost" 
"StringBuilder.<init>" -- "Book.getTitle" 
"StringBuilder.<init>" -- "Connection.prepareStatement" 
"StringBuilder.<init>" -- "Map<String,List<String>>.isEmpty" 
"StringBuilder.<init>" -- "Entry<String,List<String>>.getKey" 
"StringBuilder.<init>" -- "Response.seeOther" 
"StringBuilder.<init>" -- "ArrayList<Book>.<init>" 
"StringBuilder.<init>" -- "Row.getUUID" 
"StringBuilder.<init>" -- "Row.getString" 
"StringBuilder.<init>" -- "List<Book>.add" 
"StringBuilder.<init>" -- "List<Book>.get" 
"StringBuilder.<init>" -- "Book.getSubject" 
"StringBuilder.<init>" -- "Statement.execute" 
"StringBuilder.<init>" -- "UUID.fromString" 
"StringBuilder.<init>" -- "Observable.just" 
"StringBuilder.<init>" -- "Observable<String>.subscribe" 
"StringBuilder.<init>" -- "Observable<String>.toBlocking" 
"StringBuilder.<init>" -- "StringBuilder,.subscribe" 
"StringBuilder.<init>" -- "Observable.empty" 
"StringBuilder.<init>" -- "MultiValueMap<String,String>.entrySet" 
"StringBuilder.<init>" -- "Line.format" 
"StringBuilder.<init>" -- "Set<>.isEmpty" 
"StringBuilder.<init>" -- "Set<>.forEach" 
"StringBuilder.<init>" -- "Date.instance" 
"StringBuilder.<init>" -- "Date.cast" 
"StringBuilder.<init>" -- "Tag.toIndentedString" 
"StringBuilder.append" -- "StringBuilder.toString" 
"StringBuilder.append" -- "String.trim" 
"StringBuilder.append" -- "Integer.toString" 
"StringBuilder.append" -- "List<String>.iterator" 
"StringBuilder.append" -- "Iterator<String>.next" 
"StringBuilder.append" -- "Iterator<String>.hasNext" 
"StringBuilder.append" -- "Vertex.isVisited" 
"StringBuilder.append" -- "String.join" 
"StringBuilder.append" -- "System.lineSeparator" 
"StringBuilder.append" -- "String.toUpperCase" 
"StringBuilder.append" -- "String.chars" 
"StringBuilder.append" -- "Set<Character>.add" 
"StringBuilder.append" -- "String.toCharArray" 
"StringBuilder.append" -- "StringBuilder.reverse" 
"StringBuilder.append" -- "String.<init>" 
"StringBuilder.append" -- "Vertex.includedToString" 
"StringBuilder.append" -- "Entry<Vertex,Edge>>.hasNext" 
"StringBuilder.append" -- "Entry<Vertex,Edge>>.next" 
"StringBuilder.append" -- "Entry<Vertex,Edge>.getValue" 
"StringBuilder.append" -- "Vertex.originalToString" 
"StringBuilder.append" -- "Map<Vertex,Edge>.entrySet" 
"StringBuilder.append" -- "Vertex.getLabel" 
"StringBuilder.append" -- "Entry<Vertex,Edge>.getKey" 
"StringBuilder.append" -- "String.replaceAll" 
"StringBuilder.append" -- "Cell.<init>" 
"StringBuilder.append" -- "StringBuilder.length" 
"StringBuilder.append" -- "StringBuilder.insert" 
"StringBuilder.append" -- "ArrayList<Point>.<init>" 
"StringBuilder.append" -- "Region.containsPoint" 
"StringBuilder.append" -- "List<Point>.add" 
"StringBuilder.append" -- "Map<String,String>.entrySet" 
"StringBuilder.append" -- "LocalDateTime.now" 
"StringBuilder.append" -- "Connection.createStatement" 
"StringBuilder.append" -- "PreparedStatement.setString" 
"StringBuilder.append" -- "InputStreamReader.<init>" 
"StringBuilder.append" -- "BufferedReader.<init>" 
"StringBuilder.append" -- "Entry<String,String>.getKey" 
"StringBuilder.append" -- "Entry<String,String>.getValue" 
"StringBuilder.append" -- "FileReader.<init>" 
"StringBuilder.append" -- "URL.<init>" 
"StringBuilder.append" -- "URL.openConnection" 
"StringBuilder.append" -- "HttpURLConnection.cast" 
"StringBuilder.append" -- "HttpURLConnection.setRequestMethod" 
"StringBuilder.append" -- "HttpURLConnection.setRequestProperty" 
"StringBuilder.append" -- "HttpURLConnection.setDoOutput" 
"StringBuilder.append" -- "String.getBytes" 
"StringBuilder.append" -- "HttpURLConnection.getResponseCode" 
"StringBuilder.append" -- "MessageDigest.getInstance" 
"StringBuilder.append" -- "MessageDigest.update" 
"StringBuilder.append" -- "MessageDigest.digest" 
"StringBuilder.append" -- "DateTimeFormatter.ofPattern" 
"StringBuilder.append" -- "LinkedHashSet.<init>" 
"StringBuilder.append" -- "List<String>.contains" 
"StringBuilder.append" -- "Collection.instance" 
"StringBuilder.append" -- "Collection.cast" 
"StringBuilder.append" -- "Pattern.compile" 
"StringBuilder.append" -- "Pattern.matcher" 
"StringBuilder.append" -- "List<String>.isEmpty" 
"StringBuilder.append" -- "Map<Integer>.keySet" 
"StringBuilder.append" -- "Map<Integer>.get" 
"StringBuilder.append" -- "StringBuilder.delete" 
"StringBuilder.append" -- "BufferedImage.getGraphics" 
"StringBuilder.append" -- "Graphics2D.drawString" 
"StringBuilder.append" -- "BufferedImage.getRGB" 
"StringBuilder.append" -- "BufferedReader.readLine" 
"StringBuilder.append" -- "Integer.valueOf" 
"StringBuilder.append" -- "BufferedReader.close" 
"StringBuilder.append" -- "Socket.getInputStream" 
"StringBuilder.append" -- "ServerSocket.<init>" 
"StringBuilder.append" -- "ServerSocket.accept" 
"StringBuilder.append" -- "BufferedReader.read" 
"StringBuilder.append" -- "Reader.read" 
"StringBuilder.append" -- "ClassLoader.equals" 
"StringBuilder.append" -- "String.indexOf" 
"StringBuilder.append" -- "Book.<init>" 
"StringBuilder.append" -- "Map<String,List<String>>.entrySet" 
"StringBuilder.append" -- "Entry<String,List<String>>.getValue" 
"StringBuilder.append" -- "HttpURLConnection.getResponseMessage" 
"StringBuilder.append" -- "HttpURLConnection.getInputStream" 
"StringBuilder.append" -- "DataInputStream.<init>" 
"StringBuilder.append" -- "BufferedInputStream.<init>" 
"StringBuilder.append" -- "DataInputStream.readChar" 
"StringBuilder.append" -- "DataInputStream.readInt" 
"StringBuilder.append" -- "DataInputStream.read" 
"StringBuilder.append" -- "HttpURLConnection.getHeaderFields" 
"StringBuilder.append" -- "HttpURLConnection.getErrorStream" 
"StringBuilder.append" -- "URLEncoder.encode" 
"StringBuilder.append" -- "System.getProperties" 
"StringBuilder.append" -- "Matcher.find" 
"StringBuilder.append" -- "Matcher.start" 
"StringBuilder.append" -- "Function<Matcher,String>.apply" 
"StringBuilder.append" -- "Matcher.end" 
"StringBuilder.append" -- "Matcher.group" 
"StringBuilder.append" -- "Integer.toString((bytes[i]" 
"StringBuilder.append" -- "StringBuilder.substring" 
"StringBuilder.append" -- "StringBuilder.setLength" 
"StringBuilder.append" -- "Character.toTitleCase" 
"StringBuilder.append" -- "Character.isSpaceChar" 
"StringBuilder.append" -- "Character.toLowerCase" 
"StringBuilder.append" -- "StringBuilder.append("Get" 
"StringBuilder.append" -- "StringBuilder.append("Hello," 
"StringBuilder.append" -- "PreparedStatement.execute" 
"StringBuilder.append" -- "Book.getId" 
"StringBuilder.append" -- "Book.getAuthor" 
"StringBuilder.append" -- "BigDecimal.setScale" 
"StringBuilder.append" -- "Currency.getAvailableCurrencies" 
"StringBuilder.append" -- "InetAddress.getLocalHost" 
"StringBuilder.append" -- "Book.getTitle" 
"StringBuilder.append" -- "Connection.prepareStatement" 
"StringBuilder.append" -- "Map<String,List<String>>.isEmpty" 
"StringBuilder.append" -- "Entry<String,List<String>>.getKey" 
"StringBuilder.append" -- "Response.seeOther" 
"StringBuilder.append" -- "ArrayList<Book>.<init>" 
"StringBuilder.append" -- "Row.getUUID" 
"StringBuilder.append" -- "Row.getString" 
"StringBuilder.append" -- "List<Book>.add" 
"StringBuilder.append" -- "List<Book>.get" 
"StringBuilder.append" -- "Book.getSubject" 
"StringBuilder.append" -- "Statement.execute" 
"StringBuilder.append" -- "UUID.fromString" 
"StringBuilder.append" -- "MultiValueMap<String,String>.entrySet" 
"StringBuilder.append" -- "Line.format" 
"StringBuilder.append" -- "Set<>.isEmpty" 
"StringBuilder.append" -- "Set<>.forEach" 
"StringBuilder.append" -- "Date.instance" 
"StringBuilder.append" -- "Date.cast" 
"StringBuilder.append" -- "Tag.toIndentedString" 
"StringBuilder.toString" -- "String.trim" 
"StringBuilder.toString" -- "Integer.toString" 
"StringBuilder.toString" -- "List<String>.iterator" 
"StringBuilder.toString" -- "Iterator<String>.next" 
"StringBuilder.toString" -- "Iterator<String>.hasNext" 
"StringBuilder.toString" -- "Vertex.isVisited" 
"StringBuilder.toString" -- "String.join" 
"StringBuilder.toString" -- "System.lineSeparator" 
"StringBuilder.toString" -- "String.chars" 
"StringBuilder.toString" -- "Set<Character>.add" 
"StringBuilder.toString" -- "String.toCharArray" 
"StringBuilder.toString" -- "StringBuilder.reverse" 
"StringBuilder.toString" -- "String.<init>" 
"StringBuilder.toString" -- "Vertex.includedToString" 
"StringBuilder.toString" -- "Entry<Vertex,Edge>>.hasNext" 
"StringBuilder.toString" -- "Entry<Vertex,Edge>>.next" 
"StringBuilder.toString" -- "Entry<Vertex,Edge>.getValue" 
"StringBuilder.toString" -- "Vertex.originalToString" 
"StringBuilder.toString" -- "Map<Vertex,Edge>.entrySet" 
"StringBuilder.toString" -- "Vertex.getLabel" 
"StringBuilder.toString" -- "Entry<Vertex,Edge>.getKey" 
"StringBuilder.toString" -- "String.replaceAll" 
"StringBuilder.toString" -- "StringBuilder.length" 
"StringBuilder.toString" -- "StringBuilder.insert" 
"StringBuilder.toString" -- "Map<String,String>.entrySet" 
"StringBuilder.toString" -- "LocalDateTime.now" 
"StringBuilder.toString" -- "Connection.createStatement" 
"StringBuilder.toString" -- "PreparedStatement.setString" 
"StringBuilder.toString" -- "InputStreamReader.<init>" 
"StringBuilder.toString" -- "BufferedReader.<init>" 
"StringBuilder.toString" -- "Entry<String,String>.getKey" 
"StringBuilder.toString" -- "Entry<String,String>.getValue" 
"StringBuilder.toString" -- "FileReader.<init>" 
"StringBuilder.toString" -- "URL.<init>" 
"StringBuilder.toString" -- "URL.openConnection" 
"StringBuilder.toString" -- "HttpURLConnection.cast" 
"StringBuilder.toString" -- "HttpURLConnection.setRequestMethod" 
"StringBuilder.toString" -- "HttpURLConnection.setRequestProperty" 
"StringBuilder.toString" -- "HttpURLConnection.setDoOutput" 
"StringBuilder.toString" -- "String.getBytes" 
"StringBuilder.toString" -- "HttpURLConnection.getResponseCode" 
"StringBuilder.toString" -- "MessageDigest.getInstance" 
"StringBuilder.toString" -- "MessageDigest.update" 
"StringBuilder.toString" -- "MessageDigest.digest" 
"StringBuilder.toString" -- "DateTimeFormatter.ofPattern" 
"StringBuilder.toString" -- "LinkedHashSet.<init>" 
"StringBuilder.toString" -- "List<String>.contains" 
"StringBuilder.toString" -- "Collection.instance" 
"StringBuilder.toString" -- "Collection.cast" 
"StringBuilder.toString" -- "Pattern.compile" 
"StringBuilder.toString" -- "Pattern.matcher" 
"StringBuilder.toString" -- "List<String>.isEmpty" 
"StringBuilder.toString" -- "Map<Integer>.keySet" 
"StringBuilder.toString" -- "Map<Integer>.get" 
"StringBuilder.toString" -- "StringBuilder.delete" 
"StringBuilder.toString" -- "BufferedImage.getGraphics" 
"StringBuilder.toString" -- "Graphics2D.drawString" 
"StringBuilder.toString" -- "BufferedImage.getRGB" 
"StringBuilder.toString" -- "BufferedReader.readLine" 
"StringBuilder.toString" -- "Integer.valueOf" 
"StringBuilder.toString" -- "BufferedReader.close" 
"StringBuilder.toString" -- "BufferedReader.read" 
"StringBuilder.toString" -- "ClassLoader.equals" 
"StringBuilder.toString" -- "String.indexOf" 
"StringBuilder.toString" -- "Book.<init>" 
"StringBuilder.toString" -- "Entry<String,List<String>>.getValue" 
"StringBuilder.toString" -- "HttpURLConnection.getResponseMessage" 
"StringBuilder.toString" -- "HttpURLConnection.getInputStream" 
"StringBuilder.toString" -- "HttpURLConnection.getHeaderFields" 
"StringBuilder.toString" -- "HttpURLConnection.getErrorStream" 
"StringBuilder.toString" -- "URLEncoder.encode" 
"StringBuilder.toString" -- "System.getProperties" 
"StringBuilder.toString" -- "Matcher.find" 
"StringBuilder.toString" -- "Matcher.start" 
"StringBuilder.toString" -- "Function<Matcher,String>.apply" 
"StringBuilder.toString" -- "Matcher.end" 
"StringBuilder.toString" -- "Matcher.group" 
"StringBuilder.toString" -- "Integer.toString((bytes[i]" 
"StringBuilder.toString" -- "StringBuilder.charAt" 
"StringBuilder.toString" -- "StringBuilder.setLength" 
"StringBuilder.toString" -- "StringBuilder.deleteCharAt" 
"StringBuilder.toString" -- "StringBuilder.setCharAt" 
"StringBuilder.toString" -- "Character.toTitleCase" 
"StringBuilder.toString" -- "Character.isSpaceChar" 
"StringBuilder.toString" -- "Character.toLowerCase" 
"StringBuilder.toString" -- "PreparedStatement.execute" 
"StringBuilder.toString" -- "Book.getId" 
"StringBuilder.toString" -- "Book.getAuthor" 
"StringBuilder.toString" -- "BigDecimal.setScale" 
"StringBuilder.toString" -- "Currency.getAvailableCurrencies" 
"StringBuilder.toString" -- "InetAddress.getLocalHost" 
"StringBuilder.toString" -- "Book.getTitle" 
"StringBuilder.toString" -- "Connection.prepareStatement" 
"StringBuilder.toString" -- "Entry<String,List<String>>.getKey" 
"StringBuilder.toString" -- "Response.seeOther" 
"StringBuilder.toString" -- "ArrayList<Book>.<init>" 
"StringBuilder.toString" -- "Row.getUUID" 
"StringBuilder.toString" -- "Row.getString" 
"StringBuilder.toString" -- "List<Book>.add" 
"StringBuilder.toString" -- "List<Book>.get" 
"StringBuilder.toString" -- "Book.getSubject" 
"StringBuilder.toString" -- "Statement.execute" 
"StringBuilder.toString" -- "UUID.fromString" 
"StringBuilder.toString" -- "MultiValueMap<String,String>.entrySet" 
"StringBuilder.toString" -- "Line.format" 
"StringBuilder.toString" -- "Set<>.isEmpty" 
"StringBuilder.toString" -- "Set<>.forEach" 
"StringBuilder.toString" -- "Date.instance" 
"StringBuilder.toString" -- "Date.cast" 
"StringBuilder.toString" -- "Tag.toIndentedString" 
"String.trim" -- "String.<init>" 
"String.trim" -- "System.exit" 
"String.trim" -- "URL.<init>" 
"String.trim" -- "URL.openConnection" 
"String.trim" -- "HttpURLConnection.cast" 
"String.trim" -- "HttpURLConnection.setRequestMethod" 
"String.trim" -- "HttpURLConnection.setRequestProperty" 
"String.trim" -- "HttpURLConnection.setDoOutput" 
"String.trim" -- "String.getBytes" 
"String.trim" -- "HttpURLConnection.getResponseCode" 
"String.trim" -- "ByteBuffer.wrap" 
"String.trim" -- "Scanner.nextLine" 
"String.trim" -- "HttpURLConnection.disconnect" 
"String.trim" -- "String.indexOf" 
"String.trim" -- "ByteBuffer.flip" 
"String.trim" -- "SocketChannel.write" 
"String.trim" -- "ByteBuffer.clear" 
"String.trim" -- "SocketChannel.read" 
"String.trim" -- "ByteBuffer.array" 
"String.trim" -- "SocketChannel.close" 
"String.trim" -- "SelectionKey.channel" 
"String.trim" -- "SocketChannel.cast" 
"String.trim" -- "Part.getHeader" 
"String.trim" -- "Enum.valueOf" 
"File.<init>" -- "HashMap.<init>" 
"File.<init>" -- "Integer.parseInt" 
"File.<init>" -- "List.iterator" 
"File.<init>" -- "Iterator.next" 
"File.<init>" -- "Iterator.hasNext" 
"File.<init>" -- "String.startsWith" 
"File.<init>" -- "Optional.ofNullable" 
"File.<init>" -- "Arrays.asList" 
"File.<init>" -- "StringBuffer.<init>" 
"File.<init>" -- "StringBuffer.append" 
"File.<init>" -- "StringBuffer.toString" 
"File.<init>" -- "Stream.of(new" 
"File.<init>" -- "Stream.of" 
"File.<init>" -- "Random.<init>" 
"File.<init>" -- "String.lastIndexOf" 
"File.<init>" -- "Thread.sleep" 
"File.<init>" -- "System.exit" 
"File.<init>" -- "String.replace" 
"File.<init>" -- "Builder.build" 
"File.<init>" -- "Builder.<init>" 
"File.<init>" -- "Parser.<init>" 
"File.<init>" -- "Parser.parse" 
"File.<init>" -- "File.getAbsolutePath" 
"File.<init>" -- "Label.<init>" 
"File.<init>" -- "Number.<init>" 
"File.<init>" -- "ArrayList<String>.<init>" 
"File.<init>" -- "Map<Integer,List<String>>.put" 
"File.<init>" -- "Map<Integer,List<String>>.get" 
"File.<init>" -- "Row.createCell" 
"File.<init>" -- "Cell.setCellValue" 
"File.<init>" -- "Cell.setCellStyle" 
"File.<init>" -- "FileOutputStream.<init>" 
"File.<init>" -- "FileInputStream.<init>" 
"File.<init>" -- "Cell.getNumericCellValue" 
"File.<init>" -- "Cell.getBooleanCellValue" 
"File.<init>" -- "Object.<init>" 
"File.<init>" -- "Row.getCell" 
"File.<init>" -- "Cell.getCellType" 
"File.<init>" -- "Cell.getStringCellValue" 
"File.<init>" -- "Cell.getCachedFormulaResultType" 
"File.<init>" -- "FileOutputStream.close" 
"File.<init>" -- "Rectangle.<init>" 
"File.<init>" -- "ClassLoader.getResource" 
"File.<init>" -- "Paths.get" 
"File.<init>" -- "Date.<init>" 
"File.<init>" -- "Properties.<init>" 
"File.<init>" -- "Properties.put" 
"File.<init>" -- "Storage.builder" 
"File.<init>" -- "CompletableFuture.join" 
"File.<init>" -- "WorkerThread.<init>" 
"File.<init>" -- "WorkerThread.run" 
"File.<init>" -- "Class.cast" 
"File.<init>" -- "Executors.newFixedThreadPool" 
"File.<init>" -- "Map<String>.put" 
"File.<init>" -- "BufferedReader.<init>" 
"File.<init>" -- "SimpleDateFormat.<init>" 
"File.<init>" -- "ScriptEngine.eval" 
"File.<init>" -- "FileReader.<init>" 
"File.<init>" -- "Class.newInstance" 
"File.<init>" -- "Binding.<init>" 
"File.<init>" -- "File.toURI" 
"File.<init>" -- "URL.<init>" 
"File.<init>" -- "InputStream.close" 
"File.<init>" -- "URI.<init>" 
"File.<init>" -- "System.getProperty" 
"File.<init>" -- "Class.getSimpleName" 
"File.<init>" -- "Graphics.setFont" 
"File.<init>" -- "BufferedImage.getGraphics" 
"File.<init>" -- "Scanner.nextLine" 
"File.<init>" -- "DateFormat.format" 
"File.<init>" -- "Objects.requireNonNull" 
"File.<init>" -- "PrintWriter.close" 
"File.<init>" -- "PrintWriter.<init>" 
"File.<init>" -- "FileInputStream.close" 
"File.<init>" -- "ZipEntry.getName" 
"File.<init>" -- "File.getCanonicalPath" 
"File.<init>" -- "ZipInputStream.<init>" 
"File.<init>" -- "ZipInputStream.getNextEntry" 
"File.<init>" -- "ZipInputStream.read" 
"File.<init>" -- "FileOutputStream.write" 
"File.<init>" -- "ZipInputStream.closeEntry" 
"File.<init>" -- "ZipInputStream.close" 
"File.<init>" -- "File.isDirectory" 
"File.<init>" -- "String.endsWith" 
"File.<init>" -- "ZipEntry.<init>" 
"File.<init>" -- "ZipOutputStream.putNextEntry" 
"File.<init>" -- "File.listFiles" 
"File.<init>" -- "File.getName" 
"File.<init>" -- "FileInputStream.read" 
"File.<init>" -- "ZipOutputStream.write" 
"File.<init>" -- "ZipOutputStream.<init>" 
"File.<init>" -- "ZipOutputStream.close" 
"File.<init>" -- "File.exists" 
"File.<init>" -- "File.mkdir" 
"File.<init>" -- "File.list" 
"File.<init>" -- "Files.copy" 
"File.<init>" -- "FileReader.close" 
"File.<init>" -- "ProcessBuilder.<init>" 
"File.<init>" -- "File.getAbsoluteFile" 
"File.<init>" -- "ProcessBuilder.directory" 
"File.<init>" -- "ProcessBuilder.redirectErrorStream" 
"File.<init>" -- "ProcessBuilder.start" 
"File.<init>" -- "Process.waitFor" 
"File.<init>" -- "FileWriter.<init>" 
"File.<init>" -- "InputStream.read" 
"File.<init>" -- "Class.getName" 
"File.<init>" -- "Optional<String>.isPresent" 
"File.<init>" -- "Optional<String>.get" 
"File.<init>" -- "PrintStream.<init>" 
"File.<init>" -- "System.setOut" 
"File.<init>" -- "URI.toURL" 
"File.<init>" -- "Authenticator.<init>" 
"File.<init>" -- "PasswordAuthentication.<init>" 
"File.<init>" -- "Message.setFrom" 
"File.<init>" -- "Message.setRecipients" 
"File.<init>" -- "Message.setSubject" 
"File.<init>" -- "Message.setContent" 
"File.<init>" -- "LineIterator.hasNext" 
"File.<init>" -- "LineIterator.nextLine" 
"File.<init>" -- "File.canExecute" 
"File.<init>" -- "Toolkit.getDefaultToolkit" 
"File.<init>" -- "Robot.<init>" 
"File.<init>" -- "Robot.createScreenCapture" 
"File.<init>" -- "ImageIO.write" 
"File.<init>" -- "File.toPath" 
"File.<init>" -- "Files.readAllBytes" 
"File.<init>" -- "Marshaller.marshal" 
"File.<init>" -- "Evaluation.stats" 
"File.<init>" -- "Builder.activation" 
"File.<init>" -- "Builder.nOut" 
"File.<init>" -- "Builder.kernelSize" 
"File.<init>" -- "Builder.nIn" 
"File.<init>" -- "Builder.seed" 
"File.<init>" -- "File.getParentFile" 
"File.<init>" -- "Utils.downloadAndSave" 
"File.<init>" -- "Utils.extractTarArchive" 
"File.<init>" -- "Map<Integer,Double>.put" 
"File.<init>" -- "Builder.stride" 
"File.<init>" -- "File.getPath" 
"File.<init>" -- "File.mkdirs" 
"File.<init>" -- "ImageIO.read" 
"File.<init>" -- "BufferedImage.getHeight" 
"File.<init>" -- "BufferedImage.getWidth" 
"File.<init>" -- "Font.<init>" 
"File.<init>" -- "AttributedString.<init>" 
"File.<init>" -- "AttributedString.addAttribute" 
"File.<init>" -- "Graphics.getFontMetrics" 
"File.<init>" -- "FontMetrics.stringWidth" 
"File.<init>" -- "FontMetrics.getAscent" 
"File.<init>" -- "FontMetrics.getHeight" 
"File.<init>" -- "AttributedString.getIterator" 
"File.<init>" -- "Graphics.drawString" 
"File.<init>" -- "Graphics.setColor" 
"File.<init>" -- "PrintWriter.print" 
"File.<init>" -- "Part.write" 
"File.<init>" -- "Unmarshaller.unmarshal" 
"File.<init>" -- "File.createTempFile" 
"File.<init>" -- "File.delete" 
"File.<init>" -- "Repository.create" 
"File.<init>" -- "File.createNewFile" 
"File.<init>" -- "Writer.close" 
"File.<init>" -- "DefaultFormatterFactory.<init>" 
"File.<init>" -- "Path.toUri" 
"File.<init>" -- "Configuration.<init>" 
"File.<init>" -- "ObjectFactory.createP" 
"File.<init>" -- "ObjectFactory.createR" 
"File.<init>" -- "JAXBElement.cast" 
"File.<init>" -- "JAXBElement.getValue" 
"File.<init>" -- "Text.cast" 
"File.<init>" -- "Text.getValue" 
"File.<init>" -- "Context.getWmlObjectFactory" 
"File.<init>" -- "ObjectFactory.createText" 
"File.<init>" -- "Text.setValue" 
"File.<init>" -- "ObjectFactory.createRPr" 
"File.<init>" -- "ObjectFactory.createColor" 
"File.<init>" -- "Color.setVal" 
"File.<init>" -- "Context.addServletMappingDecoded" 
"File.<init>" -- "Context.addFilterDef" 
"File.<init>" -- "Context.addFilterMap" 
"File.<init>" -- "System.setErr" 
"File.<init>" -- "RandomAccessFile.<init>" 
"File.<init>" -- "Resource.getFilename" 
"File.<init>" -- "BufferedOutputStream.<init>" 
"File.<init>" -- "BufferedOutputStream.write" 
"File.<init>" -- "BufferedOutputStream.close" 
"File.<init>" -- "FileOutputStream.flush" 
"File.<init>" -- "Map<Integer,List>.values" 
"File.<init>" -- "Element.cast" 
"File.<init>" -- "Element.addAttribute" 
"File.<init>" -- "Document.addElement" 
"File.<init>" -- "Element.addElement" 
"File.<init>" -- "OutputFormat.createPrettyPrint" 
"File.<init>" -- "Document.selectNodes" 
"File.<init>" -- "Element.elementIterator" 
"File.<init>" -- "Iterator<Element>.hasNext" 
"File.<init>" -- "Iterator<Element>.next" 
"File.<init>" -- "Element.getText" 
"File.<init>" -- "Element.setText" 
"File.<init>" -- "Configuration.setDirectoryForTemplateLoading" 
"File.<init>" -- "Configuration.setDefaultEncoding" 
"File.<init>" -- "Configuration.setTemplateExceptionHandler" 
"File.<init>" -- "Configuration.setWrapUncheckedExceptions" 
"File.<init>" -- "Configuration.setFallbackOnNullLoopVariable" 
"File.<init>" -- "Configuration.getTemplate" 
"File.<init>" -- "Template.process" 
"BigDecimal.<init>" -- "String.cast" 
"BigDecimal.<init>" -- "Date.<init>" 
"BigDecimal.<init>" -- "List<String>.stream" 
"BigDecimal.<init>" -- "BigDecimal.intValue" 
"BigDecimal.<init>" -- "BigDecimal.toPlainString" 
"BigDecimal.<init>" -- "BigDecimal.subtract" 
"BigDecimal.<init>" -- "BigDecimal.add" 
"BigDecimal.<init>" -- "BigDecimal.doubleValue" 
"BigDecimal.<init>" -- "BigDecimal.setScale" 
"BigDecimal.<init>" -- "Double.toString" 
"BigDecimal.<init>" -- "Number.cast" 
"BigDecimal.<init>" -- "Number.doubleValue" 
"HashMap.<init>" -- "HashMap<Double>.<init>" 
"HashMap.<init>" -- "Set.add" 
"HashMap.<init>" -- "HashMap<Double>.put" 
"HashMap.<init>" -- "Map<HashMap<Double>>.put" 
"HashMap.<init>" -- "Integer.toString" 
"HashMap.<init>" -- "Object.getClass" 
"HashMap.<init>" -- "Map<String,Double>.get" 
"HashMap.<init>" -- "Map<String,Double>.compute" 
"HashMap.<init>" -- "Map<String,Double>.put" 
"HashMap.<init>" -- "Map<List>.equals" 
"HashMap.<init>" -- "LinkedHashMap.<init>" 
"HashMap.<init>" -- "Collectors.joining" 
"HashMap.<init>" -- "Map<String,Object>.put" 
"HashMap.<init>" -- "Map<List>.forEach" 
"HashMap.<init>" -- "Collections.singletonMap" 
"HashMap.<init>" -- "List<Map<String,String>>.add" 
"HashMap.<init>" -- "List<Map<String,Object>>.add" 
"HashMap.<init>" -- "String.cast" 
"HashMap.<init>" -- "Optional.ofNullable" 
"HashMap.<init>" -- "Arrays.asList" 
"HashMap.<init>" -- "Map<Character,Integer>.containsKey" 
"HashMap.<init>" -- "Map<Character,Integer>.get" 
"HashMap.<init>" -- "Math.max" 
"HashMap.<init>" -- "Map<Character,Integer>.put" 
"HashMap.<init>" -- "List<Integer>.add" 
"HashMap.<init>" -- "Stream.of" 
"HashMap.<init>" -- "List<String>.add" 
"HashMap.<init>" -- "Random.<init>" 
"HashMap.<init>" -- "Map<String,String>.entrySet" 
"HashMap.<init>" -- "Collectors.toMap" 
"HashMap.<init>" -- "Map<Integer>.put" 
"HashMap.<init>" -- "Response.status" 
"HashMap.<init>" -- "Response.ok" 
"HashMap.<init>" -- "List<String>.forEach" 
"HashMap.<init>" -- "Builder.build" 
"HashMap.<init>" -- "Builder.<init>" 
"HashMap.<init>" -- "ArrayList<String>.<init>" 
"HashMap.<init>" -- "Map<Integer,List<String>>.put" 
"HashMap.<init>" -- "Map<Integer,List<String>>.get" 
"HashMap.<init>" -- "FileInputStream.<init>" 
"HashMap.<init>" -- "Map<String,Integer>.keySet" 
"HashMap.<init>" -- "Map<String,Integer>.get" 
"HashMap.<init>" -- "UUID.randomUUID" 
"HashMap.<init>" -- "Map<String,Integer>.put" 
"HashMap.<init>" -- "Product.<init>" 
"HashMap.<init>" -- "Set<>.size" 
"HashMap.<init>" -- "HashMap<String,String>.<init>" 
"HashMap.<init>" -- "Map<String,String>.put" 
"HashMap.<init>" -- "Map<String>.put" 
"HashMap.<init>" -- "List<Message>.get" 
"HashMap.<init>" -- "Entry<String,String>.getKey" 
"HashMap.<init>" -- "Entry<String,String>.getValue" 
"HashMap.<init>" -- "ServiceLoader.load" 
"HashMap.<init>" -- "Class.getDeclaredFields" 
"HashMap.<init>" -- "Field.setAccessible" 
"HashMap.<init>" -- "Field.isAnnotationPresent" 
"HashMap.<init>" -- "Field.get" 
"HashMap.<init>" -- "Map<Long>.containsKey" 
"HashMap.<init>" -- "Map<Long>.put" 
"HashMap.<init>" -- "Map<Long>.get" 
"HashMap.<init>" -- "Map<String,String>.putAll" 
"HashMap.<init>" -- "Map<Long>.merge" 
"HashMap.<init>" -- "Map<Long>.compute" 
"HashMap.<init>" -- "Map<Long>.getOrDefault" 
"HashMap.<init>" -- "HashMap<String>.put" 
"HashMap.<init>" -- "Map<String,Integer>.forEach" 
"HashMap.<init>" -- "Map<Integer,Integer>.put" 
"HashMap.<init>" -- "Map<String>.forEach" 
"HashMap.<init>" -- "Map<String>.merge" 
"HashMap.<init>" -- "Map<String>.entrySet" 
"HashMap.<init>" -- "HashMap<String,Product>.compute" 
"HashMap.<init>" -- "HashMap<String,Product>.containsKey" 
"HashMap.<init>" -- "HashMap<String,Product>.get" 
"HashMap.<init>" -- "HashMap<String,Product>.put" 
"HashMap.<init>" -- "Product.getTags" 
"HashMap.<init>" -- "HashMap<String,Product>.merge" 
"HashMap.<init>" -- "HashMap<String,Product>.putIfAbsent" 
"HashMap.<init>" -- "HashMap<String,Product>.getOrDefault" 
"HashMap.<init>" -- "HashMap<String,Product>.forEach" 
"HashMap.<init>" -- "HashMap<String,Product>.entrySet" 
"HashMap.<init>" -- "Entry<String,Product>.getValue" 
"HashMap.<init>" -- "Entry<String,Product>.getKey" 
"HashMap.<init>" -- "EnumSet.of" 
"HashMap.<init>" -- "String.endsWith" 
"HashMap.<init>" -- "File.exists" 
"HashMap.<init>" -- "String.equalsIgnoreCase" 
"HashMap.<init>" -- "Long.valueOf" 
"HashMap.<init>" -- "Map<String,Number>.put" 
"HashMap.<init>" -- "Map<String>.get" 
"HashMap.<init>" -- "Map<String,List<String>>.put" 
"HashMap.<init>" -- "Map<String,List<String>>.entrySet" 
"HashMap.<init>" -- "Iterator<Entry<String,List<String>>>.hasNext" 
"HashMap.<init>" -- "Iterator<Entry<String,List<String>>>.next" 
"HashMap.<init>" -- "Entry<String,List<String>>.getValue" 
"HashMap.<init>" -- "Map<Integer,String>.put" 
"HashMap.<init>" -- "HashMap<String,Boolean>.put" 
"HashMap.<init>" -- "Map<String,Long>.entrySet" 
"HashMap.<init>" -- "Entry<String,Long>.getKey" 
"HashMap.<init>" -- "Entry<String,Long>.getValue" 
"HashMap.<init>" -- "Map<String,Long>.get" 
"HashMap.<init>" -- "Map<String,Float>.put" 
"HashMap.<init>" -- "Map<String,Long>.put" 
"HashMap.<init>" -- "HashMap<Class,Object>.put" 
"HashMap.<init>" -- "Evaluation.stats" 
"HashMap.<init>" -- "Builder.activation" 
"HashMap.<init>" -- "Builder.nOut" 
"HashMap.<init>" -- "Builder.kernelSize" 
"HashMap.<init>" -- "Builder.nIn" 
"HashMap.<init>" -- "Builder.seed" 
"HashMap.<init>" -- "File.getParentFile" 
"HashMap.<init>" -- "Utils.downloadAndSave" 
"HashMap.<init>" -- "Utils.extractTarArchive" 
"HashMap.<init>" -- "Map<Integer,Double>.put" 
"HashMap.<init>" -- "Builder.stride" 
"HashMap.<init>" -- "File.getPath" 
"HashMap.<init>" -- "Map<String,List<Double>>.entrySet" 
"HashMap.<init>" -- "Long.parseLong" 
"HashMap.<init>" -- "Security.builder" 
"HashMap.<init>" -- "Map<Integer,Integer>.containsKey" 
"HashMap.<init>" -- "Map<Integer,Integer>.get" 
"HashMap.<init>" -- "Map<Integer,Integer>.containsValue" 
"HashMap.<init>" -- "HashMap<String,String>.put" 
"HashMap.<init>" -- "Map<String,Boolean>.put" 
"HashMap.<init>" -- "Map<String,Object>.entrySet" 
"HashMap.<init>" -- "Entry<String,Object>.getValue" 
"HashMap.<init>" -- "Entry<String,Object>.getKey" 
"HashMap.<init>" -- "Objects.toString" 
"HashMap.<init>" -- "Collections.singleton" 
"HashMap.<init>" -- "Role.<init>" 
"HashMap.<init>" -- "Map<String,Role>.put" 
"HashMap.<init>" -- "List<<String,String>>.size" 
"HashMap.<init>" -- "List<<String,String>>.get" 
"HashMap.<init>" -- "Map<>.put" 
"HashMap.<init>" -- "Map.put" 
"HashMap.<init>" -- "Builder.settings" 
"HashMap.<init>" -- "Builder.index" 
"HashMap.<init>" -- "Builder.defaultIndex" 
"HashMap.<init>" -- "Document.of" 
"HashMap.<init>" -- "ArrayList.build" 
"HashMap.<init>" -- "HashMap<String,Object>.put" 
"HashMap.<init>" -- "Builder.withDetail" 
"HashMap.<init>" -- "Map<Integer,List>.put" 
"HashMap.<init>" -- "Map<Integer,List>.get" 
"HashMap.<init>" -- "Map<Integer,List>.values" 
"HashMap.<init>" -- "Element.getElementsByTagName" 
"HashMap.<init>" -- "XMLStreamReader.hasNext" 
"HashMap.<init>" -- "XMLStreamReader.next" 
"HashMap.<init>" -- "XMLStreamReader.isStartElement" 
"HashMap.<init>" -- "XMLStreamReader.getLocalName" 
"HashMap.<init>" -- "XMLStreamReader.getElementText" 
"HashMap<Double>.<init>" -- "Set.add" 
"HashMap<Double>.<init>" -- "HashMap<Double>.put" 
"HashMap<Double>.<init>" -- "Map<HashMap<Double>>.put" 
"HashMap<Double>.<init>" -- "HashMap<Double>.keySet" 
"HashMap<Double>.<init>" -- "HashMap<Double>.get" 
"HashMap<Double>.<init>" -- "HashMap<Integer>.<init>" 
"HashMap<Double>.<init>" -- "Map<Map<Double>>.keySet" 
"HashMap<Double>.<init>" -- "HashMap<Integer>.put" 
"HashMap<Double>.<init>" -- "Map<HashMap<Double>>.entrySet" 
"HashMap<Double>.<init>" -- "Entry<HashMap<Double>>.getValue" 
"HashMap<Double>.<init>" -- "Map<Map<Double>>.get" 
"HashMap<Double>.<init>" -- "Map<Map<Integer>>.get" 
"HashMap<Double>.<init>" -- "HashMap<Integer>.get" 
"HashMap<Double>.<init>" -- "HashMap<Double>.containsKey" 
"HashMap<Double>.<init>" -- "Entry<HashMap<Double>>.getKey" 
"HashMap<Double>.<init>" -- "Map<HashMap<Double>>.values" 
"HashMap<Double>.<init>" -- "HashMap<Double>.entrySet" 
"HashMap<Double>.<init>" -- "Entry<Double>.getKey" 
"HashMap<Double>.<init>" -- "Map<Map<Double>>.containsKey" 
"HashMap<Double>.<init>" -- "Map<Map<Double>>.put" 
"HashMap<Double>.<init>" -- "Map<Map<Integer>>.put" 
"HashMap<Double>.<init>" -- "Entry<Double>.getValue" 
"Set.add" -- "HashMap<Double>.put" 
"Set.add" -- "Map<HashMap<Double>>.put" 
"Set.add" -- "Iterator.next" 
"Set.add" -- "Iterator.hasNext" 
"Set.add" -- "Optional.ofNullable" 
"Set.add" -- "Entry<>.getValue" 
"Set.add" -- "Long.<init>" 
"Set.add" -- "Map<>.entrySet" 
"Set.add" -- "Entry<>.getKey" 
"Set.add" -- "Set<Set>.add" 
"Set.add" -- "InetSocketAddress.<init>" 
"Set.add" -- "Message.setFrom" 
"Set.add" -- "Message.setContent" 
"Set.add" -- "Map<String,Set>.get" 
"Set.add" -- "CopyOnWriteArraySet.<init>" 
"Set.add" -- "Map<String,Set>.put" 
"Set.add" -- "ConcurrentMap<String,ConcurrentMap<URL,Set>>.get" 
"Set.add" -- "URL.getPort" 
"Set.add" -- "URL.getPath" 
"Set.add" -- "ConcurrentHashMap<URL,Set>.<init>" 
"Set.add" -- "ConcurrentMap<String,ConcurrentMap<URL,Set>>.putIfAbsent" 
"Set.add" -- "ConcurrentMap<URL,Set>.get" 
"Set.add" -- "ConcurrentMap<URL,Set>.putIfAbsent" 
"Set.add" -- "Message.<init>" 
"Set.add" -- "HashMap<String,String>.put" 
"HashMap<Double>.put" -- "Map<HashMap<Double>>.put" 
"HashMap<Double>.put" -- "HashMap<Double>.keySet" 
"HashMap<Double>.put" -- "HashMap<Double>.get" 
"HashMap<Double>.put" -- "HashMap<Integer>.<init>" 
"HashMap<Double>.put" -- "Map<Map<Double>>.keySet" 
"HashMap<Double>.put" -- "HashMap<Integer>.put" 
"HashMap<Double>.put" -- "Map<HashMap<Double>>.entrySet" 
"HashMap<Double>.put" -- "Entry<HashMap<Double>>.getValue" 
"HashMap<Double>.put" -- "Map<Map<Double>>.get" 
"HashMap<Double>.put" -- "Map<Map<Integer>>.get" 
"HashMap<Double>.put" -- "HashMap<Integer>.get" 
"HashMap<Double>.put" -- "HashMap<Double>.containsKey" 
"HashMap<Double>.put" -- "Entry<HashMap<Double>>.getKey" 
"Map<HashMap<Double>>.put" -- "HashMap<Double>.keySet" 
"Map<HashMap<Double>>.put" -- "HashMap<Double>.get" 
"Map<HashMap<Double>>.put" -- "HashMap<Integer>.<init>" 
"Map<HashMap<Double>>.put" -- "Map<Map<Double>>.keySet" 
"Map<HashMap<Double>>.put" -- "HashMap<Integer>.put" 
"Map<HashMap<Double>>.put" -- "Map<HashMap<Double>>.entrySet" 
"Map<HashMap<Double>>.put" -- "Entry<HashMap<Double>>.getValue" 
"Map<HashMap<Double>>.put" -- "Map<Map<Double>>.get" 
"Map<HashMap<Double>>.put" -- "Map<Map<Integer>>.get" 
"Map<HashMap<Double>>.put" -- "HashMap<Integer>.get" 
"Map<HashMap<Double>>.put" -- "HashMap<Double>.containsKey" 
"Map<HashMap<Double>>.put" -- "Entry<HashMap<Double>>.getKey" 
"DecimalFormat.<init>" -- "HashMap<Double>.keySet" 
"DecimalFormat.<init>" -- "HashMap<Double>.get" 
"DecimalFormat.<init>" -- "NumberFormat.format" 
"DecimalFormat.<init>" -- "DecimalFormat.format" 
"DecimalFormat.<init>" -- "DecimalFormat.setRoundingMode" 
"DecimalFormat.<init>" -- "Double.<init>" 
"HashMap<Double>.keySet" -- "HashMap<Double>.get" 
"HashMap<Double>.keySet" -- "NumberFormat.format" 
"HashMap<Double>.keySet" -- "HashMap<Integer>.<init>" 
"HashMap<Double>.keySet" -- "Map<Map<Double>>.keySet" 
"HashMap<Double>.keySet" -- "HashMap<Integer>.put" 
"HashMap<Double>.keySet" -- "Map<HashMap<Double>>.entrySet" 
"HashMap<Double>.keySet" -- "Entry<HashMap<Double>>.getValue" 
"HashMap<Double>.keySet" -- "Map<Map<Double>>.get" 
"HashMap<Double>.keySet" -- "Map<Map<Integer>>.get" 
"HashMap<Double>.keySet" -- "HashMap<Integer>.get" 
"HashMap<Double>.keySet" -- "HashMap<Double>.containsKey" 
"HashMap<Double>.keySet" -- "Entry<HashMap<Double>>.getKey" 
"HashMap<Double>.get" -- "NumberFormat.format" 
"HashMap<Double>.get" -- "HashMap<Integer>.<init>" 
"HashMap<Double>.get" -- "Map<Map<Double>>.keySet" 
"HashMap<Double>.get" -- "HashMap<Integer>.put" 
"HashMap<Double>.get" -- "Map<HashMap<Double>>.entrySet" 
"HashMap<Double>.get" -- "Entry<HashMap<Double>>.getValue" 
"HashMap<Double>.get" -- "Map<Map<Double>>.get" 
"HashMap<Double>.get" -- "Map<Map<Integer>>.get" 
"HashMap<Double>.get" -- "HashMap<Integer>.get" 
"HashMap<Double>.get" -- "HashMap<Double>.containsKey" 
"HashMap<Double>.get" -- "Entry<HashMap<Double>>.getKey" 
"NumberFormat.format" -- "NumberFormat.getInstance" 
"NumberFormat.format" -- "NumberFormat.setMaximumFractionDigits" 
"NumberFormat.format" -- "NumberFormat.setRoundingMode" 
"NumberFormat.format" -- "NumberFormat.getCurrencyInstance" 
"NumberFormat.format" -- "NumberFormat.getPercentInstance" 
"Map<HashMap<Double>>.keySet" -- "Map<HashMap<Double>>.get" 
"HashMap<Integer>.<init>" -- "Map<Map<Double>>.keySet" 
"HashMap<Integer>.<init>" -- "HashMap<Integer>.put" 
"HashMap<Integer>.<init>" -- "Map<HashMap<Double>>.entrySet" 
"HashMap<Integer>.<init>" -- "Entry<HashMap<Double>>.getValue" 
"HashMap<Integer>.<init>" -- "Map<Map<Double>>.get" 
"HashMap<Integer>.<init>" -- "Map<Map<Integer>>.get" 
"HashMap<Integer>.<init>" -- "HashMap<Integer>.get" 
"HashMap<Integer>.<init>" -- "HashMap<Double>.containsKey" 
"HashMap<Integer>.<init>" -- "Entry<HashMap<Double>>.getKey" 
"HashMap<Integer>.<init>" -- "Map<HashMap<Double>>.values" 
"HashMap<Integer>.<init>" -- "HashMap<Double>.entrySet" 
"HashMap<Integer>.<init>" -- "Entry<Double>.getKey" 
"HashMap<Integer>.<init>" -- "Map<Map<Double>>.containsKey" 
"HashMap<Integer>.<init>" -- "Map<Map<Double>>.put" 
"HashMap<Integer>.<init>" -- "Map<Map<Integer>>.put" 
"HashMap<Integer>.<init>" -- "Entry<Double>.getValue" 
"Map<Map<Double>>.keySet" -- "HashMap<Integer>.put" 
"Map<Map<Double>>.keySet" -- "Map<HashMap<Double>>.entrySet" 
"Map<Map<Double>>.keySet" -- "Entry<HashMap<Double>>.getValue" 
"Map<Map<Double>>.keySet" -- "Map<Map<Double>>.get" 
"Map<Map<Double>>.keySet" -- "Map<Map<Integer>>.get" 
"Map<Map<Double>>.keySet" -- "HashMap<Integer>.get" 
"Map<Map<Double>>.keySet" -- "HashMap<Double>.containsKey" 
"Map<Map<Double>>.keySet" -- "Entry<HashMap<Double>>.getKey" 
"Map<Map<Double>>.keySet" -- "Map<HashMap<Double>>.values" 
"Map<Map<Double>>.keySet" -- "HashMap<Double>.entrySet" 
"Map<Map<Double>>.keySet" -- "Entry<Double>.getKey" 
"Map<Map<Double>>.keySet" -- "Map<Map<Double>>.containsKey" 
"Map<Map<Double>>.keySet" -- "Map<Map<Double>>.put" 
"Map<Map<Double>>.keySet" -- "Map<Map<Integer>>.put" 
"Map<Map<Double>>.keySet" -- "Entry<Double>.getValue" 
"HashMap<Integer>.put" -- "Map<HashMap<Double>>.entrySet" 
"HashMap<Integer>.put" -- "Entry<HashMap<Double>>.getValue" 
"HashMap<Integer>.put" -- "Map<Map<Double>>.get" 
"HashMap<Integer>.put" -- "Map<Map<Integer>>.get" 
"HashMap<Integer>.put" -- "HashMap<Integer>.get" 
"HashMap<Integer>.put" -- "HashMap<Double>.containsKey" 
"HashMap<Integer>.put" -- "Entry<HashMap<Double>>.getKey" 
"Map<HashMap<Double>>.entrySet" -- "Entry<HashMap<Double>>.getValue" 
"Map<HashMap<Double>>.entrySet" -- "Map<Map<Double>>.get" 
"Map<HashMap<Double>>.entrySet" -- "Map<Map<Integer>>.get" 
"Map<HashMap<Double>>.entrySet" -- "HashMap<Integer>.get" 
"Map<HashMap<Double>>.entrySet" -- "HashMap<Double>.containsKey" 
"Map<HashMap<Double>>.entrySet" -- "Entry<HashMap<Double>>.getKey" 
"Entry<HashMap<Double>>.getValue" -- "Map<Map<Double>>.get" 
"Entry<HashMap<Double>>.getValue" -- "Map<Map<Integer>>.get" 
"Entry<HashMap<Double>>.getValue" -- "HashMap<Integer>.get" 
"Entry<HashMap<Double>>.getValue" -- "HashMap<Double>.containsKey" 
"Entry<HashMap<Double>>.getValue" -- "Entry<HashMap<Double>>.getKey" 
"Map<Map<Double>>.get" -- "Map<Map<Integer>>.get" 
"Map<Map<Double>>.get" -- "HashMap<Integer>.get" 
"Map<Map<Double>>.get" -- "HashMap<Double>.containsKey" 
"Map<Map<Double>>.get" -- "Entry<HashMap<Double>>.getKey" 
"Map<Map<Double>>.get" -- "Map<HashMap<Double>>.values" 
"Map<Map<Double>>.get" -- "HashMap<Double>.entrySet" 
"Map<Map<Double>>.get" -- "Entry<Double>.getKey" 
"Map<Map<Double>>.get" -- "Map<Map<Double>>.containsKey" 
"Map<Map<Double>>.get" -- "Map<Map<Double>>.put" 
"Map<Map<Double>>.get" -- "Map<Map<Integer>>.put" 
"Map<Map<Double>>.get" -- "Entry<Double>.getValue" 
"Map<Map<Integer>>.get" -- "HashMap<Integer>.get" 
"Map<Map<Integer>>.get" -- "HashMap<Double>.containsKey" 
"Map<Map<Integer>>.get" -- "Entry<HashMap<Double>>.getKey" 
"Map<Map<Integer>>.get" -- "Map<HashMap<Double>>.values" 
"Map<Map<Integer>>.get" -- "HashMap<Double>.entrySet" 
"Map<Map<Integer>>.get" -- "Entry<Double>.getKey" 
"Map<Map<Integer>>.get" -- "Map<Map<Double>>.containsKey" 
"Map<Map<Integer>>.get" -- "Map<Map<Double>>.put" 
"Map<Map<Integer>>.get" -- "Map<Map<Integer>>.put" 
"Map<Map<Integer>>.get" -- "Entry<Double>.getValue" 
"HashMap<Integer>.get" -- "HashMap<Double>.containsKey" 
"HashMap<Integer>.get" -- "Entry<HashMap<Double>>.getKey" 
"HashMap<Double>.containsKey" -- "Entry<HashMap<Double>>.getKey" 
"Map<HashMap<Double>>.values" -- "HashMap<Double>.entrySet" 
"Map<HashMap<Double>>.values" -- "Entry<Double>.getKey" 
"Map<HashMap<Double>>.values" -- "Map<Map<Double>>.containsKey" 
"Map<HashMap<Double>>.values" -- "Map<Map<Double>>.put" 
"Map<HashMap<Double>>.values" -- "Map<Map<Integer>>.put" 
"Map<HashMap<Double>>.values" -- "Entry<Double>.getValue" 
"HashMap<Double>.entrySet" -- "Entry<Double>.getKey" 
"HashMap<Double>.entrySet" -- "Map<Map<Double>>.containsKey" 
"HashMap<Double>.entrySet" -- "Map<Map<Double>>.put" 
"HashMap<Double>.entrySet" -- "Map<Map<Integer>>.put" 
"HashMap<Double>.entrySet" -- "Entry<Double>.getValue" 
"Entry<Double>.getKey" -- "Map<Map<Double>>.containsKey" 
"Entry<Double>.getKey" -- "Map<Map<Double>>.put" 
"Entry<Double>.getKey" -- "Map<Map<Integer>>.put" 
"Entry<Double>.getKey" -- "Entry<Double>.getValue" 
"Map<Map<Double>>.containsKey" -- "Map<Map<Double>>.put" 
"Map<Map<Double>>.containsKey" -- "Map<Map<Integer>>.put" 
"Map<Map<Double>>.containsKey" -- "Entry<Double>.getValue" 
"Map<Map<Double>>.put" -- "Map<Map<Integer>>.put" 
"Map<Map<Double>>.put" -- "Entry<Double>.getValue" 
"Map<Map<Integer>>.put" -- "Entry<Double>.getValue" 
"Integer.parseInt" -- "Collectors.joining" 
"Integer.parseInt" -- "String.cast" 
"Integer.parseInt" -- "IntStream.of" 
"Integer.parseInt" -- "Optional.ofNullable" 
"Integer.parseInt" -- "Arrays.asList" 
"Integer.parseInt" -- "Math.max" 
"Integer.parseInt" -- "Thread.sleep" 
"Integer.parseInt" -- "Map<String,String>.get" 
"Integer.parseInt" -- "InputStreamReader.<init>" 
"Integer.parseInt" -- "BufferedReader.<init>" 
"Integer.parseInt" -- "OutputStreamWriter.<init>" 
"Integer.parseInt" -- "OutputStreamWriter.write" 
"Integer.parseInt" -- "OutputStreamWriter.close" 
"Integer.parseInt" -- "SimpleDateFormat.<init>" 
"Integer.parseInt" -- "Arrays.copyOfRange" 
"Integer.parseInt" -- "List<String>.stream" 
"Integer.parseInt" -- "Pattern.compile" 
"Integer.parseInt" -- "Pattern.matcher" 
"Integer.parseInt" -- "Runtime.getRuntime" 
"Integer.parseInt" -- "Scanner.nextLine" 
"Integer.parseInt" -- "Scanner.next" 
"Integer.parseInt" -- "Scanner.nextDouble" 
"Integer.parseInt" -- "BufferedReader.readLine" 
"Integer.parseInt" -- "Scanner.hasNextInt" 
"Integer.parseInt" -- "Scanner.hasNext" 
"Integer.parseInt" -- "DateFormat.format" 
"Integer.parseInt" -- "Integer.valueOf" 
"Integer.parseInt" -- "Process.getInputStream" 
"Integer.parseInt" -- "Long.valueOf" 
"Integer.parseInt" -- "Matcher.group" 
"Integer.parseInt" -- "Matcher.matches" 
"Integer.parseInt" -- "Base64.getUrlDecoder" 
"Integer.parseInt" -- "Integer.compareTo" 
"Integer.parseInt" -- "Long.parseLong" 
"Integer.parseInt" -- "Environment.getProperty" 
"Integer.parseInt" -- "Error.<init>" 
"Integer.parseInt" -- "Map<String,String>.keySet" 
"Integer.parseInt" -- "Object>.equals" 
"Integer.toString" -- "StringBuffer.<init>" 
"Integer.toString" -- "StringBuffer.append" 
"Integer.toString" -- "StringBuffer.toString" 
"Integer.toString" -- "Integer.equals" 
"Integer.toString" -- "Cell.<init>" 
"Integer.toString" -- "StringBuilder.length" 
"Integer.toString" -- "StringBuilder.insert" 
"Integer.toString" -- "Thread.sleep" 
"Integer.toString" -- "Thread.currentThread" 
"Integer.toString" -- "Long.toString" 
"Integer.toString" -- "String.getBytes" 
"Integer.toString" -- "MessageDigest.getInstance" 
"Integer.toString" -- "MessageDigest.update" 
"Integer.toString" -- "MessageDigest.digest" 
"Integer.toString" -- "BlockingQueue<Integer>.take" 
"Integer.toString" -- "Integer.toString((bytes[i]" 
"Integer.toString" -- "HashMap<String,Boolean>.put" 
"Comparator.naturalOrder" -- "Comparators.isInOrder" 
"Comparator.naturalOrder" -- "Comparator.nullsLast" 
"Comparators.isInOrder" -- "Arrays.asList" 
"List<String>.get" -- "List<String>.size" 
"List<String>.get" -- "List<String>.iterator" 
"List<String>.get" -- "Iterator<String>.next" 
"List<String>.get" -- "Iterator<String>.hasNext" 
"List<String>.get" -- "Arrays.asList" 
"List<String>.get" -- "List<String>.add" 
"List<String>.get" -- "Random.<init>" 
"List<String>.get" -- "Runnable.<init>" 
"List<String>.get" -- "Thread.currentThread" 
"List<String>.get" -- "Thread.<init>" 
"List<String>.get" -- "Thread.start" 
"List<String>.get" -- "List<String>.forEach" 
"List<String>.get" -- "AtomicInteger.incrementAndGet" 
"List<String>.get" -- "LocalDateTime.now" 
"List<String>.get" -- "List<String>.stream" 
"List<String>.get" -- "Iterator<String>.remove" 
"List<String>.get" -- "List<String>.listIterator" 
"List<String>.get" -- "ListIterator<String>.hasNext" 
"List<String>.get" -- "ListIterator<String>.nextIndex" 
"List<String>.get" -- "ListIterator<String>.next" 
"List<String>.get" -- "ListIterator<String>.set" 
"List<String>.get" -- "ListIterator<String>.add" 
"List<String>.get" -- "ListIterator<String>.hasPrevious" 
"List<String>.get" -- "ListIterator<String>.previousIndex" 
"List<String>.get" -- "ListIterator<String>.previous" 
"List<String>.get" -- "ListIterator<String>.forEachRemaining" 
"List<String>.get" -- "Predicate<String>.<init>" 
"List<String>.get" -- "List<String>.isEmpty" 
"List<String>.get" -- "Collections.frequency" 
"List<String>.get" -- "Integer.valueOf" 
"List<String>.get" -- "Iterator<String>.<init>" 
"List<String>.get" -- "List<String>.retainAll" 
"List<String>.get" -- "List<String>.toString" 
"List<String>.get" -- "Double.valueOf" 
"List<String>.size" -- "List<String>.iterator" 
"List<String>.size" -- "Iterator<String>.next" 
"List<String>.size" -- "Iterator<String>.hasNext" 
"List<String>.size" -- "String.compareTo" 
"List<String>.size" -- "List<Integer>.size" 
"List<String>.size" -- "List<Integer>.get" 
"List<String>.size" -- "List<String>.add" 
"List<String>.size" -- "Random.<init>" 
"List<String>.size" -- "Runnable.<init>" 
"List<String>.size" -- "Thread.currentThread" 
"List<String>.size" -- "Thread.<init>" 
"List<String>.size" -- "Thread.start" 
"List<String>.size" -- "List<String>.forEach" 
"List<String>.size" -- "AtomicInteger.incrementAndGet" 
"List<String>.size" -- "LocalDateTime.now" 
"List<String>.size" -- "Paths.get" 
"List<String>.size" -- "Date.<init>" 
"List<String>.size" -- "SimpleDateFormat.format" 
"List<String>.size" -- "List<String>.stream" 
"List<String>.size" -- "Date.getTime" 
"List<String>.size" -- "List<String>.listIterator" 
"List<String>.size" -- "ArrayList<Integer>.<init>" 
"List<String>.size" -- "List<String>.remove" 
"List<String>.size" -- "ListIterator.hasPrevious" 
"List<String>.size" -- "ListIterator.previous" 
"List<String>.size" -- "List<String>.isEmpty" 
"List<String>.size" -- "Collections.frequency" 
"List<String>.size" -- "Files.readAllLines" 
"List<String>.size" -- "Integer.valueOf" 
"List<String>.size" -- "Charset.defaultCharset" 
"List<String>.size" -- "Stream<String>.skip" 
"List<String>.size" -- "StringTokenizer.<init>" 
"List<String>.size" -- "StringTokenizer.hasMoreElements" 
"List<String>.size" -- "StringTokenizer.nextToken" 
"List<String>.size" -- "List<String>.set" 
"List<String>.size" -- "Double.valueOf" 
"List<String>.size" -- "List<ArrayList<Integer>>.add" 
"List<String>.size" -- "List<ArrayList<Integer>>.size" 
"List<String>.size" -- "List<ArrayList<Integer>>.get" 
"List.iterator" -- "Iterator.next" 
"List.iterator" -- "Iterator.hasNext" 
"List.iterator" -- "List.isEmpty" 
"List.iterator" -- "List.cast" 
"List.iterator" -- "System.getProperty" 
"List.iterator" -- "Iterator.remove" 
"List.iterator" -- "Object.toString" 
"List.iterator" -- "Query.execute" 
"List.iterator" -- "Iterator<Product>.hasNext" 
"List.iterator" -- "Iterator<Product>.next" 
"Iterator.next" -- "Iterator.hasNext" 
"Iterator.next" -- "List.isEmpty" 
"Iterator.next" -- "List.cast" 
"Iterator.next" -- "ByteArrayInputStream.<init>" 
"Iterator.next" -- "System.getProperty" 
"Iterator.next" -- "LinkedList.iterator" 
"Iterator.next" -- "Iterator.remove" 
"Iterator.next" -- "Object.toString" 
"Iterator.next" -- "Query.execute" 
"Iterator.next" -- "Collection.iterator" 
"Iterator.next" -- "ASN1InputStream.<init>" 
"Iterator.next" -- "ASN1InputStream.readObject" 
"Iterator.next" -- "ASN1InputStream.close" 
"Iterator.next" -- "ByteArrayInputStream.close" 
"Iterator.hasNext" -- "List.isEmpty" 
"Iterator.hasNext" -- "List.cast" 
"Iterator.hasNext" -- "System.getProperty" 
"Iterator.hasNext" -- "Iterator.remove" 
"Iterator.hasNext" -- "Object.toString" 
"Iterator.hasNext" -- "Query.execute" 
"List<String>.iterator" -- "Iterator<String>.next" 
"List<String>.iterator" -- "Iterator<String>.hasNext" 
"List<String>.iterator" -- "String.compareTo" 
"List<String>.iterator" -- "List<String>.add" 
"List<String>.iterator" -- "InputStreamReader.<init>" 
"List<String>.iterator" -- "BufferedReader.<init>" 
"List<String>.iterator" -- "HttpURLConnection.getResponseCode" 
"List<String>.iterator" -- "Iterator<String>.remove" 
"List<String>.iterator" -- "List<String>.listIterator" 
"List<String>.iterator" -- "ListIterator<String>.hasNext" 
"List<String>.iterator" -- "ListIterator<String>.nextIndex" 
"List<String>.iterator" -- "ListIterator<String>.next" 
"List<String>.iterator" -- "ListIterator<String>.set" 
"List<String>.iterator" -- "ListIterator<String>.add" 
"List<String>.iterator" -- "ListIterator<String>.hasPrevious" 
"List<String>.iterator" -- "ListIterator<String>.previousIndex" 
"List<String>.iterator" -- "ListIterator<String>.previous" 
"List<String>.iterator" -- "ListIterator<String>.forEachRemaining" 
"List<String>.iterator" -- "List<String>.remove" 
"List<String>.iterator" -- "List<String>.removeIf" 
"List<String>.iterator" -- "BufferedReader.readLine" 
"List<String>.iterator" -- "BufferedReader.close" 
"List<String>.iterator" -- "HttpURLConnection.getResponseMessage" 
"List<String>.iterator" -- "HttpURLConnection.getInputStream" 
"List<String>.iterator" -- "HttpURLConnection.getHeaderFields" 
"List<String>.iterator" -- "HttpURLConnection.getErrorStream" 
"Iterator<String>.next" -- "Iterator<String>.hasNext" 
"Iterator<String>.next" -- "String.compareTo" 
"Iterator<String>.next" -- "Object.getClass" 
"Iterator<String>.next" -- "String.join" 
"Iterator<String>.next" -- "String.startsWith" 
"Iterator<String>.next" -- "List<String>.add" 
"Iterator<String>.next" -- "Map<String,String>.get" 
"Iterator<String>.next" -- "InputStreamReader.<init>" 
"Iterator<String>.next" -- "BufferedReader.<init>" 
"Iterator<String>.next" -- "HttpURLConnection.getResponseCode" 
"Iterator<String>.next" -- "Iterator<String>.remove" 
"Iterator<String>.next" -- "List<String>.listIterator" 
"Iterator<String>.next" -- "ListIterator<String>.hasNext" 
"Iterator<String>.next" -- "ListIterator<String>.nextIndex" 
"Iterator<String>.next" -- "ListIterator<String>.next" 
"Iterator<String>.next" -- "ListIterator<String>.set" 
"Iterator<String>.next" -- "ListIterator<String>.add" 
"Iterator<String>.next" -- "ListIterator<String>.hasPrevious" 
"Iterator<String>.next" -- "ListIterator<String>.previousIndex" 
"Iterator<String>.next" -- "ListIterator<String>.previous" 
"Iterator<String>.next" -- "ListIterator<String>.forEachRemaining" 
"Iterator<String>.next" -- "Collection<String>.add" 
"Iterator<String>.next" -- "Collection<String>.iterator" 
"Iterator<String>.next" -- "Vector.<init>" 
"Iterator<String>.next" -- "Vector<String>.add" 
"Iterator<String>.next" -- "Vector<String>.elements" 
"Iterator<String>.next" -- "Enumeration.hasMoreElements" 
"Iterator<String>.next" -- "Enumeration.nextElement" 
"Iterator<String>.next" -- "Vector<String>.iterator" 
"Iterator<String>.next" -- "ConcurrentHashMap.<init>" 
"Iterator<String>.next" -- "ConcurrentHashMap<String,Integer>.put" 
"Iterator<String>.next" -- "ConcurrentHashMap<String,Integer>.keySet" 
"Iterator<String>.next" -- "ConcurrentHashMap<String,Integer>.size" 
"Iterator<String>.next" -- "List<String>.remove" 
"Iterator<String>.next" -- "List<String>.removeIf" 
"Iterator<String>.next" -- "BufferedReader.readLine" 
"Iterator<String>.next" -- "BufferedReader.close" 
"Iterator<String>.next" -- "HttpURLConnection.getResponseMessage" 
"Iterator<String>.next" -- "HttpURLConnection.getInputStream" 
"Iterator<String>.next" -- "HttpURLConnection.getHeaderFields" 
"Iterator<String>.next" -- "HttpURLConnection.getErrorStream" 
"Iterator<String>.next" -- "Map<String,String>.keySet" 
"Iterator<String>.next" -- "Expression.getValue" 
"Iterator<String>.next" -- "Map<String,Map<String,String>>.get" 
"Iterator<String>.next" -- "Set<String>.iterator" 
"Iterator<String>.hasNext" -- "String.compareTo" 
"Iterator<String>.hasNext" -- "Object.getClass" 
"Iterator<String>.hasNext" -- "String.join" 
"Iterator<String>.hasNext" -- "String.startsWith" 
"Iterator<String>.hasNext" -- "List<String>.add" 
"Iterator<String>.hasNext" -- "Map<String,String>.get" 
"Iterator<String>.hasNext" -- "InputStreamReader.<init>" 
"Iterator<String>.hasNext" -- "BufferedReader.<init>" 
"Iterator<String>.hasNext" -- "HttpURLConnection.getResponseCode" 
"Iterator<String>.hasNext" -- "Iterator<String>.remove" 
"Iterator<String>.hasNext" -- "List<String>.listIterator" 
"Iterator<String>.hasNext" -- "ListIterator<String>.hasNext" 
"Iterator<String>.hasNext" -- "ListIterator<String>.nextIndex" 
"Iterator<String>.hasNext" -- "ListIterator<String>.next" 
"Iterator<String>.hasNext" -- "ListIterator<String>.set" 
"Iterator<String>.hasNext" -- "ListIterator<String>.add" 
"Iterator<String>.hasNext" -- "ListIterator<String>.hasPrevious" 
"Iterator<String>.hasNext" -- "ListIterator<String>.previousIndex" 
"Iterator<String>.hasNext" -- "ListIterator<String>.previous" 
"Iterator<String>.hasNext" -- "ListIterator<String>.forEachRemaining" 
"Iterator<String>.hasNext" -- "Collection<String>.add" 
"Iterator<String>.hasNext" -- "Collection<String>.iterator" 
"Iterator<String>.hasNext" -- "Vector.<init>" 
"Iterator<String>.hasNext" -- "Vector<String>.add" 
"Iterator<String>.hasNext" -- "Vector<String>.elements" 
"Iterator<String>.hasNext" -- "Enumeration.hasMoreElements" 
"Iterator<String>.hasNext" -- "Enumeration.nextElement" 
"Iterator<String>.hasNext" -- "Vector<String>.iterator" 
"Iterator<String>.hasNext" -- "ConcurrentHashMap.<init>" 
"Iterator<String>.hasNext" -- "ConcurrentHashMap<String,Integer>.put" 
"Iterator<String>.hasNext" -- "ConcurrentHashMap<String,Integer>.keySet" 
"Iterator<String>.hasNext" -- "ConcurrentHashMap<String,Integer>.size" 
"Iterator<String>.hasNext" -- "List<String>.remove" 
"Iterator<String>.hasNext" -- "List<String>.removeIf" 
"Iterator<String>.hasNext" -- "BufferedReader.readLine" 
"Iterator<String>.hasNext" -- "BufferedReader.close" 
"Iterator<String>.hasNext" -- "HttpURLConnection.getResponseMessage" 
"Iterator<String>.hasNext" -- "HttpURLConnection.getInputStream" 
"Iterator<String>.hasNext" -- "HttpURLConnection.getHeaderFields" 
"Iterator<String>.hasNext" -- "HttpURLConnection.getErrorStream" 
"Iterator<String>.hasNext" -- "Map<String,String>.keySet" 
"Iterator<String>.hasNext" -- "Expression.getValue" 
"Iterator<String>.hasNext" -- "Map<String,Map<String,String>>.get" 
"Iterator<String>.hasNext" -- "Set<String>.iterator" 
"String.compareTo" -- "Integer.compare" 
"Graph.hasCycle" -- "Vertex.isVisited" 
"Vertex.isVisited" -- "Vertex.setVisited" 
"Vertex.isVisited" -- "Entry<Vertex,Edge>>.hasNext" 
"Vertex.isVisited" -- "Entry<Vertex,Edge>>.next" 
"Vertex.isVisited" -- "Entry<Vertex,Edge>.getValue" 
"Vertex.isVisited" -- "List<Vertex>.size" 
"Vertex.isVisited" -- "List<Vertex>.get" 
"Vertex.isVisited" -- "Edge.<init>" 
"Vertex.isVisited" -- "Vertex.nextMinimum" 
"Vertex.isVisited" -- "Edge.getWeight" 
"Vertex.isVisited" -- "Pair<Vertex,Edge>.getValue" 
"Vertex.isVisited" -- "Pair<Vertex,Edge>.getKey" 
"Vertex.isVisited" -- "Edge.setIncluded" 
"Vertex.isVisited" -- "Map<Vertex,Edge>.entrySet" 
"Vertex.isVisited" -- "Vertex.getLabel" 
"Vertex.isVisited" -- "Entry<Vertex,Edge>.getKey" 
"Vertex.setVisited" -- "List<Vertex>.size" 
"Vertex.setVisited" -- "List<Vertex>.get" 
"Vertex.setVisited" -- "Edge.<init>" 
"Vertex.setVisited" -- "Vertex.nextMinimum" 
"Vertex.setVisited" -- "Edge.getWeight" 
"Vertex.setVisited" -- "Pair<Vertex,Edge>.getValue" 
"Vertex.setVisited" -- "Pair<Vertex,Edge>.getKey" 
"Vertex.setVisited" -- "Edge.setIncluded" 
"Objects.hash" -- "Comment.getId" 
"Object.getClass" -- "Objects.equals" 
"Object.getClass" -- "Collectors.joining" 
"Object.getClass" -- "String.cast" 
"Object.getClass" -- "Map<String,Object>.get" 
"Object.getClass" -- "Integer.cast" 
"Object.getClass" -- "Double.doubleToLongBits" 
"Object.getClass" -- "Arrays.equals" 
"Object.getClass" -- "Random.equals" 
"Object.getClass" -- "Integer.equals" 
"Object.getClass" -- "Arrays.deepEquals" 
"Object.getClass" -- "Map<String,String>.entrySet" 
"Object.getClass" -- "Long.cast" 
"Object.getClass" -- "Long.equals" 
"Object.getClass" -- "List.equals" 
"Object.getClass" -- "Map<String,String>.put" 
"Object.getClass" -- "Method.invoke" 
"Object.getClass" -- "Class.getCanonicalName" 
"Object.getClass" -- "Class.getDeclaredFields" 
"Object.getClass" -- "Field.setAccessible" 
"Object.getClass" -- "Field.isAnnotationPresent" 
"Object.getClass" -- "Field.get" 
"Object.getClass" -- "Class.getDeclaredMethods" 
"Object.getClass" -- "Method.isAnnotationPresent" 
"Object.getClass" -- "Method.setAccessible" 
"Object.getClass" -- "Objects.isNull" 
"Object.getClass" -- "Class.isAnnotationPresent" 
"Object.getClass" -- "Class.getSimpleName" 
"Object.getClass" -- "Plane.getClass" 
"Object.getClass" -- "Plane.cast" 
"Object.getClass" -- "Product.getClass" 
"Object.getClass" -- "Product.cast" 
"Object.getClass" -- "Integer.valueOf" 
"Object.getClass" -- "Rectangle.getClass" 
"Object.getClass" -- "Rectangle.cast" 
"Object.getClass" -- "Double.compare" 
"Object.getClass" -- "Class.isInstance" 
"Object.getClass" -- "Map<Class,Class>.containsKey" 
"Object.getClass" -- "Object.toString" 
"Object.getClass" -- "Method.getName" 
"Object.getClass" -- "Annotation>,Annotation>.cast" 
"Object.getClass" -- "Annotation>,Annotation>.put" 
"Object.getClass" -- "Graph.getClass" 
"Object.getClass" -- "Vertex.cast" 
"Object.getClass" -- "Vertex.getOuterType" 
"Object.getClass" -- "Graph.getOuterType" 
"Object.getClass" -- "Graph.equals" 
"Object.getClass" -- "BigDecimal.equals" 
"Object.getClass" -- "Product.equals" 
"Object.getClass" -- "Book.cast" 
"Object.getClass" -- "String.instance" 
"Object.getClass" -- "Class.isAssignableFrom" 
"Object.getClass" -- "Book.getClass" 
"Object.getClass" -- "Integer.instance" 
"Object.getClass" -- "Objects.equal" 
"Object.getClass" -- "Supplier.getClass" 
"Object.getClass" -- "Supplier.cast" 
"Object.getClass" -- "Position.getClass" 
"Object.getClass" -- "Position.cast" 
"Object.getClass" -- "Stream<String>.map" 
"Object.getClass" -- "Expression.getValue" 
"Object.getClass" -- "BiConsumer<Object>.accept" 
"Object.getClass" -- "Role.getClass" 
"Object.getClass" -- "Role.cast" 
"Object.getClass" -- "Role.equals" 
"Object.getClass" -- "Tag.getClass" 
"Object.getClass" -- "Tag.cast" 
"Objects.equals" -- "List<Integer>.size" 
"Objects.equals" -- "List<Integer>.get" 
"Objects.equals" -- "List<Integer>.add" 
"Objects.equals" -- "List<Integer>.remove" 
"Objects.equals" -- "List<Integer>.addAll" 
"Objects.equals" -- "List<Integer>.stream" 
"Objects.equals" -- "Plane.getClass" 
"Objects.equals" -- "Plane.cast" 
"Objects.equals" -- "Iterator<Integer>.hasNext" 
"Objects.equals" -- "Iterator<Integer>.next" 
"Objects.equals" -- "Iterator<Integer>.remove" 
"Objects.equals" -- "List<Integer>.removeIf" 
"Objects.equals" -- "List<Integer>.clear" 
"Objects.equals" -- "List<Integer>.iterator" 
"Objects.equals" -- "Double.compare" 
"Objects.equals" -- "List<Book>.stream" 
"Objects.equals" -- "Tag.getClass" 
"Objects.equals" -- "Tag.cast" 
"Map<List>.entrySet" -- "Entry<List>.getKey" 
"Map<List>.entrySet" -- "Entry<List>.getValue" 
"Entry<List>.getKey" -- "Entry<List>.getValue" 
"Map<String,Double>.keySet" -- "Map<String,Double>.get" 
"Map<String,Double>.get" -- "Map<String,Double>.compute" 
"Map<String,Double>.get" -- "Map<String,Double>.put" 
"List.isEmpty" -- "Map<String,Double>.compute" 
"List.isEmpty" -- "Map<String,Double>.put" 
"List.isEmpty" -- "Map<String,Double>.forEach" 
"List.isEmpty" -- "Random.<init>" 
"List.isEmpty" -- "List.cast" 
"List.isEmpty" -- "List<String>.stream" 
"List.isEmpty" -- "Iterator.remove" 
"List.isEmpty" -- "Query.getResultList" 
"List.isEmpty" -- "String.instance" 
"List.isEmpty" -- "List<String>.cast" 
"List.isEmpty" -- "List<String[]>.cast" 
"List.isEmpty" -- "Float.valueOf" 
"Map<String,Double>.compute" -- "Map<String,Double>.put" 
"Map<String,Double>.compute" -- "Map<String,Double>.forEach" 
"Map<String,Double>.put" -- "Map<String,Double>.forEach" 
"Map<String,Double>.put" -- "Entry<String,Double>>.sort" 
"Map<String,Double>.put" -- "LinkedHashMap.<init>" 
"Map<String,Double>.put" -- "Entry<String,Double>.getValue" 
"Map<String,Double>.put" -- "Entry<String,Double>.getKey" 
"List<String>.addAll" -- "List<String>.forEach" 
"List<String>.addAll" -- "List<String>.stream" 
"List<String>.addAll" -- "Map<String,Long>.get" 
"Map<String,Double>.entrySet" -- "Set<String>.contains" 
"Set<String>.contains" -- "LinkedHashMap.<init>" 
"Set<String>.contains" -- "Map<String,Object>.put" 
"Set<String>.contains" -- "String.join" 
"Set<String>.contains" -- "Arrays.asList" 
"Set<String>.contains" -- "Set<String>.add" 
"Set<String>.contains" -- "Map<String,String>.entrySet" 
"Set<String>.contains" -- "Map<String,String>.containsKey" 
"Set<String>.contains" -- "Map<String,String>.get" 
"Set<String>.contains" -- "LinkedHashSet.<init>" 
"Set<String>.contains" -- "Long.valueOf" 
"Set<String>.contains" -- "VariableTree.getType" 
"Set<String>.contains" -- "VariableTree.getModifiers" 
"Set<String>.contains" -- "LinkedHashSet<String>.<init>" 
"Set<String>.contains" -- "LinkedList<String>.<init>" 
"Set<String>.contains" -- "Queue<String>.add" 
"Set<String>.contains" -- "Queue<String>.isEmpty" 
"Set<String>.contains" -- "Queue<String>.poll" 
"Set<String>.contains" -- "Graph.getAdjVertices" 
"Set<String>.contains" -- "Stack<String>.<init>" 
"Set<String>.contains" -- "Stack<String>.isEmpty" 
"Set<String>.contains" -- "Collections.emptySet" 
"Entry<String,Double>>.sort" -- "LinkedHashMap.<init>" 
"Entry<String,Double>>.sort" -- "Entry<String,Double>.getValue" 
"Entry<String,Double>>.sort" -- "Entry<String,Double>.getKey" 
"LinkedHashMap.<init>" -- "Entry<String,Double>.getValue" 
"LinkedHashMap.<init>" -- "Entry<String,Double>.getKey" 
"LinkedHashMap.<init>" -- "Map<String,Object>.put" 
"LinkedHashMap.<init>" -- "Arrays.asList" 
"LinkedHashMap.<init>" -- "Map<String,String>.entrySet" 
"LinkedHashMap.<init>" -- "Collectors.toMap" 
"LinkedHashMap.<init>" -- "Builder.build" 
"LinkedHashMap.<init>" -- "Builder.<init>" 
"LinkedHashMap.<init>" -- "Map<String,String>.containsKey" 
"LinkedHashMap.<init>" -- "Map<String,String>.get" 
"LinkedHashMap.<init>" -- "List<String>.stream" 
"LinkedHashMap.<init>" -- "Long.valueOf" 
"LinkedHashMap.<init>" -- "Context.parse" 
"LinkedHashMap.<init>" -- "Map<String,Object>.cast" 
"LinkedHashMap.<init>" -- "Context.render" 
"LinkedHashMap.<init>" -- "Builder.settings" 
"LinkedHashMap.<init>" -- "Builder.index" 
"LinkedHashMap.<init>" -- "Builder.defaultIndex" 
"LinkedHashMap.<init>" -- "Collections.emptySet" 
"Entry<String,Double>.getValue" -- "Entry<String,Double>.getKey" 
"Collectors.joining" -- "String.cast" 
"Collectors.joining" -- "System.lineSeparator" 
"Collectors.joining" -- "IntStream.of" 
"Collectors.joining" -- "Optional.ofNullable" 
"Collectors.joining" -- "Arrays.asList" 
"Collectors.joining" -- "String.toLowerCase" 
"Collectors.joining" -- "String.<init>" 
"Collectors.joining" -- "Stream.of" 
"Collectors.joining" -- "Map<String,String>.entrySet" 
"Collectors.joining" -- "Paths.get" 
"Collectors.joining" -- "Date.<init>" 
"Collectors.joining" -- "Map<String,String>.put" 
"Collectors.joining" -- "InputStreamReader.<init>" 
"Collectors.joining" -- "BufferedReader.<init>" 
"Collectors.joining" -- "Collections.singletonList" 
"Collectors.joining" -- "SimpleDateFormat.format" 
"Collectors.joining" -- "ByteArrayInputStream.<init>" 
"Collectors.joining" -- "List<String>.stream" 
"Collectors.joining" -- "Locale.forLanguageTag" 
"Collectors.joining" -- "Date.getTime" 
"Collectors.joining" -- "ArrayList<String>.stream" 
"Collectors.joining" -- "Class.getDeclaredFields" 
"Collectors.joining" -- "Field.setAccessible" 
"Collectors.joining" -- "Field.isAnnotationPresent" 
"Collectors.joining" -- "Field.get" 
"Collectors.joining" -- "Map<Integer>.keySet" 
"Collectors.joining" -- "Map<Integer>.get" 
"Collectors.joining" -- "Files.readAllLines" 
"Collectors.joining" -- "BufferedReader.lines" 
"Collectors.joining" -- "Files.lines" 
"Collectors.joining" -- "Files.readAllBytes" 
"Collectors.joining" -- "Collectors.toCollection" 
"Collectors.joining" -- "ArrayList<String>.removeAll" 
"Collectors.joining" -- "Character.toTitleCase" 
"Collectors.joining" -- "MultiValueMap<String,String>.forEach" 
"Collectors.joining" -- "MultiValueMap<String,String>.size" 
"Collectors.joining" -- "List<Class>.size" 
"Collectors.joining" -- "List<Class>.get" 
"Map<String,Object>.put" -- "Map<List>.forEach" 
"Map<String,Object>.put" -- "Collections.singletonMap" 
"Map<String,Object>.put" -- "List<Map<String,String>>.add" 
"Map<String,Object>.put" -- "List<Map<String,Object>>.add" 
"Map<String,Object>.put" -- "Map<String,Object>.get" 
"Map<String,Object>.put" -- "Arrays.asList" 
"Map<String,Object>.put" -- "System.currentTimeMillis" 
"Map<String,Object>.put" -- "Map<String,String>.entrySet" 
"Map<String,Object>.put" -- "Builder.build" 
"Map<String,Object>.put" -- "Builder.<init>" 
"Map<String,Object>.put" -- "Map<String,String>.containsKey" 
"Map<String,Object>.put" -- "Map<String,String>.get" 
"Map<String,Object>.put" -- "Map<String,Integer>.keySet" 
"Map<String,Object>.put" -- "Map<String,Integer>.get" 
"Map<String,Object>.put" -- "UUID.randomUUID" 
"Map<String,Object>.put" -- "HashMap<String,Object>.<init>" 
"Map<String,Object>.put" -- "InputStreamReader.<init>" 
"Map<String,Object>.put" -- "Entry<String,String>.getKey" 
"Map<String,Object>.put" -- "Entry<String,String>.getValue" 
"Map<String,Object>.put" -- "Collections.singletonList" 
"Map<String,Object>.put" -- "ScriptEngine.eval" 
"Map<String,Object>.put" -- "Long.valueOf" 
"Map<String,Object>.put" -- "Context.parse" 
"Map<String,Object>.put" -- "Map<String,Object>.cast" 
"Map<String,Object>.put" -- "Context.render" 
"Map<String,Object>.put" -- "Map<String,Object>.isEmpty" 
"Map<String,Object>.put" -- "LinkedHashMap<String,Object>.<init>" 
"Map<String,Object>.put" -- "Integer.<init>" 
"Map<String,Object>.put" -- "Collections.singleton" 
"Map<String,Object>.put" -- "ScriptEngineManager.<init>" 
"Map<String,Object>.put" -- "Builder.settings" 
"Map<String,Object>.put" -- "Builder.index" 
"Map<String,Object>.put" -- "Builder.defaultIndex" 
"Map<String,Object>.put" -- "Document.of" 
"Map<String,Object>.put" -- "Map<String,Object>.putAll" 
"Map<String,Object>.put" -- "Collections.emptySet" 
"Map<String,Object>.put" -- "ScriptEngineManager.getEngineByName" 
"Map<String,Object>.put" -- "Map<String,Object>.remove" 
"Map<String,Object>.put" -- "ObjectFactory.getObject" 
"Map<String,Object>.put" -- "Map<String,Object>.containsKey" 
"Map<String,Object>.put" -- "MultiValueMap<String,Object>.add" 
"Map<String,Object>.put" -- "MultiValueMap.add" 
"Map<List>.forEach" -- "Collections.singletonMap" 
"Map<List>.forEach" -- "List<Map<String,String>>.add" 
"Map<List>.forEach" -- "List<Map<String,Object>>.add" 
"Map<List>.forEach" -- "EuclideanDistance.<init>" 
"Map<List>.forEach" -- "String.join" 
"Collections.singletonMap" -- "List<Map<String,String>>.add" 
"Collections.singletonMap" -- "List<Map<String,Object>>.add" 
"Collections.singletonMap" -- "Optional.ofNullable" 
"Collections.singletonMap" -- "Response.ok" 
"Collections.singletonMap" -- "Collections.singletonList" 
"Collections.singletonMap" -- "String.getBytes" 
"Collections.singletonMap" -- "LinkedHashMap.cast" 
"Collections.singletonMap" -- "LinkedHashMap.instance" 
"Collections.singletonMap" -- "LinkedHashMap.entrySet" 
"List<Map<String,String>>.add" -- "List<Map<String,Object>>.add" 
"List<Map<String,Object>>.add" -- "Map<String,Object>.get" 
"List<Map<String,Object>>.add" -- "Collection.cast" 
"List<Map<String,Object>>.add" -- "Iterator<Map<String,Object>>.hasNext" 
"List<Map<String,Object>>.add" -- "Iterator<Map<String,Object>>.next" 
"List<Map<String,Object>>.add" -- "List<Map<String,Object>>.indexOf" 
"EuclideanDistance.<init>" -- "String.join" 
"String.join" -- "Map<String,Object>.get" 
"String.join" -- "String.startsWith" 
"String.join" -- "String.chars" 
"String.join" -- "Arrays.asList" 
"String.join" -- "Set<String>.add" 
"String.join" -- "List<Integer>.size" 
"String.join" -- "System.currentTimeMillis" 
"String.join" -- "List<String>.add" 
"String.join" -- "Collectors.partitioningBy" 
"String.join" -- "LocalDateTime.now" 
"String.join" -- "Collection<String>.stream" 
"String.join" -- "LinkedHashSet.<init>" 
"String.join" -- "Iterator<String>.remove" 
"String.join" -- "Collection<String>.add" 
"String.join" -- "Collection<String>.removeIf" 
"String.join" -- "Collection<String>.iterator" 
"String.join" -- "Map<Boolean,List<String>>.get" 
"String.join" -- "List<String>.isEmpty" 
"String.join" -- "NetworkInterface.getNetworkInterfaces" 
"String.join" -- "Enumeration<NetworkInterface>.hasMoreElements" 
"String.join" -- "Enumeration<NetworkInterface>.nextElement" 
"String.join" -- "NetworkInterface.getHardwareAddress" 
"String.join" -- "Response.seeOther" 
"String.join" -- "Collections.nCopies" 
"String.join" -- "List<Integer>.toArray" 
"String.join" -- "List<LinkedHashMap<String,String>>.cast" 
"String.join" -- "LinkedHashMap<String,String>.get" 
"List<Map<String,Object>>.cast" -- "List<Map<String,Object>>.stream" 
"List<Map<String,Object>>.cast" -- "String.cast" 
"List<Map<String,Object>>.cast" -- "Map<String,Object>.get" 
"List<Map<String,Object>>.stream" -- "String.cast" 
"List<Map<String,Object>>.stream" -- "Map<String,Object>.get" 
"String.cast" -- "Map<String,Object>.get" 
"String.cast" -- "Integer.cast" 
"String.cast" -- "String.startsWith" 
"String.cast" -- "Optional.ofNullable" 
"String.cast" -- "Set<String>.addAll" 
"String.cast" -- "String.<init>" 
"String.cast" -- "StringBuffer.<init>" 
"String.cast" -- "StringBuffer.append" 
"String.cast" -- "StringBuffer.toString" 
"String.cast" -- "Stream.of(new" 
"String.cast" -- "Stream.of" 
"String.cast" -- "System.currentTimeMillis" 
"String.cast" -- "Map<String,String>.entrySet" 
"String.cast" -- "Collectors.toMap" 
"String.cast" -- "Thread.currentThread" 
"String.cast" -- "Long.cast" 
"String.cast" -- "Label.<init>" 
"String.cast" -- "Map<String,String>.put" 
"String.cast" -- "InputStreamReader.<init>" 
"String.cast" -- "BufferedReader.<init>" 
"String.cast" -- "OutputStreamWriter.<init>" 
"String.cast" -- "OutputStreamWriter.write" 
"String.cast" -- "OutputStreamWriter.close" 
"String.cast" -- "Instant.ofEpochSecond" 
"String.cast" -- "Class.getDeclaredFields" 
"String.cast" -- "Field.setAccessible" 
"String.cast" -- "Field.isAnnotationPresent" 
"String.cast" -- "Field.get" 
"String.cast" -- "Enumeration.hasMoreElements" 
"String.cast" -- "Enumeration.nextElement" 
"String.cast" -- "Map<String>.keySet" 
"String.cast" -- "Date.from" 
"String.cast" -- "Integer.valueOf" 
"String.cast" -- "StringBuffer.length" 
"String.cast" -- "Long.valueOf" 
"String.cast" -- "Map<String>.get" 
"String.cast" -- "StringTokenizer.<init>" 
"String.cast" -- "Collections.list" 
"String.cast" -- "Collections.list(new" 
"String.cast" -- "Map<String,Long>.put" 
"String.cast" -- "Long.parseLong" 
"String.cast" -- "BigDecimal.setScale" 
"String.cast" -- "String.instance" 
"String.cast" -- "Map<String>.remove" 
"String.cast" -- "Map<String,Object>.forEach" 
"String.cast" -- "Map.get" 
"String.cast" -- "Response.getBody" 
"String.cast" -- "Form.<init>" 
"String.cast" -- "Form.param" 
"String.cast" -- "Entity.entity" 
"String.cast" -- "PropertyChangeEvent.getNewValue" 
"String.cast" -- "List<Task>.stream" 
"String.cast" -- "Message.getMessageProperties" 
"String.cast" -- "Channel.basicReject" 
"String.cast" -- "Number.cast" 
"String.cast" -- "Number.doubleValue" 
"String.cast" -- "Optional<String>.map" 
"String.cast" -- "Entry.getKey" 
"String.cast" -- "Entry.getValue" 
"String.cast" -- "Message.getPayload" 
"String.cast" -- "Map.cast" 
"String.cast" -- "ArrayList<String>.get" 
"String.cast" -- "Label.setOutputMarkupId" 
"Map<String,Object>.get" -- "Integer.cast" 
"Map<String,Object>.get" -- "List<String>.add" 
"Map<String,Object>.get" -- "Collection.cast" 
"Map<String,Object>.get" -- "Class.isAssignableFrom" 
"Map<String,Object>.get" -- "Iterator<Map<String,Object>>.hasNext" 
"Map<String,Object>.get" -- "Iterator<Map<String,Object>>.next" 
"Map<String,Object>.get" -- "List<Map<String,Object>>.indexOf" 
"Map<String,Object>.get" -- "List<LinkedHashMap<String,String>>.cast" 
"Map<String,Object>.get" -- "LinkedHashMap<String,String>.get" 
"Map<String,Object>.get" -- "Objects.nonNull" 
"Map<String,Object>.get" -- "LinkedHashMap.cast" 
"Map<String,Object>.get" -- "LinkedHashMap.get" 
"Map<String,Object>.get" -- "List<Task>.stream" 
"Map<String,Object>.get" -- "Map<String,Object>.remove" 
"Map<String,Object>.get" -- "ObjectFactory.getObject" 
"Map<String,Object>.get" -- "Map<String,Object>.containsKey" 
"Integer.cast" -- "Stream.of" 
"Integer.cast" -- "Collectors.toMap" 
"Integer.cast" -- "ObjectInputStream.readObject" 
"Integer.cast" -- "ObjectInputStream.defaultReadObject" 
"Integer.cast" -- "Integer.intValue" 
"Integer.cast" -- "List<CompletableFuture>.add" 
"Integer.cast" -- "List<CompletableFuture>.stream" 
"Integer.cast" -- "Map.get" 
"Integer.cast" -- "Message.getMessageProperties" 
"Integer.cast" -- "Map.cast" 
"Collections.emptyMap" -- "Request.body" 
"Collections.emptyMap" -- "Request.queryString" 
"Collections.emptyMap" -- "Request.getHeaders" 
"Collections.emptyMap" -- "MultiValueMap<String,String>.putAll" 
"System.lineSeparator" -- "String.<init>" 
"System.lineSeparator" -- "StringBuffer.<init>" 
"System.lineSeparator" -- "StringBuffer.append" 
"System.lineSeparator" -- "StringBuffer.toString" 
"System.lineSeparator" -- "String.replace" 
"System.lineSeparator" -- "Paths.get" 
"System.lineSeparator" -- "InputStreamReader.<init>" 
"System.lineSeparator" -- "BufferedReader.<init>" 
"System.lineSeparator" -- "ByteBuffer.allocate" 
"System.lineSeparator" -- "ByteBuffer.put" 
"System.lineSeparator" -- "Files.createTempFile" 
"System.lineSeparator" -- "Files.write" 
"System.lineSeparator" -- "System.getProperty" 
"System.lineSeparator" -- "BufferedReader.readLine" 
"System.lineSeparator" -- "BufferedReader.close" 
"System.lineSeparator" -- "BufferedReader.lines" 
"System.lineSeparator" -- "Files.lines" 
"System.lineSeparator" -- "Charset.defaultCharset" 
"System.lineSeparator" -- "ByteBuffer.hasRemaining" 
"System.lineSeparator" -- "ByteBuffer.flip" 
"System.lineSeparator" -- "ManagementFactory.getThreadMXBean" 
"System.lineSeparator" -- "ThreadMXBean.dumpAllThreads" 
"System.lineSeparator" -- "ThreadInfo.toString" 
"System.lineSeparator" -- "File.toPath" 
"System.lineSeparator" -- "Files.readAllBytes" 
"System.lineSeparator" -- "Base64.decodeBase64" 
"System.lineSeparator" -- "KeyFactory.getInstance" 
"System.lineSeparator" -- "X509EncodedKeySpec.<init>" 
"System.lineSeparator" -- "KeyFactory.generatePublic" 
"System.lineSeparator" -- "RSAPublicKey.cast" 
"System.lineSeparator" -- "PKCS8EncodedKeySpec.<init>" 
"System.lineSeparator" -- "KeyFactory.generatePrivate" 
"System.lineSeparator" -- "RSAPrivateKey.cast" 
"String.toUpperCase" -- "String.startsWith" 
"String.toUpperCase" -- "String.chars" 
"String.toUpperCase" -- "Collectors.toMap" 
"String.toUpperCase" -- "Thread.currentThread" 
"String.toUpperCase" -- "Collectors.counting" 
"String.toUpperCase" -- "Collectors.groupingBy" 
"String.toUpperCase" -- "Function.identity" 
"String.toUpperCase" -- "Map<String,List<String>>.entrySet" 
"String.toUpperCase" -- "Entry<String,List<String>>.getValue" 
"String.toUpperCase" -- "Stream<Character>.collect" 
"String.toUpperCase" -- "Map<Character,Long>.values" 
"String.toUpperCase" -- "Map<Character,Long>.size" 
"String.toUpperCase" -- "Map<Character,Boolean>.size" 
"String.toUpperCase" -- "Locale.getDefault" 
"String.toUpperCase" -- "Map<String,List<String>>.isEmpty" 
"String.toUpperCase" -- "Entry<String,List<String>>.getKey" 
"String.startsWith" -- "String.<init>" 
"String.startsWith" -- "Base64.getDecoder" 
"String.startsWith" -- "Iterator<String>.remove" 
"String.startsWith" -- "Collection<String>.add" 
"String.startsWith" -- "Collection<String>.iterator" 
"String.startsWith" -- "Pattern.matcher" 
"String.startsWith" -- "ZipEntry.getName" 
"String.startsWith" -- "File.getCanonicalPath" 
"String.startsWith" -- "Map<String,List<String>>.get" 
"String.chars" -- "System.currentTimeMillis" 
"String.chars" -- "Collectors.toMap" 
"String.chars" -- "Collectors.counting" 
"String.chars" -- "Collectors.groupingBy" 
"String.chars" -- "Function.identity" 
"String.chars" -- "Stream<Character>.collect" 
"String.chars" -- "Map<Character,Long>.values" 
"String.chars" -- "Map<Character,Long>.size" 
"String.chars" -- "Map<Character,Boolean>.size" 
"String.chars" -- "List<Character>.stream" 
"String.chars" -- "String.concat" 
"IntStream.of" -- "Random.<init>" 
"IntStream.of" -- "Thread.sleep" 
"IntStream.of" -- "Thread.<init>" 
"IntStream.of" -- "Thread.start" 
"IntStream.of" -- "IntStream.filter" 
"IntStream.of" -- "IntStream.sum" 
"Optional.empty" -- "Node.next" 
"Optional.empty" -- "Node.hasNext" 
"Optional.empty" -- "Node.data" 
"Optional.empty" -- "Optional.ofNullable" 
"Optional.empty" -- "LinkedList<String>.isEmpty" 
"Optional.empty" -- "LinkedList<String>.size" 
"Optional.empty" -- "LinkedList<String>.get" 
"Optional.empty" -- "Arrays.equals" 
"Optional.empty" -- "ArrayDeque.<init>" 
"Optional.empty" -- "Optional.of" 
"Optional.empty" -- "Queue<Tree>.add" 
"Optional.empty" -- "Queue<Tree>.isEmpty" 
"Optional.empty" -- "Queue<Tree>.remove" 
"Optional.empty" -- "Tree.getValue" 
"Optional.empty" -- "Tree.getChildren" 
"Optional.empty" -- "Queue<Tree>.addAll" 
"Optional.empty" -- "Map<Integer>.put" 
"Optional.empty" -- "CountDownLatch.countDown" 
"Optional.empty" -- "CountDownLatch.await" 
"Optional.empty" -- "Connection.createStatement" 
"Optional.empty" -- "Statement.executeQuery" 
"Optional.empty" -- "ResultSet.getString" 
"Optional.empty" -- "String.getBytes" 
"Optional.empty" -- "AtomicInteger.set" 
"Optional.empty" -- "AtomicInteger.<init>" 
"Optional.empty" -- "CountDownLatch.<init>" 
"Optional.empty" -- "Point.<init>" 
"Optional.empty" -- "Point.setLocation" 
"Optional.empty" -- "Map<String>.get" 
"Optional.empty" -- "Optional.isPresent" 
"Optional.empty" -- "Optional.get" 
"Optional.empty" -- "PreparedStatement.executeQuery" 
"Optional.empty" -- "Connection.prepareStatement" 
"Optional.empty" -- "HashMap<Long>.<init>" 
"Optional.empty" -- "Map<Long>.size" 
"Optional.empty" -- "Map<Long>.entrySet" 
"Optional.empty" -- "Arrays.equals)" 
"Optional.empty" -- "Optional<Entry<Long>>.isPresent" 
"Optional.empty" -- "Optional<Entry<Long>>.get" 
"Optional.empty" -- "ResultSet.getInt" 
"Optional.empty" -- "PreparedStatement.setInt" 
"Optional.empty" -- "ResultSet.first" 
"Optional.empty" -- "Map<Integer>.containsKey" 
"Optional.empty" -- "Resource.getInputStream" 
"Optional.empty" -- "Map.entrySet" 
"Node.next" -- "Node.hasNext" 
"Node.next" -- "Node.data" 
"Node.next" -- "Optional.ofNullable" 
"Node.hasNext" -- "Node.data" 
"Node.hasNext" -- "Optional.ofNullable" 
"Node.data" -- "Optional.ofNullable" 
"Optional.ofNullable" -- "LinkedList<String>.isEmpty" 
"Optional.ofNullable" -- "LinkedList<String>.size" 
"Optional.ofNullable" -- "LinkedList<String>.get" 
"Optional.ofNullable" -- "Arrays.asList" 
"Optional.ofNullable" -- "String.lastIndexOf" 
"Optional.ofNullable" -- "Map<Integer>.put" 
"Optional.ofNullable" -- "Map<Integer>.size" 
"Optional.ofNullable" -- "Thread.sleep" 
"Optional.ofNullable" -- "File.getAbsolutePath" 
"Optional.ofNullable" -- "Map<String>.put" 
"Optional.ofNullable" -- "Collections.singletonList" 
"Optional.ofNullable" -- "Optional<String>.orElseThrow" 
"Optional.ofNullable" -- "Locale.forLanguageTag" 
"Optional.ofNullable" -- "System.getProperty" 
"Optional.ofNullable" -- "Map<Integer>.get" 
"Optional.ofNullable" -- "Optional<String>.isPresent" 
"Optional.ofNullable" -- "Optional<String>.get" 
"Optional.ofNullable" -- "Map<String>.get" 
"Optional.ofNullable" -- "Files.getAttribute" 
"Optional.ofNullable" -- "FileTime.cast" 
"Optional.ofNullable" -- "Optional<String[]>.map" 
"Optional.ofNullable" -- "Optional.orElse" 
"Optional.ofNullable" -- "Security.builder" 
"Optional.ofNullable" -- "Optional.map" 
"Optional.ofNullable" -- "String.instance" 
"Optional.ofNullable" -- "Map<String,Operation>.get" 
"Optional.ofNullable" -- "Set<String>.size" 
"Optional.ofNullable" -- "Map<Integer>.containsKey" 
"Optional.ofNullable" -- "LinkedHashMap.cast" 
"Optional.ofNullable" -- "LinkedHashMap.instance" 
"Optional.ofNullable" -- "LinkedHashMap.entrySet" 
"LinkedList<String>.isEmpty" -- "LinkedList<String>.size" 
"LinkedList<String>.isEmpty" -- "LinkedList<String>.get" 
"LinkedList<String>.size" -- "LinkedList<String>.get" 
"Double.doubleToLongBits" -- "Arrays.equals" 
"Double.doubleToLongBits" -- "Random.equals" 
"Double.doubleToLongBits" -- "Arrays.hashCode" 
"Double.doubleToLongBits" -- "Random.hashCode" 
"Double.doubleToLongBits" -- "String.hashCode" 
"Double.doubleToLongBits" -- "Product.getClass" 
"Double.doubleToLongBits" -- "Product.cast" 
"Double.doubleToLongBits" -- "Rectangle.getClass" 
"Double.doubleToLongBits" -- "Rectangle.cast" 
"Arrays.equals" -- "Random.equals" 
"Arrays.equals" -- "String.toCharArray" 
"Arrays.equals" -- "Optional.of" 
"Arrays.equals" -- "CountDownLatch.countDown" 
"Arrays.equals" -- "CountDownLatch.await" 
"Arrays.equals" -- "Paths.get" 
"Arrays.equals" -- "String.getBytes" 
"Arrays.equals" -- "MessageDigest.getInstance" 
"Arrays.equals" -- "MessageDigest.digest" 
"Arrays.equals" -- "AtomicInteger.set" 
"Arrays.equals" -- "AtomicInteger.<init>" 
"Arrays.equals" -- "CountDownLatch.<init>" 
"Arrays.equals" -- "Map<String>.get" 
"Arrays.equals" -- "Files.readAllBytes" 
"Arrays.equals" -- "Result.getValue" 
"Arrays.equals" -- "Utils.getPublicKey" 
"Arrays.equals" -- "HashMap<Long>.<init>" 
"Arrays.equals" -- "Map<Long>.size" 
"Arrays.equals" -- "Map<Long>.entrySet" 
"Arrays.equals" -- "Arrays.equals)" 
"Arrays.equals" -- "Optional<Entry<Long>>.isPresent" 
"Arrays.equals" -- "Optional<Entry<Long>>.get" 
"Arrays.equals" -- "Put.<init>" 
"Arrays.equals" -- "Put.addColumn" 
"Arrays.hashCode" -- "Random.hashCode" 
"Arrays.asList" -- "Collections.reverse" 
"Arrays.asList" -- "Set<String>.add" 
"Arrays.asList" -- "ArrayList<Integer>.add" 
"Arrays.asList" -- "String.<init>" 
"Arrays.asList" -- "SecureRandom.nextInt" 
"Arrays.asList" -- "List<Integer>.add" 
"Arrays.asList" -- "Stream.of" 
"Arrays.asList" -- "List<Integer>.remove" 
"Arrays.asList" -- "Optional.of" 
"Arrays.asList" -- "List<Integer>.stream" 
"Arrays.asList" -- "Random.<init>" 
"Arrays.asList" -- "Double.parseDouble" 
"Arrays.asList" -- "Collectors.toMap" 
"Arrays.asList" -- "Thread.sleep" 
"Arrays.asList" -- "Response.status" 
"Arrays.asList" -- "Response.ok" 
"Arrays.asList" -- "BigDecimal.valueOf" 
"Arrays.asList" -- "Filter.by" 
"Arrays.asList" -- "Builder.build" 
"Arrays.asList" -- "Builder.<init>" 
"Arrays.asList" -- "FileOutputStream.<init>" 
"Arrays.asList" -- "FileInputStream.<init>" 
"Arrays.asList" -- "FileOutputStream.close" 
"Arrays.asList" -- "Paths.get" 
"Arrays.asList" -- "Map<String,Integer>.keySet" 
"Arrays.asList" -- "Map<String,Integer>.get" 
"Arrays.asList" -- "UUID.randomUUID" 
"Arrays.asList" -- "Date.<init>" 
"Arrays.asList" -- "List.cast" 
"Arrays.asList" -- "Storage.builder" 
"Arrays.asList" -- "WorkerThread.<init>" 
"Arrays.asList" -- "WorkerThread.run" 
"Arrays.asList" -- "ResultSet.getString" 
"Arrays.asList" -- "Map<String>.put" 
"Arrays.asList" -- "InputStreamReader.<init>" 
"Arrays.asList" -- "Calendar.getInstance" 
"Arrays.asList" -- "Locale.<init>" 
"Arrays.asList" -- "URI.<init>" 
"Arrays.asList" -- "List<URI>.stream" 
"Arrays.asList" -- "List<String>.stream" 
"Arrays.asList" -- "List.addAll" 
"Arrays.asList" -- "LocalDate.of" 
"Arrays.asList" -- "Date.before" 
"Arrays.asList" -- "ArrayList<Integer>.toArray" 
"Arrays.asList" -- "LinkedHashSet<Integer>.<init>" 
"Arrays.asList" -- "Set<Integer>.size" 
"Arrays.asList" -- "Set<Integer>.toArray" 
"Arrays.asList" -- "LinkedHashSet.<init>" 
"Arrays.asList" -- "HashSet<Integer>.<init>" 
"Arrays.asList" -- "List<String>.contains" 
"Arrays.asList" -- "List<Object>.toArray" 
"Arrays.asList" -- "ArrayList<String>.cast" 
"Arrays.asList" -- "List<Integer>.iterator" 
"Arrays.asList" -- "List<String>.isEmpty" 
"Arrays.asList" -- "HashSet<String>.<init>" 
"Arrays.asList" -- "TreeMap.<init>" 
"Arrays.asList" -- "Instant.plus" 
"Arrays.asList" -- "Date.from" 
"Arrays.asList" -- "Objects.requireNonNull" 
"Arrays.asList" -- "FileInputStream.close" 
"Arrays.asList" -- "ZipEntry.<init>" 
"Arrays.asList" -- "ZipOutputStream.putNextEntry" 
"Arrays.asList" -- "File.getName" 
"Arrays.asList" -- "FileInputStream.read" 
"Arrays.asList" -- "ZipOutputStream.write" 
"Arrays.asList" -- "ZipOutputStream.<init>" 
"Arrays.asList" -- "ZipOutputStream.close" 
"Arrays.asList" -- "String.equalsIgnoreCase" 
"Arrays.asList" -- "Math.ceil" 
"Arrays.asList" -- "Map<String>.get" 
"Arrays.asList" -- "Map<String,List<String>>.put" 
"Arrays.asList" -- "Map<String,List<String>>.entrySet" 
"Arrays.asList" -- "Iterator<Entry<String,List<String>>>.hasNext" 
"Arrays.asList" -- "Iterator<Entry<String,List<String>>>.next" 
"Arrays.asList" -- "Entry<String,List<String>>.getValue" 
"Arrays.asList" -- "Instant.now" 
"Arrays.asList" -- "List<String>.containsAll" 
"Arrays.asList" -- "Function.<init>" 
"Arrays.asList" -- "Observable.fromIterable" 
"Arrays.asList" -- "Iterable<Integer>.cast" 
"Arrays.asList" -- "OptionalLong.of" 
"Arrays.asList" -- "OptionalInt.of" 
"Arrays.asList" -- "OptionalDouble.of" 
"Arrays.asList" -- "Locale.getAvailableLocales" 
"Arrays.asList" -- "Locale.lookup" 
"Arrays.asList" -- "Security.builder" 
"Arrays.asList" -- "Polygon.<init>" 
"Arrays.asList" -- "Message.<init>" 
"Arrays.asList" -- "Environment.getActiveProfiles" 
"Arrays.asList" -- "Collection<String>.contains" 
"Arrays.asList" -- "Environment.getDefaultProfiles" 
"Arrays.asList" -- "List<String>.retainAll" 
"Arrays.asList" -- "Role.<init>" 
"Arrays.asList" -- "Map<String,Role>.put" 
"Arrays.asList" -- "Frequency.<init>" 
"Arrays.asList" -- "Frequency.addValue" 
"Arrays.asList" -- "Frequency.getCount" 
"Arrays.asList" -- "Math.multiplyExact" 
"Arrays.asList" -- "Math.subtractExact" 
"Arrays.asList" -- "Map.values" 
"Arrays.asList" -- "Map.keySet" 
"Arrays.asList" -- "Builder.setDataStoreFactory" 
"Arrays.asList" -- "Document.<init>" 
"Arrays.asList" -- "Builder.issuer" 
"Arrays.asList" -- "Set<String>.containsAll" 
"Arrays.asList" -- "Builder.settings" 
"Arrays.asList" -- "Builder.index" 
"Arrays.asList" -- "Builder.defaultIndex" 
"Arrays.asList" -- "Document.append" 
"Arrays.asList" -- "RowMapper<Object>.<init>" 
"Arrays.asList" -- "Builder.found" 
"Arrays.asList" -- "Builder.didNotFind" 
"Arrays.asList" -- "Instant.parse" 
"Arrays.asList" -- "Map<String,Validator>.entrySet" 
"Arrays.asList" -- "Entry<String,Validator>.getValue" 
"Arrays.asList" -- "Entry<String,Validator>.getKey" 
"Arrays.asList" -- "Version.<init>" 
"Arrays.asList" -- "HashSet<Class>.<init>" 
"Arrays.asList" -- "HashSet<Role>.<init>" 
"Arrays.asList" -- "Connection.getDisplayName" 
"Collections.reverse" -- "PriorityQueue.<init>" 
"Collections.reverse" -- "PriorityQueue<Integer>.add" 
"Collections.reverse" -- "PriorityQueue<Integer>.size" 
"Collections.reverse" -- "PriorityQueue<Integer>.poll" 
"Collections.reverse" -- "MethodTree.getParameters" 
"Collections.reverse" -- "List<VariableTree>.isEmpty" 
"Collections.reverse" -- "List<VariableTree>.forEach" 
"String.toLowerCase" -- "String.<init>" 
"String.toLowerCase" -- "List<Integer>.add" 
"String.toLowerCase" -- "Stream.of" 
"String.toLowerCase" -- "Paths.get" 
"String.toLowerCase" -- "List<String>.stream" 
"String.toLowerCase" -- "ArrayList<Integer>.<init>" 
"String.toLowerCase" -- "Files.readAllLines" 
"String.toLowerCase" -- "String.indexOf" 
"String.toLowerCase" -- "Files.readAllBytes" 
"String.toLowerCase" -- "Collector<<String,Integer>>.collect" 
"Map<Character,Integer>.containsKey" -- "Map<Character,Integer>.get" 
"Map<Character,Integer>.containsKey" -- "Math.max" 
"Map<Character,Integer>.containsKey" -- "Map<Character,Integer>.put" 
"Map<Character,Integer>.get" -- "Math.max" 
"Map<Character,Integer>.get" -- "Map<Character,Integer>.put" 
"Math.max" -- "Map<Character,Integer>.put" 
"Math.max" -- "String.toCharArray" 
"Math.max" -- "Character.toString" 
"Math.max" -- "Set<String>.add" 
"Math.max" -- "Math.min" 
"Math.max" -- "Result.<init>" 
"Math.max" -- "Tree.left" 
"Math.max" -- "Tree.right" 
"Math.max" -- "Set<Integer>.addAll" 
"Math.max" -- "HashSet<Integer>.<init>" 
"Math.max" -- "Math.toRadians" 
"Math.max" -- "Math.sin" 
"Math.max" -- "Math.tan" 
"Math.max" -- "Integer.compareTo" 
"Math.max" -- "AVLTree.height" 
"Math.max" -- "Map<Integer,Integer>.keySet" 
"Math.max" -- "Map<Integer,Integer>.getOrDefault" 
"Set<Character>.contains" -- "Set<Character>.add" 
"Set<Character>.add" -- "LinkedHashSet.<init>" 
"String.toCharArray" -- "Character.toString" 
"String.toCharArray" -- "Set<String>.add" 
"String.toCharArray" -- "Math.min" 
"String.toCharArray" -- "String.<init>" 
"String.toCharArray" -- "Deque<Character>.addFirst" 
"String.toCharArray" -- "Deque<Character>.peekFirst" 
"String.toCharArray" -- "Deque<Character>.isEmpty" 
"String.toCharArray" -- "Deque<Character>.removeFirst" 
"String.toCharArray" -- "String.replaceAll" 
"String.toCharArray" -- "FileOutputStream.<init>" 
"String.toCharArray" -- "FileInputStream.<init>" 
"String.toCharArray" -- "FileOutputStream.close" 
"String.toCharArray" -- "PasswordAuthentication.<init>" 
"String.toCharArray" -- "KeyStore.setKeyEntry" 
"String.toCharArray" -- "PasswordProtection.<init>" 
"String.toCharArray" -- "KeyStore.getEntry" 
"String.toCharArray" -- "KeyStore.load" 
"String.toCharArray" -- "KeyStore.getDefaultType" 
"String.toCharArray" -- "KeyStore.getInstance" 
"String.toCharArray" -- "KeyStore.store" 
"String.toCharArray" -- "Character.toTitleCase" 
"String.toCharArray" -- "Character.isSpaceChar" 
"String.toCharArray" -- "Character.toLowerCase" 
"Character.toString" -- "Set<String>.add" 
"Character.toString" -- "Math.min" 
"Set<String>.add" -- "Math.min" 
"Set<String>.add" -- "Set<String>.addAll" 
"Set<String>.add" -- "Collections.unmodifiableSet" 
"Set<String>.add" -- "Paths.get" 
"Set<String>.add" -- "Path.getFileName" 
"Set<String>.add" -- "UUID.randomUUID" 
"Set<String>.add" -- "LinkedHashSet.<init>" 
"Set<String>.add" -- "HashSet<String>.<init>" 
"Set<String>.add" -- "Files.isDirectory" 
"Set<String>.add" -- "SimpleFileVisitor<Path>.<init>" 
"Set<String>.add" -- "Files.walkFileTree" 
"Set<String>.add" -- "LinkedHashSet<String>.<init>" 
"Set<String>.add" -- "LinkedList<String>.<init>" 
"Set<String>.add" -- "Queue<String>.add" 
"Set<String>.add" -- "Queue<String>.isEmpty" 
"Set<String>.add" -- "Queue<String>.poll" 
"Set<String>.add" -- "Graph.getAdjVertices" 
"Set<String>.add" -- "Stack<String>.<init>" 
"Set<String>.add" -- "Stack<String>.isEmpty" 
"Math.min" -- "List<Integer>.size" 
"Math.min" -- "List<List<Integer>>.add" 
"Math.min" -- "List<Integer>.get" 
"Math.min" -- "Integer.equals" 
"Math.min" -- "Cell.<init>" 
"Math.min" -- "List<Integer>.add" 
"Math.min" -- "List<List<Integer>>.stream" 
"Math.min" -- "List<Node>.size" 
"Math.min" -- "Node.getText" 
"Math.min" -- "List<Node>.addAll" 
"Math.min" -- "Math.toRadians" 
"Math.min" -- "Math.sin" 
"Math.min" -- "Math.tan" 
"Math.min" -- "List<Book>.size" 
"Math.min" -- "Pageable.getPageNumber" 
"Math.min" -- "Pageable.getPageSize" 
"Math.min" -- "List<Book>.subList" 
"StringBuilder.reverse" -- "String.replaceAll" 
"StringBuilder.reverse" -- "Integer.valueOf" 
"Set<String>.addAll" -- "Map<String,Set<String>>.containsKey" 
"Set<String>.addAll" -- "Map<String,Set<String>>.get" 
"Result.<init>" -- "Tree.left" 
"Result.<init>" -- "Tree.right" 
"Tree.left" -- "Tree.right" 
"Integer.numberOfTrailingZeros" -- "Iterator.<init>" 
"List<Character>.size" -- "List<List<Character>>.add" 
"List<Character>.size" -- "List<Character>.get" 
"List<Character>.size" -- "List<Character>.add" 
"List<Character>.size" -- "List<Character>.remove" 
"List<List<Character>>.add" -- "List<Character>.get" 
"List<List<Character>>.add" -- "List<Character>.add" 
"List<List<Character>>.add" -- "List<Character>.remove" 
"List<Character>.get" -- "List<Character>.add" 
"List<Character>.get" -- "List<Character>.remove" 
"List<Character>.add" -- "List<Character>.remove" 
"ArrayList<Integer>.size" -- "List<Integer>.size" 
"ArrayList<Integer>.size" -- "List<List<Integer>>.add" 
"ArrayList<Integer>.size" -- "List<Integer>.get" 
"ArrayList<Integer>.size" -- "ArrayList<Integer>.add" 
"ArrayList<Integer>.size" -- "ArrayList<Integer>.remove" 
"ArrayList<Integer>.size" -- "ArrayList<Integer>.iterator" 
"ArrayList<Integer>.size" -- "Iterator<Integer>.hasNext" 
"ArrayList<Integer>.size" -- "Iterator<Integer>.next" 
"ArrayList<Integer>.size" -- "Iterator<Integer>.remove" 
"List<Integer>.size" -- "List<List<Integer>>.add" 
"List<Integer>.size" -- "List<Integer>.get" 
"List<Integer>.size" -- "ArrayList<Integer>.add" 
"List<Integer>.size" -- "ArrayList<Integer>.remove" 
"List<Integer>.size" -- "Integer.equals" 
"List<Integer>.size" -- "Cell.<init>" 
"List<Integer>.size" -- "List<Integer>.add" 
"List<Integer>.size" -- "List<List<Integer>>.stream" 
"List<Integer>.size" -- "List<Integer>.remove" 
"List<Integer>.size" -- "List<List<Integer>>.get" 
"List<Integer>.size" -- "Date.<init>" 
"List<Integer>.size" -- "SimpleDateFormat.format" 
"List<Integer>.size" -- "Date.getTime" 
"List<Integer>.size" -- "ArrayList<Integer>.<init>" 
"List<Integer>.size" -- "Collections.nCopies" 
"List<Integer>.size" -- "List<Integer>.toArray" 
"List<Integer>.size" -- "List<ArrayList<Integer>>.size" 
"List<Integer>.size" -- "List<ArrayList<Integer>>.get" 
"List<List<Integer>>.add" -- "List<Integer>.get" 
"List<List<Integer>>.add" -- "ArrayList<Integer>.add" 
"List<List<Integer>>.add" -- "ArrayList<Integer>.remove" 
"List<List<Integer>>.add" -- "Integer.equals" 
"List<List<Integer>>.add" -- "Cell.<init>" 
"List<List<Integer>>.add" -- "List<Integer>.add" 
"List<List<Integer>>.add" -- "List<List<Integer>>.stream" 
"List<List<Integer>>.add" -- "List<List<Integer>>.get" 
"List<List<Integer>>.add" -- "Thread.currentThread" 
"List<List<Integer>>.add" -- "CyclicBarrier.await" 
"List<Integer>.get" -- "ArrayList<Integer>.add" 
"List<Integer>.get" -- "ArrayList<Integer>.remove" 
"List<Integer>.get" -- "Integer.equals" 
"List<Integer>.get" -- "Cell.<init>" 
"List<Integer>.get" -- "List<Integer>.add" 
"List<Integer>.get" -- "List<List<Integer>>.stream" 
"List<Integer>.get" -- "List<Integer>.remove" 
"List<Integer>.get" -- "Date.<init>" 
"List<Integer>.get" -- "SimpleDateFormat.format" 
"List<Integer>.get" -- "Date.getTime" 
"List<Integer>.get" -- "ArrayList<Integer>.<init>" 
"List<Integer>.get" -- "List<ArrayList<Integer>>.size" 
"List<Integer>.get" -- "List<ArrayList<Integer>>.get" 
"ArrayList<Integer>.add" -- "ArrayList<Integer>.remove" 
"ArrayList<Integer>.add" -- "List<String>.add" 
"ArrayList<Integer>.add" -- "ArrayList<Integer>.toArray" 
"ArrayList<Integer>.add" -- "List<String>.contains" 
"ArrayList<Integer>.add" -- "ArrayList<Integer>.<init>" 
"ArrayList<Integer>.add" -- "ArrayList<Integer>.iterator" 
"ArrayList<Integer>.add" -- "Iterator<Integer>.hasNext" 
"ArrayList<Integer>.add" -- "Iterator<Integer>.next" 
"ArrayList<Integer>.add" -- "Iterator<Integer>.remove" 
"ArrayList<Integer>.add" -- "List<ArrayList<Integer>>.add" 
"ArrayList<Integer>.remove" -- "ArrayList<Integer>.iterator" 
"ArrayList<Integer>.remove" -- "Iterator<Integer>.hasNext" 
"ArrayList<Integer>.remove" -- "Iterator<Integer>.next" 
"ArrayList<Integer>.remove" -- "Iterator<Integer>.remove" 
"BigInteger.<init>" -- "BigInteger.toByteArray" 
"BigInteger.<init>" -- "BigInteger.toString" 
"BigInteger.<init>" -- "BigInteger.valueOf" 
"BigInteger.<init>" -- "BigInteger.multiply" 
"BigInteger.<init>" -- "BigInteger.add" 
"BigInteger.toString" -- "ForkJoinPool.commonPool" 
"BigInteger.toString" -- "ForkJoinPool.invoke" 
"Character.forDigit" -- "String.<init>" 
"String.<init>" -- "Stream.of" 
"String.<init>" -- "StringBuilder.length" 
"String.<init>" -- "List<String>.add" 
"String.<init>" -- "Random.<init>" 
"String.<init>" -- "String.replace" 
"String.<init>" -- "ByteArrayOutputStream.<init>" 
"String.<init>" -- "ByteArrayOutputStream.toByteArray" 
"String.<init>" -- "Paths.get" 
"String.<init>" -- "Base64.getDecoder" 
"String.<init>" -- "String.getBytes" 
"String.<init>" -- "MessageDigest.getInstance" 
"String.<init>" -- "MessageDigest.digest" 
"String.<init>" -- "List<String>.stream" 
"String.<init>" -- "ByteBuffer.wrap" 
"String.<init>" -- "ArrayList<String>.cast" 
"String.<init>" -- "Map<Integer>.get" 
"String.<init>" -- "Files.readAllLines" 
"String.<init>" -- "Socket.getInputStream" 
"String.<init>" -- "ServerSocket.<init>" 
"String.<init>" -- "ServerSocket.accept" 
"String.<init>" -- "BufferedReader.read" 
"String.<init>" -- "Reader.read" 
"String.<init>" -- "ByteArrayOutputStream.write" 
"String.<init>" -- "DatagramSocket.close" 
"String.<init>" -- "DatagramPacket.<init>" 
"String.<init>" -- "DatagramSocket.receive" 
"String.<init>" -- "DatagramSocket.send" 
"String.<init>" -- "DatagramPacket.getAddress" 
"String.<init>" -- "DatagramPacket.getPort" 
"String.<init>" -- "DatagramPacket.getData" 
"String.<init>" -- "DatagramPacket.getLength" 
"String.<init>" -- "MulticastSocket.receive" 
"String.<init>" -- "MulticastSocket.send" 
"String.<init>" -- "MulticastSocket.leaveGroup" 
"String.<init>" -- "MulticastSocket.close" 
"String.<init>" -- "DataInputStream.<init>" 
"String.<init>" -- "BufferedInputStream.<init>" 
"String.<init>" -- "DataInputStream.readChar" 
"String.<init>" -- "DataInputStream.readInt" 
"String.<init>" -- "DataInputStream.read" 
"String.<init>" -- "Base64.encodeBase64" 
"String.<init>" -- "Charset.defaultCharset" 
"String.<init>" -- "ByteBuffer.flip" 
"String.<init>" -- "SocketChannel.write" 
"String.<init>" -- "ByteBuffer.clear" 
"String.<init>" -- "SocketChannel.read" 
"String.<init>" -- "ByteBuffer.array" 
"String.<init>" -- "SocketChannel.close" 
"String.<init>" -- "SelectionKey.channel" 
"String.<init>" -- "SocketChannel.cast" 
"String.<init>" -- "Random.nextBytes" 
"String.<init>" -- "Charset.forName" 
"String.<init>" -- "NameCallback.<init>" 
"String.<init>" -- "PasswordCallback.<init>" 
"String.<init>" -- "CallbackHandler.handle" 
"String.<init>" -- "NameCallback.getName" 
"String.<init>" -- "PasswordCallback.getPassword" 
"String.<init>" -- "File.toPath" 
"String.<init>" -- "Files.readAllBytes" 
"String.<init>" -- "Base64.decodeBase64" 
"String.<init>" -- "KeyFactory.getInstance" 
"String.<init>" -- "X509EncodedKeySpec.<init>" 
"String.<init>" -- "KeyFactory.generatePublic" 
"String.<init>" -- "RSAPublicKey.cast" 
"String.<init>" -- "PKCS8EncodedKeySpec.<init>" 
"String.<init>" -- "KeyFactory.generatePrivate" 
"String.<init>" -- "RSAPrivateKey.cast" 
"String.<init>" -- "String.getChars" 
"String.<init>" -- "Storage.get" 
"String.<init>" -- "Blob.getContent" 
"String.<init>" -- "String.instance" 
"String.<init>" -- "Duration.ofSeconds" 
"String.<init>" -- "Message.toString" 
"String.<init>" -- "Message.getBody" 
"String.<init>" -- "Connection.createChannel" 
"String.<init>" -- "Channel.queueDeclare" 
"String.<init>" -- "Channel.basicConsume" 
"String.<init>" -- "Message.getPayload" 
"String.<init>" -- "Queue.getName" 
"StringBuffer.<init>" -- "StringBuffer.append" 
"StringBuffer.<init>" -- "StringBuffer.toString" 
"StringBuffer.<init>" -- "TreeNode.getValue" 
"StringBuffer.<init>" -- "TreeNode.getLeftChild" 
"StringBuffer.<init>" -- "TreeNode.getRightChild" 
"StringBuffer.<init>" -- "String.replaceAll" 
"StringBuffer.<init>" -- "Paths.get" 
"StringBuffer.<init>" -- "Path.toString" 
"StringBuffer.<init>" -- "Long.toString" 
"StringBuffer.<init>" -- "InputStreamReader.<init>" 
"StringBuffer.<init>" -- "BufferedReader.<init>" 
"StringBuffer.<init>" -- "Files.write" 
"StringBuffer.<init>" -- "FileReader.<init>" 
"StringBuffer.<init>" -- "String.getBytes" 
"StringBuffer.<init>" -- "MessageDigest.getInstance" 
"StringBuffer.<init>" -- "MessageDigest.digest" 
"StringBuffer.<init>" -- "ArrayList<String>.add" 
"StringBuffer.<init>" -- "Enumeration.hasMoreElements" 
"StringBuffer.<init>" -- "Enumeration.nextElement" 
"StringBuffer.<init>" -- "BufferedReader.readLine" 
"StringBuffer.<init>" -- "BufferedReader.close" 
"StringBuffer.<init>" -- "StringBuffer.length" 
"StringBuffer.<init>" -- "FileReader.close" 
"StringBuffer.<init>" -- "Process.getInputStream" 
"StringBuffer.<init>" -- "Class.getName" 
"StringBuffer.<init>" -- "ManagementFactory.getThreadMXBean" 
"StringBuffer.<init>" -- "ThreadMXBean.dumpAllThreads" 
"StringBuffer.<init>" -- "ThreadInfo.toString" 
"StringBuffer.<init>" -- "Integer.toHexString" 
"StringBuffer.<init>" -- "StringBuffer.reverse" 
"StringBuffer.<init>" -- "StringBuffer.setCharAt" 
"StringBuffer.<init>" -- "Integer.toBinaryString" 
"StringBuffer.<init>" -- "Map<Vertex,List<Vertex>>.keySet" 
"StringBuffer.<init>" -- "Map<Vertex,List<Vertex>>.get" 
"StringBuffer.append" -- "StringBuffer.toString" 
"StringBuffer.append" -- "TreeNode.getValue" 
"StringBuffer.append" -- "TreeNode.getLeftChild" 
"StringBuffer.append" -- "TreeNode.getRightChild" 
"StringBuffer.append" -- "Paths.get" 
"StringBuffer.append" -- "Path.toString" 
"StringBuffer.append" -- "Long.toString" 
"StringBuffer.append" -- "InputStreamReader.<init>" 
"StringBuffer.append" -- "BufferedReader.<init>" 
"StringBuffer.append" -- "Files.write" 
"StringBuffer.append" -- "FileReader.<init>" 
"StringBuffer.append" -- "String.getBytes" 
"StringBuffer.append" -- "MessageDigest.getInstance" 
"StringBuffer.append" -- "MessageDigest.digest" 
"StringBuffer.append" -- "ArrayList<String>.add" 
"StringBuffer.append" -- "Enumeration.hasMoreElements" 
"StringBuffer.append" -- "Enumeration.nextElement" 
"StringBuffer.append" -- "BufferedReader.readLine" 
"StringBuffer.append" -- "BufferedReader.close" 
"StringBuffer.append" -- "StringBuffer.length" 
"StringBuffer.append" -- "FileReader.close" 
"StringBuffer.append" -- "Process.getInputStream" 
"StringBuffer.append" -- "Class.getName" 
"StringBuffer.append" -- "ManagementFactory.getThreadMXBean" 
"StringBuffer.append" -- "ThreadMXBean.dumpAllThreads" 
"StringBuffer.append" -- "ThreadInfo.toString" 
"StringBuffer.append" -- "Integer.toHexString" 
"StringBuffer.append" -- "Integer.toBinaryString" 
"StringBuffer.append" -- "Map<Vertex,List<Vertex>>.keySet" 
"StringBuffer.append" -- "Map<Vertex,List<Vertex>>.get" 
"StringBuffer.toString" -- "TreeNode.getValue" 
"StringBuffer.toString" -- "TreeNode.getLeftChild" 
"StringBuffer.toString" -- "TreeNode.getRightChild" 
"StringBuffer.toString" -- "String.replaceAll" 
"StringBuffer.toString" -- "Paths.get" 
"StringBuffer.toString" -- "Path.toString" 
"StringBuffer.toString" -- "Long.toString" 
"StringBuffer.toString" -- "InputStreamReader.<init>" 
"StringBuffer.toString" -- "BufferedReader.<init>" 
"StringBuffer.toString" -- "Files.write" 
"StringBuffer.toString" -- "FileReader.<init>" 
"StringBuffer.toString" -- "String.getBytes" 
"StringBuffer.toString" -- "MessageDigest.getInstance" 
"StringBuffer.toString" -- "MessageDigest.digest" 
"StringBuffer.toString" -- "ArrayList<String>.add" 
"StringBuffer.toString" -- "Enumeration.hasMoreElements" 
"StringBuffer.toString" -- "Enumeration.nextElement" 
"StringBuffer.toString" -- "BufferedReader.readLine" 
"StringBuffer.toString" -- "BufferedReader.close" 
"StringBuffer.toString" -- "StringBuffer.length" 
"StringBuffer.toString" -- "FileReader.close" 
"StringBuffer.toString" -- "Process.getInputStream" 
"StringBuffer.toString" -- "ManagementFactory.getThreadMXBean" 
"StringBuffer.toString" -- "ThreadMXBean.dumpAllThreads" 
"StringBuffer.toString" -- "ThreadInfo.toString" 
"StringBuffer.toString" -- "Integer.toHexString" 
"StringBuffer.toString" -- "StringBuffer.reverse" 
"StringBuffer.toString" -- "StringBuffer.setCharAt" 
"StringBuffer.toString" -- "Integer.toBinaryString" 
"StringBuffer.toString" -- "Map<Vertex,List<Vertex>>.keySet" 
"StringBuffer.toString" -- "Map<Vertex,List<Vertex>>.get" 
"Queue<Integer>.size" -- "Queue<Integer>.peek" 
"Queue<Integer>.size" -- "Queue<Integer>.isEmpty" 
"Queue<Integer>.size" -- "Queue<Integer>.offer" 
"Queue<Integer>.size" -- "Queue<Integer>.poll" 
"Queue<Integer>.peek" -- "Queue<Integer>.isEmpty" 
"Queue<Integer>.peek" -- "Queue<Integer>.offer" 
"Queue<Integer>.peek" -- "Queue<Integer>.poll" 
"Queue<Integer>.isEmpty" -- "Queue<Integer>.offer" 
"Queue<Integer>.isEmpty" -- "Queue<Integer>.poll" 
"Queue<Integer>.offer" -- "Queue<Integer>.poll" 
"PriorityQueue.<init>" -- "PriorityQueue<Integer>.add" 
"PriorityQueue.<init>" -- "PriorityQueue<Integer>.size" 
"PriorityQueue.<init>" -- "PriorityQueue<Integer>.poll" 
"Vertex.getEdges" -- "Entry<Vertex,Edge>>.hasNext" 
"Vertex.getEdges" -- "Entry<Vertex,Edge>>.next" 
"Vertex.getEdges" -- "Entry<Vertex,Edge>.getValue" 
"Entry<Vertex,Edge>>.hasNext" -- "Entry<Vertex,Edge>>.next" 
"Entry<Vertex,Edge>>.hasNext" -- "Entry<Vertex,Edge>.getValue" 
"Entry<Vertex,Edge>>.hasNext" -- "Edge.<init>" 
"Entry<Vertex,Edge>>.hasNext" -- "Edge.getWeight" 
"Entry<Vertex,Edge>>.hasNext" -- "Map<Vertex,Edge>.entrySet" 
"Entry<Vertex,Edge>>.hasNext" -- "Vertex.getLabel" 
"Entry<Vertex,Edge>>.hasNext" -- "Entry<Vertex,Edge>.getKey" 
"Entry<Vertex,Edge>>.hasNext" -- "Pair.<init>" 
"Entry<Vertex,Edge>>.next" -- "Entry<Vertex,Edge>.getValue" 
"Entry<Vertex,Edge>>.next" -- "Edge.<init>" 
"Entry<Vertex,Edge>>.next" -- "Edge.getWeight" 
"Entry<Vertex,Edge>>.next" -- "Map<Vertex,Edge>.entrySet" 
"Entry<Vertex,Edge>>.next" -- "Vertex.getLabel" 
"Entry<Vertex,Edge>>.next" -- "Entry<Vertex,Edge>.getKey" 
"Entry<Vertex,Edge>>.next" -- "Pair.<init>" 
"Entry<Vertex,Edge>.getValue" -- "Edge.<init>" 
"Entry<Vertex,Edge>.getValue" -- "Edge.getWeight" 
"Entry<Vertex,Edge>.getValue" -- "Map<Vertex,Edge>.entrySet" 
"Entry<Vertex,Edge>.getValue" -- "Vertex.getLabel" 
"Entry<Vertex,Edge>.getValue" -- "Entry<Vertex,Edge>.getKey" 
"Entry<Vertex,Edge>.getValue" -- "Pair.<init>" 
"List<Vertex>.size" -- "List<Vertex>.get" 
"List<Vertex>.size" -- "Edge.<init>" 
"List<Vertex>.size" -- "Vertex.nextMinimum" 
"List<Vertex>.size" -- "Edge.getWeight" 
"List<Vertex>.size" -- "Pair<Vertex,Edge>.getValue" 
"List<Vertex>.size" -- "Pair<Vertex,Edge>.getKey" 
"List<Vertex>.size" -- "Edge.setIncluded" 
"List<Vertex>.get" -- "Edge.<init>" 
"List<Vertex>.get" -- "Vertex.nextMinimum" 
"List<Vertex>.get" -- "Edge.getWeight" 
"List<Vertex>.get" -- "Pair<Vertex,Edge>.getValue" 
"List<Vertex>.get" -- "Pair<Vertex,Edge>.getKey" 
"List<Vertex>.get" -- "Edge.setIncluded" 
"Edge.<init>" -- "Vertex.nextMinimum" 
"Edge.<init>" -- "Edge.getWeight" 
"Edge.<init>" -- "Pair<Vertex,Edge>.getValue" 
"Edge.<init>" -- "Pair<Vertex,Edge>.getKey" 
"Edge.<init>" -- "Edge.setIncluded" 
"Edge.<init>" -- "Map<Vertex,Edge>.entrySet" 
"Edge.<init>" -- "Entry<Vertex,Edge>.getKey" 
"Edge.<init>" -- "Pair.<init>" 
"Vertex.nextMinimum" -- "Edge.getWeight" 
"Vertex.nextMinimum" -- "Pair<Vertex,Edge>.getValue" 
"Vertex.nextMinimum" -- "Pair<Vertex,Edge>.getKey" 
"Vertex.nextMinimum" -- "Edge.setIncluded" 
"Edge.getWeight" -- "Pair<Vertex,Edge>.getValue" 
"Edge.getWeight" -- "Pair<Vertex,Edge>.getKey" 
"Edge.getWeight" -- "Edge.setIncluded" 
"Edge.getWeight" -- "Map<Vertex,Edge>.entrySet" 
"Edge.getWeight" -- "Entry<Vertex,Edge>.getKey" 
"Edge.getWeight" -- "Pair.<init>" 
"Edge.getWeight" -- "Vertex.containsKey" 
"Edge.getWeight" -- "Vertex.get" 
"Edge.getWeight" -- "Vertex.replace" 
"Edge.getWeight" -- "Vertex.put" 
"Pair<Vertex,Edge>.getValue" -- "Pair<Vertex,Edge>.getKey" 
"Pair<Vertex,Edge>.getValue" -- "Edge.setIncluded" 
"Pair<Vertex,Edge>.getKey" -- "Edge.setIncluded" 
"Map<Vertex,Edge>.entrySet" -- "Vertex.getLabel" 
"Map<Vertex,Edge>.entrySet" -- "Entry<Vertex,Edge>.getKey" 
"Map<Vertex,Edge>.entrySet" -- "Pair.<init>" 
"Vertex.getLabel" -- "Entry<Vertex,Edge>.getKey" 
"Entry<Vertex,Edge>.getKey" -- "Pair.<init>" 
"Pair.<init>" -- "Stream.of(new" 
"Pair.<init>" -- "Pair,.mapToInt" 
"Pair.<init>" -- "Pair,.mapToInt(move" 
"Pair.<init>" -- "Stream.of" 
"Vertex.containsKey" -- "Vertex.get" 
"Vertex.containsKey" -- "Vertex.replace" 
"Vertex.containsKey" -- "Vertex.put" 
"Vertex.get" -- "Vertex.replace" 
"Vertex.get" -- "Vertex.put" 
"Vertex.replace" -- "Vertex.put" 
"BigInteger.valueOf" -- "BigInteger.multiply" 
"BigInteger.valueOf" -- "Function.<init>" 
"BigInteger.valueOf" -- "BigInteger.isProbablePrime" 
"TreeNode.getValue" -- "TreeNode.getLeftChild" 
"TreeNode.getValue" -- "TreeNode.getRightChild" 
"TreeNode.getValue" -- "TreeNode.getChildren" 
"TreeNode.getLeftChild" -- "TreeNode.getRightChild" 
"TreeNode.getLeftChild" -- "LinkedList<TreeNode>.<init>" 
"TreeNode.getLeftChild" -- "LinkedList<TreeNode>.add" 
"TreeNode.getLeftChild" -- "LinkedList<TreeNode>.isEmpty" 
"TreeNode.getLeftChild" -- "LinkedList<TreeNode>.poll" 
"TreeNode.getLeftChild" -- "TreeNode.setLeftChild" 
"TreeNode.getLeftChild" -- "TreeNode.setRightChild" 
"TreeNode.getRightChild" -- "LinkedList<TreeNode>.<init>" 
"TreeNode.getRightChild" -- "LinkedList<TreeNode>.add" 
"TreeNode.getRightChild" -- "LinkedList<TreeNode>.isEmpty" 
"TreeNode.getRightChild" -- "LinkedList<TreeNode>.poll" 
"TreeNode.getRightChild" -- "TreeNode.setLeftChild" 
"TreeNode.getRightChild" -- "TreeNode.setRightChild" 
"LinkedList<TreeNode>.<init>" -- "LinkedList<TreeNode>.add" 
"LinkedList<TreeNode>.<init>" -- "LinkedList<TreeNode>.isEmpty" 
"LinkedList<TreeNode>.<init>" -- "LinkedList<TreeNode>.poll" 
"LinkedList<TreeNode>.<init>" -- "TreeNode.setLeftChild" 
"LinkedList<TreeNode>.<init>" -- "TreeNode.setRightChild" 
"LinkedList<TreeNode>.add" -- "LinkedList<TreeNode>.isEmpty" 
"LinkedList<TreeNode>.add" -- "LinkedList<TreeNode>.poll" 
"LinkedList<TreeNode>.add" -- "TreeNode.setLeftChild" 
"LinkedList<TreeNode>.add" -- "TreeNode.setRightChild" 
"LinkedList<TreeNode>.isEmpty" -- "LinkedList<TreeNode>.poll" 
"LinkedList<TreeNode>.isEmpty" -- "TreeNode.setLeftChild" 
"LinkedList<TreeNode>.isEmpty" -- "TreeNode.setRightChild" 
"LinkedList<TreeNode>.poll" -- "TreeNode.setLeftChild" 
"LinkedList<TreeNode>.poll" -- "TreeNode.setRightChild" 
"TreeNode.setLeftChild" -- "TreeNode.setRightChild" 
"Deque<Character>.addFirst" -- "Deque<Character>.peekFirst" 
"Deque<Character>.addFirst" -- "Deque<Character>.isEmpty" 
"Deque<Character>.addFirst" -- "Deque<Character>.removeFirst" 
"Deque<Character>.peekFirst" -- "Deque<Character>.isEmpty" 
"Deque<Character>.peekFirst" -- "Deque<Character>.removeFirst" 
"Deque<Character>.isEmpty" -- "Deque<Character>.removeFirst" 
"String.replaceAll" -- "Double.parseDouble" 
"String.replaceAll" -- "String.replace" 
"String.replaceAll" -- "Integer.valueOf" 
"String.replaceAll" -- "StringBuffer.reverse" 
"String.replaceAll" -- "String>.isUnsubscribed" 
"String.replaceAll" -- "String>.onCompleted" 
"String.replaceAll" -- "String>.onError" 
"String.replaceAll" -- "String>.onNext" 
"ChiSquareTest.<init>" -- "ChiSquareTest.chiSquare" 
"Function<Double,Double>.apply" -- "StrictMath.abs" 
"Integer.equals" -- "Cell.<init>" 
"Integer.equals" -- "List<Integer>.add" 
"Integer.equals" -- "List<List<Integer>>.stream" 
"Integer.equals" -- "Thread.currentThread" 
"Integer.equals" -- "Long.equals" 
"Integer.equals" -- "BlockingQueue<Integer>.take" 
"Integer.equals" -- "Comment.cast" 
"Integer.equals" -- "Comment.getId" 
"Integer.equals" -- "Comment.instance" 
"Arrays.deepToString" -- "Arrays.copyOf" 
"Arrays.deepToString" -- "LinkedList<Integer>.add" 
"Arrays.deepToString" -- "LinkedList<Integer>.size" 
"Arrays.deepToString" -- "LinkedList<Integer>.pop" 
"Arrays.deepToString" -- "LinkedList<Integer>.peek" 
"Arrays.deepToString" -- "LinkedList<Integer>.addAll" 
"Arrays.deepToString" -- "LinkedList<Integer>.isEmpty" 
"Arrays.copyOf" -- "LinkedList<Integer>.add" 
"Arrays.copyOf" -- "LinkedList<Integer>.size" 
"Arrays.copyOf" -- "LinkedList<Integer>.pop" 
"Arrays.copyOf" -- "LinkedList<Integer>.peek" 
"Arrays.copyOf" -- "LinkedList<Integer>.addAll" 
"Arrays.copyOf" -- "LinkedList<Integer>.isEmpty" 
"LinkedList<Integer>.add" -- "LinkedList<Integer>.size" 
"LinkedList<Integer>.add" -- "LinkedList<Integer>.pop" 
"LinkedList<Integer>.add" -- "LinkedList<Integer>.peek" 
"LinkedList<Integer>.add" -- "LinkedList<Integer>.addAll" 
"LinkedList<Integer>.add" -- "LinkedList<Integer>.isEmpty" 
"LinkedList<Integer>.size" -- "LinkedList<Integer>.pop" 
"LinkedList<Integer>.size" -- "LinkedList<Integer>.peek" 
"LinkedList<Integer>.size" -- "LinkedList<Integer>.addAll" 
"LinkedList<Integer>.size" -- "LinkedList<Integer>.isEmpty" 
"LinkedList<Integer>.pop" -- "LinkedList<Integer>.peek" 
"LinkedList<Integer>.pop" -- "LinkedList<Integer>.addAll" 
"LinkedList<Integer>.pop" -- "LinkedList<Integer>.isEmpty" 
"LinkedList<Integer>.peek" -- "LinkedList<Integer>.addAll" 
"LinkedList<Integer>.peek" -- "LinkedList<Integer>.isEmpty" 
"LinkedList<Integer>.addAll" -- "LinkedList<Integer>.isEmpty" 
"Cell.<init>" -- "List<Cell>.add" 
"Cell.<init>" -- "List<Integer>.add" 
"Cell.<init>" -- "List<List<Integer>>.stream" 
"Cell.<init>" -- "StringBuilder.length" 
"Cell.<init>" -- "StringBuilder.insert" 
"Cell.<init>" -- "ThreadLocalRandom.current" 
"Cell.<init>" -- "Cell.cas" 
"Cell.<init>" -- "Double.doubleToRawLongBits" 
"Cell.<init>" -- "Double.longBitsToDouble" 
"Cell.<init>" -- "DoubleBinaryOperator.applyAsDouble" 
"Cell.<init>" -- "LongBinaryOperator.applyAsLong" 
"Cell.getX" -- "Cell.getY" 
"StringJoiner.<init>" -- "StringJoiner.add" 
"StringJoiner.<init>" -- "StringJoiner.length" 
"StringJoiner.<init>" -- "StringJoiner.toString" 
"StringJoiner.add" -- "StringJoiner.length" 
"StringJoiner.add" -- "StringJoiner.toString" 
"List<Cell>.size" -- "SecureRandom.nextDouble" 
"List<Cell>.size" -- "SecureRandom.nextInt" 
"List<Cell>.size" -- "List<Cell>.get" 
"SecureRandom.nextDouble" -- "SecureRandom.nextInt" 
"SecureRandom.nextDouble" -- "List<Cell>.get" 
"SecureRandom.nextDouble" -- "SecureRandom.<init>" 
"SecureRandom.nextDouble" -- "SecureRandom.nextLong" 
"SecureRandom.nextDouble" -- "SecureRandom.nextFloat" 
"SecureRandom.nextDouble" -- "SecureRandom.nextBoolean" 
"SecureRandom.nextDouble" -- "SecureRandom.ints" 
"SecureRandom.nextDouble" -- "SecureRandom.longs" 
"SecureRandom.nextDouble" -- "SecureRandom.doubles" 
"SecureRandom.nextDouble" -- "SecureRandom.nextBytes" 
"SecureRandom.nextInt" -- "List<Cell>.get" 
"SecureRandom.nextInt" -- "SecureRandom.<init>" 
"SecureRandom.nextInt" -- "SecureRandom.nextLong" 
"SecureRandom.nextInt" -- "SecureRandom.nextFloat" 
"SecureRandom.nextInt" -- "SecureRandom.nextBoolean" 
"SecureRandom.nextInt" -- "SecureRandom.ints" 
"SecureRandom.nextInt" -- "SecureRandom.longs" 
"SecureRandom.nextInt" -- "SecureRandom.doubles" 
"SecureRandom.nextInt" -- "SecureRandom.nextBytes" 
"List<Integer>.add" -- "List<List<Integer>>.stream" 
"List<Integer>.add" -- "List<Integer>.remove" 
"List<Integer>.add" -- "LinkedList<Integer>.<init>" 
"List<Integer>.add" -- "Node.getText" 
"List<Integer>.add" -- "Node.getPosition" 
"List<Integer>.add" -- "List<Integer>.addAll" 
"List<Integer>.add" -- "Thread.currentThread" 
"List<Integer>.add" -- "ThreadLocalRandom.current" 
"List<Integer>.add" -- "ArrayList<Integer>.<init>" 
"List<Integer>.add" -- "Iterator<Integer>.remove" 
"List<Integer>.add" -- "Collections.sort" 
"List<Integer>.add" -- "List<Integer>.clear" 
"List<Integer>.add" -- "List<Integer>.iterator" 
"List<Integer>.add" -- "Map<Integer,Integer>.put" 
"List<Integer>.add" -- "CyclicBarrier.await" 
"List<Integer>.add" -- "String.indexOf" 
"List<Integer>.add" -- "Map<Integer,Integer>.containsKey" 
"List<Integer>.add" -- "Map<Integer,Integer>.get" 
"List<Integer>.add" -- "Map<Integer,Integer>.containsValue" 
"Stream.of(new" -- "Pair,.mapToInt" 
"Stream.of(new" -- "Pair,.mapToInt(move" 
"Stream.of(new" -- "Stream.of" 
"Stream.of(new" -- "Collectors.toMap" 
"Stream.of(new" -- "Collectors.collectingAndThen" 
"Stream.of(new" -- "SimpleImmutableEntry.<init>" 
"Stream.of(new" -- "AbstractMap.SimpleImmutableEntry<>,new" 
"Stream.of(new" -- "SimpleEntry.<init>" 
"Stream.of(new" -- "AbstractMap.SimpleEntry<>,new" 
"Stream.of(new" -- "File.listFiles" 
"Pair,.mapToInt" -- "Pair,.mapToInt(move" 
"Pair,.mapToInt" -- "Stream.of" 
"Pair,.mapToInt(move" -- "Stream.of" 
"Stream.of" -- "Optional.of" 
"Stream.of" -- "List<Integer>.stream" 
"Stream.of" -- "Collectors.toMap" 
"Stream.of" -- "ArrayList<String>.stream" 
"Stream.of" -- "List<Integer>.iterator" 
"Stream.of" -- "Collectors.collectingAndThen" 
"Stream.of" -- "SimpleImmutableEntry.<init>" 
"Stream.of" -- "AbstractMap.SimpleImmutableEntry<>,new" 
"Stream.of" -- "SimpleEntry.<init>" 
"Stream.of" -- "AbstractMap.SimpleEntry<>,new" 
"Stream.of" -- "Map<String,Integer>.forEach" 
"Stream.of" -- "Map<String>.entrySet" 
"Stream.of" -- "File.listFiles" 
"Stream.of" -- "Collectors.toCollection" 
"Stream.of" -- "ArrayList<String>.removeAll" 
"Stream.of" -- "Iterable<Integer>.cast" 
"Stream.of" -- "OptionalLong.of" 
"Stream.of" -- "OptionalInt.of" 
"Stream.of" -- "OptionalDouble.of" 
"Stream.of" -- "Stream<String>.distinctBy" 
"Stream.of" -- "Stream<String>.forEach" 
"Stream.of" -- "Stream.ofAll" 
"Stream.of" -- "Stream<Integer>.get" 
"Stream.of" -- "Stream<String>.indexOf" 
"Stream.of" -- "Stream<String>.collect" 
"Stream.of" -- "List<<String,String>>.size" 
"Stream.of" -- "List<<String,String>>.get" 
"Stream.of" -- "Map<>.put" 
"Stream.of" -- "Collector<<String,Integer>>.collect" 
"Stream.of" -- "Map<String,List<Row>>.entrySet" 
"Stream.of" -- "Context.clear" 
"Stream.of" -- "Stream.continually" 
"StringBuilder.length" -- "StringBuilder.insert" 
"StringBuilder.length" -- "Collection.instance" 
"StringBuilder.length" -- "Collection.cast" 
"StringBuilder.length" -- "Map<Integer>.keySet" 
"StringBuilder.length" -- "Map<Integer>.get" 
"StringBuilder.length" -- "StringBuilder.delete" 
"StringBuilder.length" -- "Socket.getInputStream" 
"StringBuilder.length" -- "ServerSocket.<init>" 
"StringBuilder.length" -- "ServerSocket.accept" 
"StringBuilder.length" -- "Entry<String,List<String>>.getValue" 
"StringBuilder.length" -- "DataInputStream.<init>" 
"StringBuilder.length" -- "BufferedInputStream.<init>" 
"StringBuilder.length" -- "DataInputStream.readChar" 
"StringBuilder.length" -- "DataInputStream.readInt" 
"StringBuilder.length" -- "DataInputStream.read" 
"StringBuilder.length" -- "StringBuilder.substring" 
"StringBuilder.length" -- "StringBuilder.charAt" 
"StringBuilder.length" -- "StringBuilder.setLength" 
"StringBuilder.length" -- "StringBuilder.deleteCharAt" 
"StringBuilder.length" -- "Entry<String,List<String>>.getKey" 
"StringBuilder.length" -- "Date.instance" 
"StringBuilder.length" -- "Date.cast" 
"List<Integer>.remove" -- "List<Integer>.indexOf" 
"List<Integer>.remove" -- "List<Integer>.contains" 
"PriorityQueue<Integer>.add" -- "PriorityQueue<Integer>.size" 
"PriorityQueue<Integer>.add" -- "PriorityQueue<Integer>.poll" 
"PriorityQueue<Integer>.size" -- "PriorityQueue<Integer>.poll" 
"Comparator.reverseOrder" -- "TreeSet.<init>" 
"Comparator.reverseOrder" -- "Set<Integer>.addAll" 
"Comparator.reverseOrder" -- "Set<Integer>.stream" 
"TreeSet.<init>" -- "Set<Integer>.addAll" 
"TreeSet.<init>" -- "Set<Integer>.stream" 
"TreeSet.<init>" -- "Map<String>.values" 
"TreeSet.<init>" -- "Map<String>.keySet" 
"Set<Integer>.addAll" -- "Set<Integer>.stream" 
"Set<Integer>.addAll" -- "HashSet<Integer>.<init>" 
"Set<Integer>.addAll" -- "Map<Integer,Integer>.keySet" 
"Set<Integer>.addAll" -- "Map<Integer,Integer>.getOrDefault" 
"ArrayDeque.<init>" -- "Optional.of" 
"ArrayDeque.<init>" -- "Queue<Tree>.add" 
"ArrayDeque.<init>" -- "Queue<Tree>.isEmpty" 
"ArrayDeque.<init>" -- "Queue<Tree>.remove" 
"ArrayDeque.<init>" -- "Tree.getValue" 
"ArrayDeque.<init>" -- "Tree.getChildren" 
"ArrayDeque.<init>" -- "Queue<Tree>.addAll" 
"Queue<Node>.add" -- "Queue<Node>.isEmpty" 
"Queue<Node>.add" -- "Queue<Node>.remove" 
"Queue<Node>.isEmpty" -- "Queue<Node>.remove" 
"Node.getValue" -- "AtomicInteger.decrementAndGet" 
"Node.getValue" -- "AtomicReference<Node>.get" 
"Node.getValue" -- "Node.getNext" 
"Node.getValue" -- "AtomicReference<Node>.compareAndSet" 
"Optional.of" -- "Queue<Tree>.add" 
"Optional.of" -- "Queue<Tree>.isEmpty" 
"Optional.of" -- "Queue<Tree>.remove" 
"Optional.of" -- "Tree.getValue" 
"Optional.of" -- "Tree.getChildren" 
"Optional.of" -- "Queue<Tree>.addAll" 
"Optional.of" -- "List<Integer>.stream" 
"Optional.of" -- "CountDownLatch.countDown" 
"Optional.of" -- "CountDownLatch.await" 
"Optional.of" -- "UUID.randomUUID" 
"Optional.of" -- "MediaType.toString" 
"Optional.of" -- "Connection.createStatement" 
"Optional.of" -- "Statement.executeQuery" 
"Optional.of" -- "ResultSet.getString" 
"Optional.of" -- "HashMap<String,String>.<init>" 
"Optional.of" -- "String.toString" 
"Optional.of" -- "String.getBytes" 
"Optional.of" -- "AtomicInteger.set" 
"Optional.of" -- "AtomicInteger.<init>" 
"Optional.of" -- "List<Integer>.iterator" 
"Optional.of" -- "CountDownLatch.<init>" 
"Optional.of" -- "Point.<init>" 
"Optional.of" -- "Point.setLocation" 
"Optional.of" -- "Map<String>.get" 
"Optional.of" -- "Optional.isPresent" 
"Optional.of" -- "Optional.get" 
"Optional.of" -- "Iterable<Integer>.cast" 
"Optional.of" -- "OptionalLong.of" 
"Optional.of" -- "OptionalInt.of" 
"Optional.of" -- "OptionalDouble.of" 
"Optional.of" -- "PreparedStatement.executeQuery" 
"Optional.of" -- "Connection.prepareStatement" 
"Optional.of" -- "Messages.get" 
"Optional.of" -- "HashMap<Long>.<init>" 
"Optional.of" -- "Map<Long>.size" 
"Optional.of" -- "Map<Long>.entrySet" 
"Optional.of" -- "Arrays.equals)" 
"Optional.of" -- "Optional<Entry<Long>>.isPresent" 
"Optional.of" -- "Optional<Entry<Long>>.get" 
"Optional.of" -- "ResultSet.getInt" 
"Optional.of" -- "PreparedStatement.setInt" 
"Optional.of" -- "ResultSet.first" 
"Queue<Tree>.add" -- "Queue<Tree>.isEmpty" 
"Queue<Tree>.add" -- "Queue<Tree>.remove" 
"Queue<Tree>.add" -- "Tree.getValue" 
"Queue<Tree>.add" -- "Tree.getChildren" 
"Queue<Tree>.add" -- "Queue<Tree>.addAll" 
"Queue<Tree>.isEmpty" -- "Queue<Tree>.remove" 
"Queue<Tree>.isEmpty" -- "Tree.getValue" 
"Queue<Tree>.isEmpty" -- "Tree.getChildren" 
"Queue<Tree>.isEmpty" -- "Queue<Tree>.addAll" 
"Queue<Tree>.remove" -- "Tree.getValue" 
"Queue<Tree>.remove" -- "Tree.getChildren" 
"Queue<Tree>.remove" -- "Queue<Tree>.addAll" 
"Tree.getValue" -- "Tree.getChildren" 
"Tree.getValue" -- "Queue<Tree>.addAll" 
"Tree.getChildren" -- "Queue<Tree>.addAll" 
"Collections.unmodifiableList" -- "Map<String>.values" 
"Stack<Node>.<init>" -- "Stack<Node>.push" 
"Stack<Node>.<init>" -- "Stack<Node>.isEmpty" 
"Stack<Node>.<init>" -- "Stack<Node>.peek" 
"Stack<Node>.<init>" -- "Stack<Node>.pop" 
"Stack<Node>.<init>" -- "BinaryTree.visit" 
"Stack<Node>.push" -- "Stack<Node>.isEmpty" 
"Stack<Node>.push" -- "Stack<Node>.peek" 
"Stack<Node>.push" -- "Stack<Node>.pop" 
"Stack<Node>.push" -- "BinaryTree.visit" 
"Stack<Node>.isEmpty" -- "Stack<Node>.peek" 
"Stack<Node>.isEmpty" -- "Stack<Node>.pop" 
"Stack<Node>.isEmpty" -- "BinaryTree.visit" 
"Stack<Node>.peek" -- "Stack<Node>.pop" 
"Stack<Node>.peek" -- "BinaryTree.visit" 
"Stack<Node>.pop" -- "BinaryTree.visit" 
"BinaryTree.visit" -- "BinaryTree.traversePostOrder" 
"BinaryTree.visit" -- "BinaryTree.traversePreOrder" 
"BinaryTree.visit" -- "BinaryTree.traverseInOrder" 
"BinaryTree.findSmallestValue" -- "BinaryTree.deleteRecursive" 
"Map<Integer,List<Integer>>.get" -- "Graph.topologicalSortRecursive" 
"Map<Integer,List<Integer>>.get" -- "LinkedList<Integer>.addFirst" 
"Map<Integer,List<Integer>>.get" -- "Map<Integer,List<Integer>>.size" 
"Map<Integer,List<Integer>>.get" -- "Graph.visit" 
"Map<Integer,List<Integer>>.get" -- "Graph.dfsRecursive" 
"Map<Integer,List<Integer>>.get" -- "Stack<Integer>.<init>" 
"Map<Integer,List<Integer>>.get" -- "Stack<Integer>.push" 
"Map<Integer,List<Integer>>.get" -- "Stack<Integer>.isEmpty" 
"Map<Integer,List<Integer>>.get" -- "Stack<Integer>.pop" 
"Graph.topologicalSortRecursive" -- "LinkedList<Integer>.addFirst" 
"Graph.topologicalSortRecursive" -- "LinkedList<Integer>.<init>" 
"Graph.topologicalSortRecursive" -- "Map<Integer,List<Integer>>.size" 
"LinkedList<Integer>.<init>" -- "Map<Integer,List<Integer>>.size" 
"Map<Integer,List<Integer>>.size" -- "Graph.visit" 
"Map<Integer,List<Integer>>.size" -- "Graph.dfsRecursive" 
"Map<Integer,List<Integer>>.size" -- "Stack<Integer>.<init>" 
"Map<Integer,List<Integer>>.size" -- "Stack<Integer>.push" 
"Map<Integer,List<Integer>>.size" -- "Stack<Integer>.isEmpty" 
"Map<Integer,List<Integer>>.size" -- "Stack<Integer>.pop" 
"Graph.visit" -- "Graph.dfsRecursive" 
"Graph.visit" -- "Stack<Integer>.<init>" 
"Graph.visit" -- "Stack<Integer>.push" 
"Graph.visit" -- "Stack<Integer>.isEmpty" 
"Graph.visit" -- "Stack<Integer>.pop" 
"Stack<Integer>.<init>" -- "Stack<Integer>.push" 
"Stack<Integer>.<init>" -- "Stack<Integer>.isEmpty" 
"Stack<Integer>.<init>" -- "Stack<Integer>.pop" 
"Stack<Integer>.push" -- "Stack<Integer>.isEmpty" 
"Stack<Integer>.push" -- "Stack<Integer>.pop" 
"Stack<Integer>.isEmpty" -- "Stack<Integer>.pop" 
"Node.getState" -- "State.getBoard" 
"Node.getState" -- "Node.getParent" 
"Node.getState" -- "State.togglePlayer" 
"Node.getState" -- "State.randomPlay" 
"Node.getState" -- "Node.setParent" 
"Node.getState" -- "Node.getChildArray" 
"Node.getState" -- "System.currentTimeMillis" 
"Node.getState" -- "Node.getRandomChildNode" 
"Node.getState" -- "Node.getChildWithMaxScore" 
"Node.getState" -- "Collections.max" 
"State.getBoard" -- "Node.getParent" 
"State.getBoard" -- "State.togglePlayer" 
"State.getBoard" -- "State.randomPlay" 
"State.getBoard" -- "State.getEmptyPositions" 
"State.getBoard" -- "List<Position>.forEach" 
"State.getBoard" -- "State.setPlayerNo" 
"State.getBoard" -- "State.getPlayerNo" 
"Node.getParent" -- "State.togglePlayer" 
"Node.getParent" -- "State.randomPlay" 
"State.togglePlayer" -- "State.randomPlay" 
"Node.setParent" -- "Node.getChildArray" 
"Node.getChildArray" -- "System.currentTimeMillis" 
"Node.getChildArray" -- "Node.getRandomChildNode" 
"Node.getChildArray" -- "Node.getChildWithMaxScore" 
"Node.getChildArray" -- "Collections.max" 
"System.currentTimeMillis" -- "Node.getRandomChildNode" 
"System.currentTimeMillis" -- "Node.getChildWithMaxScore" 
"System.currentTimeMillis" -- "Thread.sleep" 
"System.currentTimeMillis" -- "Thread.currentThread" 
"System.currentTimeMillis" -- "Long.cast" 
"System.currentTimeMillis" -- "UUID.randomUUID" 
"System.currentTimeMillis" -- "Date.<init>" 
"System.currentTimeMillis" -- "List<Locale>.forEach" 
"System.currentTimeMillis" -- "TimeUnit.convert" 
"System.currentTimeMillis" -- "Timestamp.<init>" 
"System.currentTimeMillis" -- "Time.<init>" 
"System.currentTimeMillis" -- "Map<String,Object>.isEmpty" 
"System.currentTimeMillis" -- "LinkedHashMap<String,Object>.<init>" 
"System.currentTimeMillis" -- "Integer.<init>" 
"System.currentTimeMillis" -- "Values.<init>" 
"System.currentTimeMillis" -- "Utils.sleep" 
"Node.getRandomChildNode" -- "Node.getChildWithMaxScore" 
"State.getEmptyPositions" -- "List<Position>.size" 
"State.getEmptyPositions" -- "List<Position>.get" 
"State.getEmptyPositions" -- "State.performMove" 
"State.getEmptyPositions" -- "List<Position>.forEach" 
"State.getEmptyPositions" -- "State.setPlayerNo" 
"State.getEmptyPositions" -- "State.getPlayerNo" 
"List<Position>.size" -- "List<Position>.get" 
"List<Position>.size" -- "State.performMove" 
"List<Position>.get" -- "State.performMove" 
"List<Position>.forEach" -- "State.setPlayerNo" 
"List<Position>.forEach" -- "State.getPlayerNo" 
"State.setPlayerNo" -- "State.getPlayerNo" 
"Collections.max" -- "Entry<>.getValue" 
"Collections.max" -- "Map<>.entrySet" 
"Collections.max" -- "Comparator<Entry<>>.<init>" 
"Position.<init>" -- "List<Position>.add" 
"Node.size" -- "Node.get" 
"Region.toString" -- "Point.toString" 
"ArrayList<Point>.<init>" -- "Region.containsPoint" 
"ArrayList<Point>.<init>" -- "List<Point>.add" 
"Region.containsPoint" -- "List<Point>.add" 
"Region.getX1" -- "Region.getX2" 
"Region.getX1" -- "Region.getY2" 
"Region.getX1" -- "Region.getY1" 
"Region.getX2" -- "Region.getY2" 
"Region.getX2" -- "Region.getY1" 
"Region.getY2" -- "Region.getY1" 
"Point.getX" -- "Point.getY" 
"Point.getX" -- "Rectangle.getY" 
"Point.getX" -- "Rectangle.getX" 
"Point.getY" -- "Rectangle.getY" 
"Point.getY" -- "Rectangle.getX" 
"List<Node>.size" -- "List<Node>.get" 
"List<Node>.size" -- "Node.getText" 
"List<Node>.size" -- "List<Node>.addAll" 
"List<Node>.size" -- "List<Node>.remove" 
"List<Node>.size" -- "List<Integer>.stream" 
"List<Node>.size" -- "List<String>.add" 
"List<Node>.size" -- "StringWriter.<init>" 
"List<Node>.size" -- "XPath.selectNodes" 
"List<Node>.size" -- "Element.cast" 
"List<Node>.size" -- "Element.addAttribute" 
"List<Node>.size" -- "TransformerFactory.newInstance" 
"List<Node>.size" -- "TransformerFactory.setFeature" 
"List<Node>.size" -- "TransformerFactory.newTransformer" 
"List<Node>.size" -- "Transformer.setOutputProperty" 
"List<Node>.size" -- "StreamResult.<init>" 
"List<Node>.size" -- "Transformer.transform" 
"List<Node>.size" -- "Writer.toString" 
"List<Node>.get" -- "List<Integer>.stream" 
"List<Node>.get" -- "List<String>.add" 
"List<Node>.get" -- "StringWriter.<init>" 
"List<Node>.get" -- "XPath.selectNodes" 
"List<Node>.get" -- "Element.cast" 
"List<Node>.get" -- "Element.addAttribute" 
"List<Node>.get" -- "TransformerFactory.newInstance" 
"List<Node>.get" -- "TransformerFactory.setFeature" 
"List<Node>.get" -- "TransformerFactory.newTransformer" 
"List<Node>.get" -- "Transformer.setOutputProperty" 
"List<Node>.get" -- "StreamResult.<init>" 
"List<Node>.get" -- "Transformer.transform" 
"List<Node>.get" -- "Writer.toString" 
"List<Node>.get" -- "Document.selectNodes" 
"Node.getText" -- "List<Node>.addAll" 
"Node.getText" -- "Node.getPosition" 
"Node.getText" -- "List<Integer>.addAll" 
"Node.getPosition" -- "Node.setText" 
"Node.getPosition" -- "Node.setPosition" 
"Node.getPosition" -- "List<Integer>.addAll" 
"Node.setText" -- "Node.setPosition" 
"List<Integer>.addAll" -- "Random.<init>" 
"List<Integer>.addAll" -- "Random.ints" 
"List<Integer>.addAll" -- "Executors.newWorkStealingPool" 
"List<Integer>.addAll" -- "List<Integer>.clear" 
"List<Integer>.stream" -- "List<String>.add" 
"List<Integer>.stream" -- "Double.parseDouble" 
"List<Integer>.stream" -- "List<Integer>.iterator" 
"List<Integer>.stream" -- "Math.ceil" 
"List<Integer>.stream" -- "Collectors.summingInt" 
"List<Integer>.stream" -- "Iterable<Integer>.cast" 
"List<Integer>.stream" -- "OptionalLong.of" 
"List<Integer>.stream" -- "OptionalInt.of" 
"List<Integer>.stream" -- "OptionalDouble.of" 
"List<Integer>.stream" -- "Frequency.<init>" 
"List<Integer>.stream" -- "Frequency.addValue" 
"List<Integer>.stream" -- "Frequency.getCount" 
"List<Integer>.stream" -- "Math.multiplyExact" 
"List<Integer>.stream" -- "Math.subtractExact" 
"List<String>.add" -- "Collectors.toMap" 
"List<String>.add" -- "Character.isUpperCase" 
"List<String>.add" -- "List<String>.forEach" 
"List<String>.add" -- "CountDownLatch.countDown" 
"List<String>.add" -- "CountDownLatch.await" 
"List<String>.add" -- "Label.<init>" 
"List<String>.add" -- "ArrayList<String>.<init>" 
"List<String>.add" -- "Product.<init>" 
"List<String>.add" -- "HashMap<String,String>.<init>" 
"List<String>.add" -- "Map<String,String>.put" 
"List<String>.add" -- "List<String>.stream" 
"List<String>.add" -- "LocalDate.ofEpochDay" 
"List<String>.add" -- "List<String>.contains" 
"List<String>.add" -- "Iterator<String>.remove" 
"List<String>.add" -- "List<String>.listIterator" 
"List<String>.add" -- "ListIterator<String>.hasNext" 
"List<String>.add" -- "ListIterator<String>.nextIndex" 
"List<String>.add" -- "ListIterator<String>.next" 
"List<String>.add" -- "ListIterator<String>.set" 
"List<String>.add" -- "ListIterator<String>.add" 
"List<String>.add" -- "ListIterator<String>.hasPrevious" 
"List<String>.add" -- "ListIterator<String>.previousIndex" 
"List<String>.add" -- "ListIterator<String>.previous" 
"List<String>.add" -- "ListIterator<String>.forEachRemaining" 
"List<String>.add" -- "Collections.synchronizedList" 
"List<String>.add" -- "Collection.instance" 
"List<String>.add" -- "Collection.cast" 
"List<String>.add" -- "Collections.sort" 
"List<String>.add" -- "List<String>.remove" 
"List<String>.add" -- "List<String>.removeIf" 
"List<String>.add" -- "Pattern.compile" 
"List<String>.add" -- "Pattern.matcher" 
"List<String>.add" -- "HashMap<String,Product>.containsKey" 
"List<String>.add" -- "HashMap<String,Product>.get" 
"List<String>.add" -- "HashMap<String,Product>.put" 
"List<String>.add" -- "Product.getTags" 
"List<String>.add" -- "HashMap<String,Product>.merge" 
"List<String>.add" -- "Monitor.leave" 
"List<String>.add" -- "Executors.newScheduledThreadPool" 
"List<String>.add" -- "TimeZone.getAvailableIDs" 
"List<String>.add" -- "TimeZone.getTimeZone" 
"List<String>.add" -- "TimeZone.getRawOffset" 
"List<String>.add" -- "String.indexOf" 
"List<String>.add" -- "Map<String,List<String>>.put" 
"List<String>.add" -- "Instant.now" 
"List<String>.add" -- "StringTokenizer.<init>" 
"List<String>.add" -- "StringTokenizer.hasMoreElements" 
"List<String>.add" -- "StringTokenizer.nextToken" 
"List<String>.add" -- "StringTokenizer.hasMoreTokens" 
"List<String>.add" -- "Button.<init>" 
"List<String>.add" -- "Button.addStyleName" 
"List<String>.add" -- "Button.setEnabled" 
"List<String>.add" -- "Monitor.newGuard" 
"List<String>.add" -- "Monitor.enterWhen" 
"List<String>.add" -- "ScheduledExecutorService.scheduleWithFixedDelay" 
"List<String>.add" -- "Supplier<List<String>>.get" 
"List<String>.add" -- "Stream<String>.forEach" 
"List<String>.add" -- "Stream.ofAll" 
"List<String>.add" -- "Stream<String>.insert" 
"List<String>.add" -- "Stream<String>.remove" 
"List<String>.add" -- "MultiValueMap<String,String>.add" 
"List<String>.add" -- "TextField.<init>" 
"List<String>.add" -- "Message.toString" 
"List<String>.add" -- "Message.getBody" 
"List<String>.add" -- "List<LinkedHashMap<String,String>>.cast" 
"List<String>.add" -- "LinkedHashMap<String,String>.get" 
"List<String>.add" -- "LinkedHashMap<String,String>.<init>" 
"List<String>.add" -- "Collection.isEmpty" 
"List<String>.add" -- "Binder.setBean" 
"List<String>.add" -- "Button.addClickListener" 
"List<String>.add" -- "GridLayout.<init>" 
"List<String>.add" -- "GridLayout.setSpacing" 
"List<String>.add" -- "GridLayout.setMargin" 
"List<String>.add" -- "Label.setId" 
"List<String>.add" -- "Label.setValue" 
"List<String>.add" -- "Label.setCaption" 
"List<String>.add" -- "GridLayout.addComponent" 
"List<String>.add" -- "Link.<init>" 
"List<String>.add" -- "Link.setId" 
"List<String>.add" -- "Link.setTargetName" 
"List<String>.add" -- "TextField.setId" 
"List<String>.add" -- "TextField.setCaption" 
"List<String>.add" -- "TextField.setValue" 
"List<String>.add" -- "TextField.setIcon" 
"List<String>.add" -- "TextArea.<init>" 
"List<String>.add" -- "TextArea.setCaption" 
"List<String>.add" -- "TextArea.setId" 
"List<String>.add" -- "TextArea.setValue" 
"List<String>.add" -- "Panel.<init>" 
"List<String>.add" -- "Panel.setContent" 
"List<String>.add" -- "Button.setId" 
"List<String>.add" -- "Button.setDescription" 
"List<String>.add" -- "Button.setIcon" 
"List<String>.add" -- "Grid.<init>" 
"List<String>.add" -- "Grid<Row>.setColumns" 
"List<String>.add" -- "Row.<init>" 
"List<String>.add" -- "List<Row>.add" 
"List<String>.add" -- "Grid<Row>.setItems" 
"List<String>.add" -- "Panel.setSizeUndefined" 
"List<String>.add" -- "Binder.<init>" 
"List<String>.add" -- "Binder.readBean" 
"List<String>.add" -- "TextField.setWidth" 
"List<String>.add" -- "Binder.forField" 
"List<String>.add" -- "Binder.validate" 
"Random.<init>" -- "BigInteger.probablePrime" 
"Random.<init>" -- "BigInteger.longValue" 
"Random.<init>" -- "Thread.sleep" 
"Random.<init>" -- "Runnable.<init>" 
"Random.<init>" -- "Thread.currentThread" 
"Random.<init>" -- "Thread.<init>" 
"Random.<init>" -- "Thread.start" 
"Random.<init>" -- "Random.nextFloat" 
"Random.<init>" -- "BigDecimal.valueOf" 
"Random.<init>" -- "List<String>.forEach" 
"Random.<init>" -- "AtomicInteger.incrementAndGet" 
"Random.<init>" -- "LocalDateTime.now" 
"Random.<init>" -- "Builder.<init>" 
"Random.<init>" -- "UUID.randomUUID" 
"Random.<init>" -- "Product.<init>" 
"Random.<init>" -- "Random.nextLong" 
"Random.<init>" -- "Random.ints" 
"Random.<init>" -- "Executors.newWorkStealingPool" 
"Random.<init>" -- "List.subList" 
"Random.<init>" -- "File.exists" 
"Random.<init>" -- "Book.<init>" 
"Random.<init>" -- "Random.nextBytes" 
"Random.<init>" -- "Charset.forName" 
"Random.<init>" -- "Map<Integer,String>.put" 
"Random.<init>" -- "Optional.ifPresent" 
"Random.<init>" -- "Evaluation.stats" 
"Random.<init>" -- "Builder.activation" 
"Random.<init>" -- "Builder.nOut" 
"Random.<init>" -- "Builder.kernelSize" 
"Random.<init>" -- "Builder.nIn" 
"Random.<init>" -- "Builder.seed" 
"Random.<init>" -- "File.getParentFile" 
"Random.<init>" -- "Utils.downloadAndSave" 
"Random.<init>" -- "Utils.extractTarArchive" 
"Random.<init>" -- "Map<Integer,Double>.put" 
"Random.<init>" -- "Builder.stride" 
"Random.<init>" -- "File.getPath" 
"Random.<init>" -- "Duration.ofSeconds" 
"Random.<init>" -- "List<Book>.size" 
"Random.<init>" -- "List<Book>.add" 
"Random.<init>" -- "List<Book>.get" 
"Random.<init>" -- "Version.<init>" 
"BigInteger.probablePrime" -- "BigInteger.longValue" 
"List.set" -- "Response.ok" 
"List.set" -- "List.indexOf" 
"Math.log10" -- "Collection<Integer>.stream" 
"Double.parseDouble" -- "System.exit" 
"Double.parseDouble" -- "Map<String,Integer>.get" 
"Double.parseDouble" -- "HashMap<String,Integer>.<init>" 
"Double.parseDouble" -- "Map<String,Integer>.put" 
"Double.parseDouble" -- "PrintWriter.println" 
"Double.parseDouble" -- "Math.ceil" 
"Double.parseDouble" -- "Circle.<init>" 
"Double.parseDouble" -- "Long.parseLong" 
"Double.parseDouble" -- "PrintWriter.flush" 
"Double.parseDouble" -- "Frequency.<init>" 
"Double.parseDouble" -- "Frequency.addValue" 
"Double.parseDouble" -- "Frequency.getCount" 
"Double.parseDouble" -- "Math.multiplyExact" 
"Double.parseDouble" -- "Math.subtractExact" 
"Comparator.comparingDouble" -- "ImmutablePair.of" 
"String.lastIndexOf" -- "Map<String,String>.entrySet" 
"String.lastIndexOf" -- "Pattern.matcher" 
"String.lastIndexOf" -- "Files.copy" 
"String.lastIndexOf" -- "File.toPath" 
"String.lastIndexOf" -- "Page.getWebURL" 
"String.lastIndexOf" -- "Page.getParseData" 
"String.lastIndexOf" -- "Page.getContentData" 
"String.lastIndexOf" -- "Resource.getFilename" 
"Map<String,String>.entrySet" -- "Map<String,String>.containsKey" 
"Map<String,String>.entrySet" -- "Map<String,String>.get" 
"Map<String,String>.entrySet" -- "Map<String,String>.put" 
"Map<String,String>.entrySet" -- "Entry<String,String>.getKey" 
"Map<String,String>.entrySet" -- "Entry<String,String>.getValue" 
"Map<String,String>.entrySet" -- "Class.getDeclaredFields" 
"Map<String,String>.entrySet" -- "Field.setAccessible" 
"Map<String,String>.entrySet" -- "Field.isAnnotationPresent" 
"Map<String,String>.entrySet" -- "Field.get" 
"Map<String,String>.entrySet" -- "Long.valueOf" 
"Map<String,String>.entrySet" -- "URLEncoder.encode" 
"Map<String,String>.entrySet" -- "Collections.emptySet" 
"RoundEnvironment.getElementsAnnotatedWith" -- "ExecutableType.cast" 
"RoundEnvironment.getElementsAnnotatedWith" -- "ExecutableType.getParameterTypes" 
"RoundEnvironment.getElementsAnnotatedWith" -- "Collectors.partitioningBy"
"RoundEnvironment.getElementsAnnotatedWith" -- "Map<Boolean,List<Element>>.get" 
"RoundEnvironment.getElementsAnnotatedWith" -- "List<Element>.forEach" 
"RoundEnvironment.getElementsAnnotatedWith" -- "List<Element>.isEmpty" 
"RoundEnvironment.getElementsAnnotatedWith" -- "List<Element>.get" 
"RoundEnvironment.getElementsAnnotatedWith" -- "TypeElement.cast" 
"RoundEnvironment.getElementsAnnotatedWith" -- "TypeElement.getQualifiedName" 
"RoundEnvironment.getElementsAnnotatedWith" -- "Collectors.toMap" 
"RoundEnvironment.getElementsAnnotatedWith" -- "List<Element>.stream" 
"ExecutableType.cast" -- "ExecutableType.getParameterTypes" 
"ExecutableType.cast" -- "Collectors.partitioningBy" 
"ExecutableType.cast" -- "Map<Boolean,List<Element>>.get" 
"ExecutableType.cast" -- "List<Element>.forEach" 
"ExecutableType.cast" -- "List<Element>.isEmpty" 
"ExecutableType.cast" -- "List<Element>.get" 
"ExecutableType.cast" -- "TypeElement.cast" 
"ExecutableType.cast" -- "TypeElement.getQualifiedName" 
"ExecutableType.cast" -- "Collectors.toMap" 
"ExecutableType.cast" -- "List<Element>.stream" 
"ExecutableType.getParameterTypes" -- "Collectors.partitioningBy" 
"ExecutableType.getParameterTypes" -- "Element>.stream" 
"ExecutableType.getParameterTypes" -- "Map<Boolean,List<Element>>.get" 
"ExecutableType.getParameterTypes" -- "List<Element>.forEach" 
"ExecutableType.getParameterTypes" -- "List<Element>.isEmpty" 
"ExecutableType.getParameterTypes" -- "List<Element>.get" 
"ExecutableType.getParameterTypes" -- "TypeElement.cast" 
"ExecutableType.getParameterTypes" -- "TypeElement.getQualifiedName" 
"ExecutableType.getParameterTypes" -- "Collectors.toMap" 
"ExecutableType.getParameterTypes" -- "List<Element>.stream" 
"Collectors.partitioningBy" -- "Map<Boolean,List<Element>>.get" 
"Collectors.partitioningBy" -- "List<Element>.forEach" 
"Collectors.partitioningBy" -- "List<Element>.isEmpty" 
"Collectors.partitioningBy" -- "List<Element>.get" 
"Collectors.partitioningBy" -- "TypeElement.cast" 
"Collectors.partitioningBy" -- "TypeElement.getQualifiedName" 
"Collectors.partitioningBy" -- "Collectors.toMap" 
"Collectors.partitioningBy" -- "List<Element>.stream" 
"Collectors.partitioningBy" -- "Collection<String>.stream" 
"Collectors.partitioningBy" -- "Collection<String>.add" 
"Collectors.partitioningBy" -- "Map<Boolean,List<String>>.get" 
"Element>.stream" -- "Map<Boolean,List<Element>>.get" 
"Element>.stream" -- "List<Element>.forEach" 
"Element>.stream" -- "List<Element>.isEmpty" 
"Element>.stream" -- "List<Element>.get" 
"Element>.stream" -- "TypeElement.cast" 
"Element>.stream" -- "TypeElement.getQualifiedName" 
"Element>.stream" -- "Collectors.toMap" 
"Element>.stream" -- "List<Element>.stream" 
"Map<Boolean,List<Element>>.get" -- "List<Element>.forEach" 
"Map<Boolean,List<Element>>.get" -- "List<Element>.isEmpty" 
"Map<Boolean,List<Element>>.get" -- "List<Element>.get" 
"Map<Boolean,List<Element>>.get" -- "TypeElement.cast" 
"Map<Boolean,List<Element>>.get" -- "TypeElement.getQualifiedName" 
"Map<Boolean,List<Element>>.get" -- "Collectors.toMap" 
"Map<Boolean,List<Element>>.get" -- "List<Element>.stream" 
"List<Element>.forEach" -- "List<Element>.isEmpty" 
"List<Element>.forEach" -- "List<Element>.get" 
"List<Element>.forEach" -- "TypeElement.cast" 
"List<Element>.forEach" -- "TypeElement.getQualifiedName" 
"List<Element>.forEach" -- "Collectors.toMap" 
"List<Element>.forEach" -- "List<Element>.stream" 
"List<Element>.isEmpty" -- "List<Element>.get" 
"List<Element>.isEmpty" -- "TypeElement.cast" 
"List<Element>.isEmpty" -- "TypeElement.getQualifiedName" 
"List<Element>.isEmpty" -- "Collectors.toMap" 
"List<Element>.isEmpty" -- "List<Element>.stream" 
"List<Element>.get" -- "TypeElement.cast" 
"List<Element>.get" -- "TypeElement.getQualifiedName" 
"List<Element>.get" -- "Collectors.toMap" 
"List<Element>.get" -- "List<Element>.stream" 
"List<Element>.get" -- "Document.cast" 
"List<Element>.get" -- "XPathFactory.instance" 
"List<Element>.get" -- "XPathFactory.compile" 
"List<Element>.get" -- "XPathExpression<Element>.evaluate" 
"TypeElement.cast" -- "TypeElement.getQualifiedName" 
"TypeElement.cast" -- "Collectors.toMap" 
"TypeElement.cast" -- "List<Element>.stream" 
"TypeElement.getQualifiedName" -- "Collectors.toMap" 
"TypeElement.getQualifiedName" -- "List<Element>.stream" 
"Collectors.toMap" -- "List<Element>.stream" 
"Collectors.toMap" -- "List<String>.stream" 
"Collectors.toMap" -- "Stream.concat" 
"Collectors.toMap" -- "Function.identity" 
"Collectors.toMap" -- "HashMap<String>.cast" 
"Collectors.toMap" -- "HashMap<String>.entrySet" 
"Collectors.toMap" -- "Set<Entry<String>>.stream" 
"Collectors.toMap" -- "Collectors.collectingAndThen" 
"Collectors.toMap" -- "SimpleImmutableEntry.<init>" 
"Collectors.toMap" -- "AbstractMap.SimpleImmutableEntry<>,new" 
"Collectors.toMap" -- "SimpleEntry.<init>" 
"Collectors.toMap" -- "AbstractMap.SimpleEntry<>,new" 
"Collectors.toMap" -- "Map<String,Integer>.forEach" 
"Collectors.toMap" -- "Map<String>.entrySet" 
"Collectors.toMap" -- "Stream<Character>.collect" 
"Collectors.toMap" -- "Map<Character,Boolean>.size" 
"Collectors.toMap" -- "Book.setId" 
"Collectors.toMap" -- "Book.getId" 
"Collectors.toMap" -- "List<Book>.stream" 
"Collectors.toMap" -- "Supplier<List<String>>.get" 
"Collectors.toMap" -- "List<<String,String>>.size" 
"Collectors.toMap" -- "List<<String,String>>.get" 
"Collectors.toMap" -- "Map<>.put" 
"Collectors.toMap" -- "Map<Long,Book>.putAll" 
"LocalDateTime.parse" -- "DateTimeFormatter.toString" 
"Map<Integer>.put" -- "Map<Integer>.size" 
"Map<Integer>.put" -- "LinkedHashMap<Integer>.<init>" 
"Map<Integer>.put" -- "Response.status" 
"Map<Integer>.put" -- "Response.ok" 
"Map<Integer>.put" -- "Response.notModified" 
"Map<Integer>.put" -- "ArrayList.build" 
"Map<Integer>.put" -- "Map<Integer>.containsKey" 
"Map<Integer>.size" -- "Map<Integer>.values" 
"Endpoint.publish" -- "Endpoint.create" 
"Thread.sleep" -- "System.exit" 
"Thread.sleep" -- "Server.destroy" 
"Thread.sleep" -- "Thread.currentThread" 
"Thread.sleep" -- "Thread.<init>" 
"Thread.sleep" -- "Thread.start" 
"Thread.sleep" -- "AtomicInteger.incrementAndGet" 
"Thread.sleep" -- "CountDownLatch.countDown" 
"Thread.sleep" -- "Object.<init>" 
"Thread.sleep" -- "UUID.randomUUID" 
"Thread.sleep" -- "Storage.builder" 
"Thread.sleep" -- "WorkerThread.<init>" 
"Thread.sleep" -- "WorkerThread.run" 
"Thread.sleep" -- "Executors.newFixedThreadPool" 
"Thread.sleep" -- "URI.create" 
"Thread.sleep" -- "LocalTime.now" 
"Thread.sleep" -- "ThreadLocalRandom.current" 
"Thread.sleep" -- "ArrayList<String>.isEmpty" 
"Thread.sleep" -- "ArrayList<String>.stream" 
"Thread.sleep" -- "ArrayList<String>.size" 
"Thread.sleep" -- "ArrayList<String>.clear" 
"Thread.sleep" -- "System.getProperty" 
"Thread.sleep" -- "Map<Long>.get" 
"Thread.sleep" -- "Semaphore.acquire" 
"Thread.sleep" -- "Semaphore.release" 
"Thread.sleep" -- "ExecutorService.execute" 
"Thread.sleep" -- "ExecutorService.submit" 
"Thread.sleep" -- "Phaser.getPhase" 
"Thread.sleep" -- "Phaser.arriveAndAwaitAdvance" 
"Thread.sleep" -- "Phaser.arriveAndDeregister" 
"Thread.sleep" -- "Executor.execute" 
"Thread.sleep" -- "Future<String>.cancel" 
"Thread.sleep" -- "Future<String>.get" 
"Thread.sleep" -- "Future<String>.isCancelled" 
"Thread.sleep" -- "Future<String>.isDone" 
"Thread.sleep" -- "Executors.newSingleThreadExecutor" 
"Thread.sleep" -- "AtomicBoolean.set" 
"Thread.sleep" -- "AtomicBoolean.get" 
"Thread.sleep" -- "Object.wait" 
"Thread.sleep" -- "Thread.getState" 
"Thread.sleep" -- "Data.receive" 
"Thread.sleep" -- "Data.send" 
"Thread.sleep" -- "BlockingQueue.put" 
"Thread.sleep" -- "System.gc" 
"Thread.sleep" -- "ProcessBuilder.<init>" 
"Thread.sleep" -- "ProcessBuilder.start" 
"Thread.sleep" -- "Long.valueOf" 
"Thread.sleep" -- "Thread.setDaemon" 
"Thread.sleep" -- "Process.destroy" 
"Thread.sleep" -- "Process.isAlive" 
"Thread.sleep" -- "Process.destroyForcibly" 
"Thread.sleep" -- "Optional<String[]>.map" 
"Thread.sleep" -- "List<Object>.add" 
"Thread.sleep" -- "List<Object>.size" 
"Thread.sleep" -- "AtomicBoolean.compareAndSet" 
"Thread.sleep" -- "Cache<String,Integer>.put" 
"Thread.sleep" -- "Cache<String,Integer>.getAdvancedCache" 
"Thread.sleep" -- "Observable.interval" 
"Thread.sleep" -- "Observable.publish" 
"Thread.sleep" -- "Observable.subscribe" 
"Thread.sleep" -- "Observable.doOnNext" 
"System.exit" -- "Server.destroy" 
"System.exit" -- "Thread.<init>" 
"System.exit" -- "Thread.start" 
"System.exit" -- "Builder.build" 
"System.exit" -- "File.getAbsolutePath" 
"System.exit" -- "Properties.<init>" 
"System.exit" -- "Properties.load" 
"System.exit" -- "InputStreamReader.<init>" 
"System.exit" -- "BufferedReader.<init>" 
"System.exit" -- "OutputStream.write" 
"System.exit" -- "FileReader.<init>" 
"System.exit" -- "System.getProperty" 
"System.exit" -- "Thread.getState" 
"System.exit" -- "Scanner.nextLine" 
"System.exit" -- "BufferedReader.readLine" 
"System.exit" -- "BufferedReader.close" 
"System.exit" -- "File.exists" 
"System.exit" -- "String.equalsIgnoreCase" 
"System.exit" -- "InputStream.read" 
"System.exit" -- "Circle.<init>" 
"System.exit" -- "InputStream.available" 
"System.exit" -- "Builder.setPrincipal" 
"Map<Integer>.entrySet" -- "Entry<Integer>.getValue" 
"Map<Integer>.entrySet" -- "Entry<Integer>.getKey" 
"Map<Integer>.entrySet" -- "Iterator<Entry<Integer>>.hasNext" 
"Map<Integer>.entrySet" -- "Iterator<Entry<Integer>>.next" 
"Map<Integer>.entrySet" -- "Iterator<Entry<Integer>>.remove" 
"Entry<Integer>.getValue" -- "Entry<Integer>.getKey" 
"Entry<Integer>.getValue" -- "Iterator<Entry<Integer>>.hasNext" 
"Entry<Integer>.getValue" -- "Iterator<Entry<Integer>>.next" 
"Entry<Integer>.getValue" -- "Iterator<Entry<Integer>>.remove" 
"Entry<Integer>.getKey" -- "Iterator<Entry<Integer>>.hasNext" 
"Entry<Integer>.getKey" -- "Iterator<Entry<Integer>>.next" 
"Entry<Integer>.getKey" -- "Iterator<Entry<Integer>>.remove" 
"String.hashCode" -- "Long.hashCode" 
"String.hashCode" -- "List.hashCode" 
"String.hashCode" -- "Integer.hashCode" 
"String.hashCode" -- "Graph.getOuterType" 
"String.hashCode" -- "Graph.hashCode" 
"String.hashCode" -- "BigDecimal.hashCode" 
"String.hashCode" -- "Point.hashCode" 
"Response.status" -- "Response.ok" 
"Response.status" -- "Response.notModified" 
"Response.status" -- "Date.<init>" 
"Response.status" -- "Set<>.size" 
"Response.status" -- "Map<String,String>.put" 
"Response.status" -- "Map<String>.put" 
"Response.status" -- "Date.before" 
"Response.status" -- "Map<String>.get" 
"Response.status" -- "Map<String>.remove" 
"Response.status" -- "Set<String>.containsAll" 
"Response.ok" -- "Response.notModified" 
"Response.ok" -- "UUID.randomUUID" 
"Response.ok" -- "Map<String,String>.put" 
"Response.ok" -- "List<String>.contains" 
"Runnable.<init>" -- "Builder.name" 
"Runnable.<init>" -- "Thread.currentThread" 
"Runnable.<init>" -- "Thread.<init>" 
"Runnable.<init>" -- "Thread.start" 
"Runnable.<init>" -- "List<String>.forEach" 
"Runnable.<init>" -- "AtomicInteger.incrementAndGet" 
"Runnable.<init>" -- "LocalDateTime.now" 
"Runnable.<init>" -- "URL.getServiceInterface" 
"Runnable.<init>" -- "HashMap<String,List<URL>>.<init>" 
"Runnable.<init>" -- "Map<String,List<URL>>.get" 
"Runnable.<init>" -- "ArrayList<URL>.<init>" 
"Runnable.<init>" -- "Map<String,List<URL>>.put" 
"Runnable.<init>" -- "List<URL>.add" 
"Runnable.<init>" -- "Map<String,List<URL>>.values" 
"Runnable.<init>" -- "URL.getServiceKey" 
"Builder.name" -- "Thread.currentThread" 
"Builder.name" -- "Thread.<init>" 
"Builder.name" -- "Thread.start" 
"Thread.currentThread" -- "Thread.<init>" 
"Thread.currentThread" -- "Thread.start" 
"Thread.currentThread" -- "List<String>.forEach" 
"Thread.currentThread" -- "AtomicInteger.incrementAndGet" 
"Thread.currentThread" -- "LocalDateTime.now" 
"Thread.currentThread" -- "CountDownLatch.countDown" 
"Thread.currentThread" -- "Paths.get" 
"Thread.currentThread" -- "Map<String,String>.get" 
"Thread.currentThread" -- "Properties.<init>" 
"Thread.currentThread" -- "Properties.load" 
"Thread.currentThread" -- "Map<String,String>.put" 
"Thread.currentThread" -- "Spliterator.tryAdvance" 
"Thread.currentThread" -- "ThreadLocalRandom.current" 
"Thread.currentThread" -- "ReentrantLock.lock" 
"Thread.currentThread" -- "ReentrantLock.unlock" 
"Thread.currentThread" -- "Semaphore.acquire" 
"Thread.currentThread" -- "Semaphore.release" 
"Thread.currentThread" -- "CyclicBarrier.await" 
"Thread.currentThread" -- "System.nanoTime" 
"Thread.currentThread" -- "Condition.await" 
"Thread.currentThread" -- "Condition.signalAll" 
"Thread.currentThread" -- "ReentrantLock.tryLock" 
"Thread.currentThread" -- "StampedLock.tryOptimisticRead" 
"Thread.currentThread" -- "StampedLock.validate" 
"Thread.currentThread" -- "StampedLock.readLock" 
"Thread.currentThread" -- "StampedLock.unlock" 
"Thread.currentThread" -- "StampedLock.unlockRead" 
"Thread.currentThread" -- "StampedLock.writeLock" 
"Thread.currentThread" -- "StampedLock.unlockWrite" 
"Thread.currentThread" -- "Lock.lock" 
"Thread.currentThread" -- "Lock.unlock" 
"Thread.currentThread" -- "Thread.yield" 
"Thread.currentThread" -- "Printer.wait" 
"Thread.currentThread" -- "Printer.notify" 
"Thread.currentThread" -- "ScheduledExecutorService.shutdown" 
"Thread.currentThread" -- "Executors.newSingleThreadScheduledExecutor" 
"Thread.currentThread" -- "AtomicBoolean.set" 
"Thread.currentThread" -- "AtomicBoolean.get" 
"Thread.currentThread" -- "ScheduledExecutorService.scheduleAtFixedRate" 
"Thread.currentThread" -- "ScheduledFuture.cancel" 
"Thread.currentThread" -- "Object.wait" 
"Thread.currentThread" -- "Thread.getState" 
"Thread.currentThread" -- "Thread.join" 
"Thread.currentThread" -- "Data.wait" 
"Thread.currentThread" -- "Data.notifyAll" 
"Thread.currentThread" -- "Data.receive" 
"Thread.currentThread" -- "Data.send" 
"Thread.currentThread" -- "BlockingQueue<Integer>.take" 
"Thread.currentThread" -- "Objects.requireNonNull" 
"Thread.currentThread" -- "Message.getPayload" 
"Thread.<init>" -- "Thread.start" 
"Thread.<init>" -- "List<String>.forEach" 
"Thread.<init>" -- "AtomicInteger.incrementAndGet" 
"Thread.<init>" -- "LocalDateTime.now" 
"Thread.<init>" -- "CountDownLatch.countDown" 
"Thread.<init>" -- "CountDownLatch.await" 
"Thread.<init>" -- "Object.<init>" 
"Thread.<init>" -- "Executors.newFixedThreadPool" 
"Thread.<init>" -- "BufferedReader.<init>" 
"Thread.<init>" -- "FileReader.<init>" 
"Thread.<init>" -- "CyclicBarrier.<init>" 
"Thread.<init>" -- "ExecutorService.execute" 
"Thread.<init>" -- "CyclicBarrier.await" 
"Thread.<init>" -- "ExecutorService.shutdown" 
"Thread.<init>" -- "Thread.setName" 
"Thread.<init>" -- "Writer.<init>" 
"Thread.<init>" -- "Reader.<init>" 
"Thread.<init>" -- "Thread.yield" 
"Thread.<init>" -- "CountDownLatch.<init>" 
"Thread.<init>" -- "CountDownLatch.getCount" 
"Thread.<init>" -- "CyclicBarrier.isBroken" 
"Thread.<init>" -- "Printer.<init>" 
"Thread.<init>" -- "Task.<init>" 
"Thread.<init>" -- "Thread.getName" 
"Thread.<init>" -- "Thread.getState" 
"Thread.<init>" -- "Thread.join" 
"Thread.<init>" -- "Data.<init>" 
"Thread.<init>" -- "Receiver.<init>" 
"Thread.<init>" -- "Runtime.getRuntime" 
"Thread.<init>" -- "LinkedBlockingQueue.<init>" 
"Thread.<init>" -- "BufferedReader.readLine" 
"Thread.<init>" -- "Process.waitFor" 
"Thread.<init>" -- "Process.getInputStream" 
"Thread.<init>" -- "Thread.setDaemon" 
"Thread.<init>" -- "CookieManager.<init>" 
"Thread.<init>" -- "CookieManager.getCookieStore" 
"Thread.<init>" -- "URL.getServiceInterface" 
"Thread.<init>" -- "HashMap<String,List<URL>>.<init>" 
"Thread.<init>" -- "Map<String,List<URL>>.get" 
"Thread.<init>" -- "ArrayList<URL>.<init>" 
"Thread.<init>" -- "Map<String,List<URL>>.put" 
"Thread.<init>" -- "List<URL>.add" 
"Thread.<init>" -- "Map<String,List<URL>>.values" 
"Thread.<init>" -- "URL.getServiceKey" 
"Thread.<init>" -- "TextField.getText" 
"Thread.<init>" -- "Task<>.<init>" 
"Thread.<init>" -- "Task<>.setOnSucceeded" 
"Thread.<init>" -- "Task<>.getValue" 
"Thread.<init>" -- "Thread.wait" 
"Thread.start" -- "List<String>.forEach" 
"Thread.start" -- "AtomicInteger.incrementAndGet" 
"Thread.start" -- "LocalDateTime.now" 
"Thread.start" -- "CountDownLatch.countDown" 
"Thread.start" -- "CountDownLatch.await" 
"Thread.start" -- "Object.<init>" 
"Thread.start" -- "CyclicBarrier.<init>" 
"Thread.start" -- "CyclicBarrier.await" 
"Thread.start" -- "Thread.setName" 
"Thread.start" -- "Thread.yield" 
"Thread.start" -- "CountDownLatch.<init>" 
"Thread.start" -- "CountDownLatch.getCount" 
"Thread.start" -- "CyclicBarrier.isBroken" 
"Thread.start" -- "Printer.<init>" 
"Thread.start" -- "Future<Long>.get" 
"Thread.start" -- "Task.<init>" 
"Thread.start" -- "Thread.getState" 
"Thread.start" -- "Thread.join" 
"Thread.start" -- "Data.<init>" 
"Thread.start" -- "Receiver.<init>" 
"Thread.start" -- "Runtime.getRuntime" 
"Thread.start" -- "LinkedBlockingQueue.<init>" 
"Thread.start" -- "Thread.setDaemon" 
"Thread.start" -- "URL.getServiceInterface" 
"Thread.start" -- "HashMap<String,List<URL>>.<init>" 
"Thread.start" -- "Map<String,List<URL>>.get" 
"Thread.start" -- "ArrayList<URL>.<init>" 
"Thread.start" -- "Map<String,List<URL>>.put" 
"Thread.start" -- "List<URL>.add" 
"Thread.start" -- "Map<String,List<URL>>.values" 
"Thread.start" -- "URL.getServiceKey" 
"Thread.start" -- "TextField.getText" 
"Thread.start" -- "Task<>.<init>" 
"Thread.start" -- "Task<>.setOnSucceeded" 
"Thread.start" -- "Task<>.getValue" 
"BigDecimal.multiply" -- "BigDecimal.valueOf" 
"BigDecimal.multiply" -- "BigDecimal.subtract" 
"BigDecimal.multiply" -- "BigDecimal.add" 
"BigDecimal.multiply" -- "BigDecimal.setScale" 
"Random.nextFloat" -- "BigDecimal.valueOf" 
"BigDecimal.valueOf" -- "UUID.randomUUID" 
"BigDecimal.valueOf" -- "Product.<init>" 
"BigDecimal.valueOf" -- "Collections.singletonList" 
"BigDecimal.valueOf" -- "LocalDate.of" 
"BigDecimal.valueOf" -- "Instant.now" 
"List<String>.forEach" -- "AtomicInteger.incrementAndGet" 
"List<String>.forEach" -- "LocalDateTime.now" 
"List<String>.forEach" -- "List<String>.stream" 
"List<String>.forEach" -- "List<String>.parallelStream" 
"List<String>.forEach" -- "Map<String,Long>.put" 
"List<String>.forEach" -- "Long.parseLong" 
"List<String>.forEach" -- "Stream<String>.forEach" 
"List<String>.forEach" -- "Stream.ofAll" 
"List<String>.forEach" -- "Stream<String>.insert" 
"List<String>.forEach" -- "Stream<String>.remove" 
"AtomicInteger.incrementAndGet" -- "LocalDateTime.now" 
"AtomicInteger.incrementAndGet" -- "CountDownLatch.countDown" 
"AtomicInteger.incrementAndGet" -- "Date.<init>" 
"AtomicInteger.incrementAndGet" -- "Executors.newFixedThreadPool" 
"AtomicInteger.incrementAndGet" -- "AtomicInteger.get" 
"AtomicInteger.incrementAndGet" -- "LocalDate.now" 
"AtomicInteger.incrementAndGet" -- "AtomicInteger.compareAndSet" 
"AtomicInteger.incrementAndGet" -- "CyclicBarrier.<init>" 
"AtomicInteger.incrementAndGet" -- "ExecutorService.execute" 
"AtomicInteger.incrementAndGet" -- "CyclicBarrier.await" 
"AtomicInteger.incrementAndGet" -- "ExecutorService.shutdown" 
"AtomicInteger.incrementAndGet" -- "ExecutorService.awaitTermination" 
"AtomicInteger.incrementAndGet" -- "CountDownLatch.<init>" 
"AtomicInteger.incrementAndGet" -- "CountDownLatch.getCount" 
"AtomicInteger.incrementAndGet" -- "CyclicBarrier.getNumberWaiting" 
"AtomicInteger.incrementAndGet" -- "ThreadLocal<Integer>.get" 
"AtomicInteger.incrementAndGet" -- "ThreadLocal<Integer>.set" 
"AtomicInteger.incrementAndGet" -- "AtomicReference<Node>.get" 
"AtomicInteger.incrementAndGet" -- "AtomicReference<Node>.compareAndSet" 
"AtomicInteger.incrementAndGet" -- "Node.setPrevious" 
"AtomicInteger.incrementAndGet" -- "AtomicBoolean.get" 
"AtomicInteger.incrementAndGet" -- "BlockingQueue.take" 
"AtomicInteger.incrementAndGet" -- "TransferQueue<String>.tryTransfer" 
"LocalDateTime.now" -- "Date.<init>" 
"LocalDateTime.now" -- "Calendar.getInstance" 
"LocalDateTime.now" -- "LocalDateTime.of" 
"LocalDateTime.now" -- "Duration.between" 
"LocalDateTime.now" -- "Duration.getSeconds" 
"LocalDateTime.now" -- "Duration.getNano" 
"LocalDateTime.now" -- "LocalDateTime.atZone" 
"LocalDateTime.now" -- "LocalDate.now" 
"LocalDateTime.now" -- "LocalTime.now" 
"LocalDateTime.now" -- "List<String>.isEmpty" 
"LocalDateTime.now" -- "Date.valueOf" 
"LocalDateTime.now" -- "Timestamp.valueOf" 
"LocalDateTime.now" -- "Time.valueOf" 
"LocalDateTime.now" -- "ZoneOffset.compareTo" 
"LocalDateTime.now" -- "ZoneId.getAvailableZoneIds" 
"LocalDateTime.now" -- "Set<String>.stream" 
"LocalDateTime.now" -- "String.format("" 
"LocalDateTime.now" -- "OffsetDateTime.now" 
"LocalDateTime.now" -- "OffsetTime.now" 
"LocalDateTime.now" -- "Instant.now" 
"LocalDateTime.now" -- "Response.seeOther" 
"String.replace" -- "ByteArrayOutputStream.<init>" 
"String.replace" -- "ByteArrayOutputStream.toByteArray" 
"String.replace" -- "File.getAbsolutePath" 
"String.replace" -- "Paths.get" 
"String.replace" -- "Map<String>.put" 
"String.replace" -- "Objects.requireNonNull" 
"String.replace" -- "String.endsWith" 
"String.replace" -- "File.list" 
"String.replace" -- "InputStream.read" 
"String.replace" -- "ByteArrayOutputStream.write" 
"String.replace" -- "String.indexOf" 
"String.replace" -- "Charset.defaultCharset" 
"String.replace" -- "File.toPath" 
"String.replace" -- "Files.readAllBytes" 
"String.replace" -- "Base64.decodeBase64" 
"String.replace" -- "KeyFactory.getInstance" 
"String.replace" -- "X509EncodedKeySpec.<init>" 
"String.replace" -- "KeyFactory.generatePublic" 
"String.replace" -- "RSAPublicKey.cast" 
"String.replace" -- "PKCS8EncodedKeySpec.<init>" 
"String.replace" -- "KeyFactory.generatePrivate" 
"String.replace" -- "RSAPrivateKey.cast" 
"String.replace" -- "GZIPInputStream.<init>" 
"String.replace" -- "LinkedHashMap<String,Object>.put" 
"Long.cast" -- "Builder.build" 
"Long.cast" -- "CharSequence>.cast" 
"Builder.build" -- "CharSequence>.cast" 
"Builder.build" -- "Builder.<init>" 
"Builder.build" -- "System.getProperty" 
"Builder.build" -- "Builder.addColumn" 
"Builder.build" -- "Cluster.builder" 
"Builder.build" -- "Builder.withCredentials" 
"Builder.build" -- "Builder.withCompression" 
"Builder.build" -- "Builder.withLoadBalancingPolicy" 
"Builder.build" -- "Builder.withQueryOptions" 
"Builder.build" -- "Builder.withReconnectionPolicy" 
"Builder.build" -- "Builder.withRetryPolicy" 
"Builder.build" -- "Builder.withSocketOptions" 
"Builder.build" -- "Builder.withSSL" 
"Builder.build" -- "Builder.addContactPoints" 
"Builder.build" -- "Cluster.getConfiguration" 
"Builder.build" -- "Cluster.init" 
"Builder.build" -- "Cluster.getMetrics" 
"Builder.build" -- "Builder.setPrincipal" 
"Builder.build" -- "Builder.interceptors" 
"Builder.build" -- "Builder.addInterceptor" 
"Builder.build" -- "Builder.client" 
"Builder.build" -- "Builder.settings" 
"Builder.build" -- "Builder.index" 
"Builder.build" -- "Builder.defaultIndex" 
"Builder.build" -- "Builder.option" 
"Builder.hasClientIdentifierBuilder" -- "Builder.getClientIdentifierBuilder" 
"Builder.<init>" -- "UUID.randomUUID" 
"Builder.<init>" -- "List.cast" 
"Builder.<init>" -- "InputStreamReader.<init>" 
"Builder.<init>" -- "ExecutorService.shutdown" 
"Builder.<init>" -- "Executors.newSingleThreadExecutor" 
"Builder.<init>" -- "Instant.plus" 
"Builder.<init>" -- "Date.from" 
"Builder.<init>" -- "File.exists" 
"Builder.<init>" -- "Instant.now" 
"Builder.<init>" -- "Builder.withinRange" 
"Builder.<init>" -- "Evaluation.stats" 
"Builder.<init>" -- "Builder.activation" 
"Builder.<init>" -- "Builder.nOut" 
"Builder.<init>" -- "Builder.kernelSize" 
"Builder.<init>" -- "Builder.nIn" 
"Builder.<init>" -- "Builder.seed" 
"Builder.<init>" -- "Builder.iterations" 
"Builder.<init>" -- "Evaluation.<init>" 
"Builder.<init>" -- "Evaluation.eval" 
"Builder.<init>" -- "File.getParentFile" 
"Builder.<init>" -- "Utils.downloadAndSave" 
"Builder.<init>" -- "Utils.extractTarArchive" 
"Builder.<init>" -- "Map<Integer,Double>.put" 
"Builder.<init>" -- "Builder.stride" 
"Builder.<init>" -- "File.getPath" 
"Builder.<init>" -- "Builder.url" 
"Builder.<init>" -- "Response.body" 
"Builder.<init>" -- "Builder.errorCb" 
"Builder.<init>" -- "Builder.setDataStoreFactory" 
"Builder.<init>" -- "Builder.setApplicationName" 
"Builder.<init>" -- "Builder.setInitialIntervalMillis" 
"Builder.<init>" -- "Future.get" 
"Builder.<init>" -- "Builder.baseUrl" 
"Builder.<init>" -- "Builder.subject" 
"Builder.<init>" -- "Builder.issuer" 
"Builder.<init>" -- "Builder.multiThreaded" 
"Builder.<init>" -- "Builder.settings" 
"Builder.<init>" -- "Builder.index" 
"Builder.<init>" -- "Builder.defaultIndex" 
"Builder.<init>" -- "Builder.commitAfterwards" 
"Builder.<init>" -- "Builder.uri" 
"Builder.<init>" -- "Builder.mergeFrom" 
"Builder.<init>" -- "Builder.up" 
"Builder.<init>" -- "Builder.down" 
"CharSequence.cast" -- "LocalDate.from" 
"Parser.<init>" -- "Parser.parse" 
"Parser.parse" -- "ContentHandler.toString" 
"ByteArrayOutputStream.<init>" -- "Encoder.flush" 
"ByteArrayOutputStream.<init>" -- "ByteArrayOutputStream.toByteArray" 
"ByteArrayOutputStream.<init>" -- "ByteArrayInputStream.<init>" 
"ByteArrayOutputStream.<init>" -- "ObjectOutputStream.<init>" 
"ByteArrayOutputStream.<init>" -- "ObjectOutputStream.writeObject" 
"ByteArrayOutputStream.<init>" -- "ObjectOutputStream.close" 
"ByteArrayOutputStream.<init>" -- "Base64.getEncoder" 
"ByteArrayOutputStream.<init>" -- "PrintWriter.close" 
"ByteArrayOutputStream.<init>" -- "PrintWriter.<init>" 
"ByteArrayOutputStream.<init>" -- "InputStream.read" 
"ByteArrayOutputStream.<init>" -- "ByteArrayOutputStream.write" 
"ByteArrayOutputStream.<init>" -- "ImageIO.read" 
"ByteArrayOutputStream.<init>" -- "PrintWriter.print" 
"ByteArrayOutputStream.<init>" -- "PrintWriter.flush" 
"ByteArrayOutputStream.<init>" -- "GZIPOutputStream.<init>" 
"ByteArrayOutputStream.<init>" -- "ByteArrayOutputStream.size" 
"ByteArrayOutputStream.<init>" -- "ByteArrayOutputStream.writeTo" 
"Encoder.flush" -- "ByteArrayOutputStream.toByteArray" 
"ByteArrayOutputStream.toByteArray" -- "ByteArrayInputStream.<init>" 
"ByteArrayOutputStream.toByteArray" -- "ObjectOutputStream.<init>" 
"ByteArrayOutputStream.toByteArray" -- "ObjectOutputStream.writeObject" 
"ByteArrayOutputStream.toByteArray" -- "ObjectOutputStream.close" 
"ByteArrayOutputStream.toByteArray" -- "Base64.getEncoder" 
"ByteArrayOutputStream.toByteArray" -- "PrintWriter.close" 
"ByteArrayOutputStream.toByteArray" -- "PrintWriter.<init>" 
"ByteArrayOutputStream.toByteArray" -- "InputStream.read" 
"ByteArrayOutputStream.toByteArray" -- "ByteArrayOutputStream.write" 
"ByteArrayOutputStream.toByteArray" -- "ImageIO.read" 
"ByteArrayOutputStream.toByteArray" -- "PrintWriter.print" 
"ByteArrayOutputStream.toByteArray" -- "PrintWriter.flush" 
"ByteArrayOutputStream.toByteArray" -- "GZIPOutputStream.<init>" 
"Region<>.entrySet" -- "Entry<>.getValue" 
"Entry<>.getValue" -- "Map<>.entrySet" 
"Entry<>.getValue" -- "Entry<>.getKey" 
"Entry<>.getValue" -- "Comparator<Entry<>>.<init>" 
"CountDownLatch.countDown" -- "CountDownLatch.await" 
"CountDownLatch.countDown" -- "Executors.newFixedThreadPool" 
"CountDownLatch.countDown" -- "String.getBytes" 
"CountDownLatch.countDown" -- "AtomicInteger.get" 
"CountDownLatch.countDown" -- "AtomicInteger.set" 
"CountDownLatch.countDown" -- "AtomicInteger.<init>" 
"CountDownLatch.countDown" -- "Collections.synchronizedList" 
"CountDownLatch.countDown" -- "ExecutorService.execute" 
"CountDownLatch.countDown" -- "ExecutorService.shutdown" 
"CountDownLatch.countDown" -- "CountDownLatch.<init>" 
"CountDownLatch.countDown" -- "CountDownLatch.getCount" 
"CountDownLatch.countDown" -- "Map<String>.get" 
"CountDownLatch.countDown" -- "List<Long>.add" 
"CountDownLatch.countDown" -- "HashMap<Long>.<init>" 
"CountDownLatch.countDown" -- "Map<Long>.size" 
"CountDownLatch.countDown" -- "Map<Long>.entrySet" 
"CountDownLatch.countDown" -- "Arrays.equals)" 
"CountDownLatch.countDown" -- "Optional<Entry<Long>>.isPresent" 
"CountDownLatch.countDown" -- "Optional<Entry<Long>>.get" 
"CountDownLatch.await" -- "String.getBytes" 
"CountDownLatch.await" -- "AtomicInteger.set" 
"CountDownLatch.await" -- "AtomicInteger.<init>" 
"CountDownLatch.await" -- "Collections.synchronizedList" 
"CountDownLatch.await" -- "CountDownLatch.<init>" 
"CountDownLatch.await" -- "CountDownLatch.getCount" 
"CountDownLatch.await" -- "Map<String>.get" 
"CountDownLatch.await" -- "List<Long>.add" 
"CountDownLatch.await" -- "HashMap<Long>.<init>" 
"CountDownLatch.await" -- "Map<Long>.size" 
"CountDownLatch.await" -- "Map<Long>.entrySet" 
"CountDownLatch.await" -- "Arrays.equals)" 
"CountDownLatch.await" -- "Optional<Entry<Long>>.isPresent" 
"CountDownLatch.await" -- "Optional<Entry<Long>>.get" 
"Long.equals" -- "List.equals" 
"List.equals" -- "Set<Integer>.equals" 
"Long.hashCode" -- "List.hashCode" 
"Long.hashCode" -- "Integer.hashCode" 
"List.hashCode" -- "Set<Integer>.hashCode" 
"File.getAbsolutePath" -- "Label.<init>" 
"File.getAbsolutePath" -- "Number.<init>" 
"File.getAbsolutePath" -- "Row.createCell" 
"File.getAbsolutePath" -- "Cell.setCellValue" 
"File.getAbsolutePath" -- "Cell.setCellStyle" 
"File.getAbsolutePath" -- "FileOutputStream.<init>" 
"File.getAbsolutePath" -- "FileOutputStream.close" 
"File.getAbsolutePath" -- "Paths.get" 
"File.getAbsolutePath" -- "Map<String>.put" 
"File.getAbsolutePath" -- "InputStream.close" 
"File.getAbsolutePath" -- "System.getProperty" 
"File.getAbsolutePath" -- "Class.getSimpleName" 
"File.getAbsolutePath" -- "Objects.requireNonNull" 
"File.getAbsolutePath" -- "File.getCanonicalPath" 
"File.getAbsolutePath" -- "FileOutputStream.write" 
"File.getAbsolutePath" -- "File.isDirectory" 
"File.getAbsolutePath" -- "String.endsWith" 
"File.getAbsolutePath" -- "File.list" 
"File.getAbsolutePath" -- "InputStream.read" 
"File.getAbsolutePath" -- "Class.getName" 
"File.getAbsolutePath" -- "Optional<String>.isPresent" 
"File.getAbsolutePath" -- "Optional<String>.get" 
"File.getAbsolutePath" -- "JFileChooser.<init>" 
"File.getAbsolutePath" -- "JFileChooser.showOpenDialog" 
"File.getAbsolutePath" -- "JFileChooser.getSelectedFile" 
"File.getAbsolutePath" -- "File.mkdirs" 
"File.getAbsolutePath" -- "Environment.<init>" 
"File.getAbsolutePath" -- "Context.addServletMappingDecoded" 
"File.getAbsolutePath" -- "Context.addFilterDef" 
"File.getAbsolutePath" -- "Context.addFilterMap" 
"File.getAbsolutePath" -- "FileOutputStream.flush" 
"Label.<init>" -- "Number.<init>" 
"Label.<init>" -- "ArrayList<String>.<init>" 
"Label.<init>" -- "LocalDate.ofEpochDay" 
"Label.<init>" -- "Map<String>.keySet" 
"Label.<init>" -- "Executors.newScheduledThreadPool" 
"Label.<init>" -- "Map<String>.get" 
"Label.<init>" -- "Instant.now" 
"Label.<init>" -- "Button.<init>" 
"Label.<init>" -- "Button.addStyleName" 
"Label.<init>" -- "Button.getElement" 
"Label.<init>" -- "HTML.<init>" 
"Label.<init>" -- "Button.addClickHandler" 
"Label.<init>" -- "Button.setEnabled" 
"Label.<init>" -- "Button.setFocus" 
"Label.<init>" -- "Label.setText" 
"Label.<init>" -- "HTML.setText" 
"Label.<init>" -- "HTML.addStyleName" 
"Label.<init>" -- "HTML.setHTML" 
"Label.<init>" -- "HTML.removeStyleName" 
"Label.<init>" -- "ScheduledExecutorService.scheduleWithFixedDelay" 
"Label.<init>" -- "TextField.<init>" 
"Label.<init>" -- "Binder.setBean" 
"Label.<init>" -- "Button.addClickListener" 
"Label.<init>" -- "GridLayout.<init>" 
"Label.<init>" -- "GridLayout.setSpacing" 
"Label.<init>" -- "GridLayout.setMargin" 
"Label.<init>" -- "Label.setId" 
"Label.<init>" -- "Label.setValue" 
"Label.<init>" -- "Label.setCaption" 
"Label.<init>" -- "GridLayout.addComponent" 
"Label.<init>" -- "Link.<init>" 
"Label.<init>" -- "Link.setId" 
"Label.<init>" -- "Link.setTargetName" 
"Label.<init>" -- "TextField.setId" 
"Label.<init>" -- "TextField.setCaption" 
"Label.<init>" -- "TextField.setValue" 
"Label.<init>" -- "TextField.setIcon" 
"Label.<init>" -- "TextArea.<init>" 
"Label.<init>" -- "TextArea.setCaption" 
"Label.<init>" -- "TextArea.setId" 
"Label.<init>" -- "TextArea.setValue" 
"Label.<init>" -- "Panel.<init>" 
"Label.<init>" -- "Panel.setContent" 
"Label.<init>" -- "Button.setId" 
"Label.<init>" -- "Button.setDescription" 
"Label.<init>" -- "Button.setIcon" 
"Label.<init>" -- "Grid.<init>" 
"Label.<init>" -- "Grid<Row>.setColumns" 
"Label.<init>" -- "Row.<init>" 
"Label.<init>" -- "List<Row>.add" 
"Label.<init>" -- "Grid<Row>.setItems" 
"Label.<init>" -- "Panel.setSizeUndefined" 
"Label.<init>" -- "Binder.<init>" 
"Label.<init>" -- "Binder.readBean" 
"Label.<init>" -- "TextField.setWidth" 
"Label.<init>" -- "Binder.forField" 
"Label.<init>" -- "Binder.validate" 
"Label.<init>" -- "ArrayList<String>.get" 
"Label.<init>" -- "Label.setOutputMarkupId" 
"ArrayList<String>.<init>" -- "Map<Integer,List<String>>.put" 
"ArrayList<String>.<init>" -- "Map<Integer,List<String>>.get" 
"ArrayList<String>.<init>" -- "HashMap<String,String>.<init>" 
"ArrayList<String>.<init>" -- "Map<String,String>.put" 
"ArrayList<String>.<init>" -- "LocalDate.ofEpochDay" 
"ArrayList<String>.<init>" -- "ArrayList<String>.add" 
"ArrayList<String>.<init>" -- "SimpleDateFormat.parse" 
"ArrayList<String>.<init>" -- "Collection.instance" 
"ArrayList<String>.<init>" -- "Collection.cast" 
"ArrayList<String>.<init>" -- "ArrayList<ArrayList<String>>.<init>" 
"ArrayList<String>.<init>" -- "ArrayList<ArrayList<ArrayList<String>>>.add" 
"ArrayList<String>.<init>" -- "ArrayList<ArrayList<ArrayList<String>>>.get" 
"ArrayList<String>.<init>" -- "Pattern.compile" 
"ArrayList<String>.<init>" -- "Pattern.matcher" 
"ArrayList<String>.<init>" -- "Executors.newScheduledThreadPool" 
"ArrayList<String>.<init>" -- "Map<String,List<String>>.put" 
"ArrayList<String>.<init>" -- "Instant.now" 
"ArrayList<String>.<init>" -- "Button.<init>" 
"ArrayList<String>.<init>" -- "Button.addStyleName" 
"ArrayList<String>.<init>" -- "Button.setEnabled" 
"ArrayList<String>.<init>" -- "ScheduledExecutorService.scheduleWithFixedDelay" 
"ArrayList<String>.<init>" -- "MultiValueMap<String,String>.add" 
"ArrayList<String>.<init>" -- "TextField.<init>" 
"ArrayList<String>.<init>" -- "HashMap<String,String>.forEach" 
"ArrayList<String>.<init>" -- "HashMap<String,String>.size" 
"ArrayList<String>.<init>" -- "ArrayList<String>.toArray" 
"ArrayList<String>.<init>" -- "LinkedHashMap<String,String>.<init>" 
"ArrayList<String>.<init>" -- "ArrayList<ArrayList<Integer>>.<init>" 
"ArrayList<String>.<init>" -- "Collection.isEmpty" 
"ArrayList<String>.<init>" -- "Binder.setBean" 
"ArrayList<String>.<init>" -- "Button.addClickListener" 
"ArrayList<String>.<init>" -- "GridLayout.<init>" 
"ArrayList<String>.<init>" -- "GridLayout.setSpacing" 
"ArrayList<String>.<init>" -- "GridLayout.setMargin" 
"ArrayList<String>.<init>" -- "Label.setId" 
"ArrayList<String>.<init>" -- "Label.setValue" 
"ArrayList<String>.<init>" -- "Label.setCaption" 
"ArrayList<String>.<init>" -- "GridLayout.addComponent" 
"ArrayList<String>.<init>" -- "Link.<init>" 
"ArrayList<String>.<init>" -- "Link.setId" 
"ArrayList<String>.<init>" -- "Link.setTargetName" 
"ArrayList<String>.<init>" -- "TextField.setId" 
"ArrayList<String>.<init>" -- "TextField.setCaption" 
"ArrayList<String>.<init>" -- "TextField.setValue" 
"ArrayList<String>.<init>" -- "TextField.setIcon" 
"ArrayList<String>.<init>" -- "TextArea.<init>" 
"ArrayList<String>.<init>" -- "TextArea.setCaption" 
"ArrayList<String>.<init>" -- "TextArea.setId" 
"ArrayList<String>.<init>" -- "TextArea.setValue" 
"ArrayList<String>.<init>" -- "Panel.<init>" 
"ArrayList<String>.<init>" -- "Panel.setContent" 
"ArrayList<String>.<init>" -- "Button.setId" 
"ArrayList<String>.<init>" -- "Button.setDescription" 
"ArrayList<String>.<init>" -- "Button.setIcon" 
"ArrayList<String>.<init>" -- "Grid.<init>" 
"ArrayList<String>.<init>" -- "Grid<Row>.setColumns" 
"ArrayList<String>.<init>" -- "Row.<init>" 
"ArrayList<String>.<init>" -- "List<Row>.add" 
"ArrayList<String>.<init>" -- "Grid<Row>.setItems" 
"ArrayList<String>.<init>" -- "Panel.setSizeUndefined" 
"ArrayList<String>.<init>" -- "Binder.<init>" 
"ArrayList<String>.<init>" -- "Binder.readBean" 
"ArrayList<String>.<init>" -- "TextField.setWidth" 
"ArrayList<String>.<init>" -- "Binder.forField" 
"ArrayList<String>.<init>" -- "Binder.validate" 
"Map<Integer,List<String>>.put" -- "Map<Integer,List<String>>.get" 
"Row.createCell" -- "Cell.setCellValue" 
"Row.createCell" -- "Cell.setCellStyle" 
"Row.createCell" -- "FileOutputStream.<init>" 
"Cell.setCellValue" -- "Cell.setCellStyle" 
"Cell.setCellValue" -- "FileOutputStream.<init>" 
"Cell.setCellStyle" -- "FileOutputStream.<init>" 
"FileOutputStream.<init>" -- "FileInputStream.<init>" 
"FileOutputStream.<init>" -- "FileOutputStream.close" 
"FileOutputStream.<init>" -- "Rectangle.<init>" 
"FileOutputStream.<init>" -- "Color.<init>" 
"FileOutputStream.<init>" -- "ClassLoader.getResource" 
"FileOutputStream.<init>" -- "ClassLoader.getSystemResource" 
"FileOutputStream.<init>" -- "Paths.get" 
"FileOutputStream.<init>" -- "Path.getFileName" 
"FileOutputStream.<init>" -- "Files.newInputStream" 
"FileOutputStream.<init>" -- "Date.<init>" 
"FileOutputStream.<init>" -- "Connection.createStatement" 
"FileOutputStream.<init>" -- "Statement.executeUpdate" 
"FileOutputStream.<init>" -- "BufferedReader.<init>" 
"FileOutputStream.<init>" -- "SimpleDateFormat.<init>" 
"FileOutputStream.<init>" -- "FileReader.<init>" 
"FileOutputStream.<init>" -- "ObjectOutputStream.<init>" 
"FileOutputStream.<init>" -- "ObjectOutputStream.writeObject" 
"FileOutputStream.<init>" -- "ObjectOutputStream.close" 
"FileOutputStream.<init>" -- "URL.<init>" 
"FileOutputStream.<init>" -- "InputStream.close" 
"FileOutputStream.<init>" -- "System.getProperty" 
"FileOutputStream.<init>" -- "BufferedReader.readLine" 
"FileOutputStream.<init>" -- "DateFormat.format" 
"FileOutputStream.<init>" -- "BufferedReader.close" 
"FileOutputStream.<init>" -- "FileInputStream.close" 
"FileOutputStream.<init>" -- "ZipInputStream.<init>" 
"FileOutputStream.<init>" -- "ZipInputStream.getNextEntry" 
"FileOutputStream.<init>" -- "ZipInputStream.read" 
"FileOutputStream.<init>" -- "FileOutputStream.write" 
"FileOutputStream.<init>" -- "ZipInputStream.closeEntry" 
"FileOutputStream.<init>" -- "ZipInputStream.close" 
"FileOutputStream.<init>" -- "ZipEntry.<init>" 
"FileOutputStream.<init>" -- "ZipOutputStream.putNextEntry" 
"FileOutputStream.<init>" -- "File.getName" 
"FileOutputStream.<init>" -- "FileInputStream.read" 
"FileOutputStream.<init>" -- "ZipOutputStream.write" 
"FileOutputStream.<init>" -- "ZipOutputStream.<init>" 
"FileOutputStream.<init>" -- "ZipOutputStream.close" 
"FileOutputStream.<init>" -- "InputStream.read" 
"FileOutputStream.<init>" -- "FileOutputStream.getChannel" 
"FileOutputStream.<init>" -- "Object.toString" 
"FileOutputStream.<init>" -- "KeyStore.load" 
"FileOutputStream.<init>" -- "KeyStore.getDefaultType" 
"FileOutputStream.<init>" -- "KeyStore.getInstance" 
"FileOutputStream.<init>" -- "KeyStore.store" 
"FileOutputStream.<init>" -- "Font.<init>" 
"FileOutputStream.<init>" -- "File.createNewFile" 
"FileOutputStream.<init>" -- "Document.<init>" 
"FileOutputStream.<init>" -- "Document.add" 
"FileOutputStream.<init>" -- "Document.open" 
"FileOutputStream.<init>" -- "Document.close" 
"FileOutputStream.<init>" -- "Image.getInstance" 
"FileOutputStream.<init>" -- "Font.setStyle" 
"FileOutputStream.<init>" -- "Font.setSize" 
"FileOutputStream.<init>" -- "OutputStream.close" 
"FileOutputStream.<init>" -- "CachedRowSet.setUsername" 
"FileOutputStream.<init>" -- "CachedRowSet.setPassword" 
"FileOutputStream.<init>" -- "CachedRowSet.setUrl" 
"FileOutputStream.<init>" -- "CachedRowSet.setCommand" 
"FileOutputStream.<init>" -- "CachedRowSet.execute" 
"FileOutputStream.<init>" -- "CachedRowSet.addRowSetListener" 
"FileOutputStream.<init>" -- "CachedRowSet.next" 
"FileOutputStream.<init>" -- "CachedRowSet.getInt" 
"FileOutputStream.<init>" -- "CachedRowSet.deleteRow" 
"FileOutputStream.<init>" -- "WebRowSet.setUsername" 
"FileOutputStream.<init>" -- "WebRowSet.setPassword" 
"FileOutputStream.<init>" -- "WebRowSet.setUrl" 
"FileOutputStream.<init>" -- "WebRowSet.setCommand" 
"FileOutputStream.<init>" -- "WebRowSet.execute" 
"FileOutputStream.<init>" -- "WebRowSet.writeXml" 
"FileOutputStream.<init>" -- "RowSetProvider.newFactory" 
"FileOutputStream.<init>" -- "RowSetFactory.createFilteredRowSet" 
"FileOutputStream.<init>" -- "ResultSetMetaData.getColumnCount" 
"FileOutputStream.<init>" -- "ResultSetMetaData.getColumnLabel" 
"FileOutputStream.<init>" -- "BufferedOutputStream.<init>" 
"FileOutputStream.<init>" -- "BufferedOutputStream.write" 
"FileOutputStream.<init>" -- "BufferedOutputStream.close" 
"FileOutputStream.<init>" -- "FileOutputStream.flush" 
"FileInputStream.<init>" -- "Cell.getNumericCellValue" 
"FileInputStream.<init>" -- "Cell.getBooleanCellValue" 
"FileInputStream.<init>" -- "Object.<init>" 
"FileInputStream.<init>" -- "Row.getCell" 
"FileInputStream.<init>" -- "Cell.getCellType" 
"FileInputStream.<init>" -- "Cell.getStringCellValue" 
"FileInputStream.<init>" -- "Cell.getCachedFormulaResultType" 
"FileInputStream.<init>" -- "FileOutputStream.close" 
"FileInputStream.<init>" -- "Rectangle.<init>" 
"FileInputStream.<init>" -- "Color.<init>" 
"FileInputStream.<init>" -- "ClassLoader.getResource" 
"FileInputStream.<init>" -- "FileInputStream.close" 
"FileInputStream.<init>" -- "ZipInputStream.<init>" 
"FileInputStream.<init>" -- "ZipInputStream.getNextEntry" 
"FileInputStream.<init>" -- "ZipInputStream.read" 
"FileInputStream.<init>" -- "FileOutputStream.write" 
"FileInputStream.<init>" -- "ZipInputStream.closeEntry" 
"FileInputStream.<init>" -- "ZipInputStream.close" 
"FileInputStream.<init>" -- "File.isHidden" 
"FileInputStream.<init>" -- "File.isDirectory" 
"FileInputStream.<init>" -- "String.endsWith" 
"FileInputStream.<init>" -- "ZipEntry.<init>" 
"FileInputStream.<init>" -- "ZipOutputStream.putNextEntry" 
"FileInputStream.<init>" -- "ZipOutputStream.closeEntry" 
"FileInputStream.<init>" -- "File.listFiles" 
"FileInputStream.<init>" -- "File.getName" 
"FileInputStream.<init>" -- "FileInputStream.read" 
"FileInputStream.<init>" -- "ZipOutputStream.write" 
"FileInputStream.<init>" -- "ZipOutputStream.<init>" 
"FileInputStream.<init>" -- "ZipOutputStream.close" 
"FileInputStream.<init>" -- "File.length" 
"FileInputStream.<init>" -- "KeyStore.getCertificate" 
"FileInputStream.<init>" -- "KeyStore.load" 
"FileInputStream.<init>" -- "KeyStore.getInstance" 
"FileInputStream.<init>" -- "QName.<init>" 
"FileInputStream.<init>" -- "Certificate.getPublicKey" 
"FileInputStream.<init>" -- "KeyStore.getKey" 
"FileInputStream.<init>" -- "PrivateKey.cast" 
"FileInputStream.<init>" -- "Document.<init>" 
"FileInputStream.<init>" -- "Document.open" 
"FileInputStream.<init>" -- "Document.close" 
"FileInputStream.<init>" -- "Map<Integer,List>.values" 
"FileInputStream.<init>" -- "MediaType.parseMediaType" 
"FileInputStream.<init>" -- "XPath.selectNodes" 
"FileInputStream.<init>" -- "XPathFactory.newInstance" 
"FileInputStream.<init>" -- "NodeList.cast" 
"FileInputStream.<init>" -- "DocumentBuilderFactory.newInstance" 
"FileInputStream.<init>" -- "DocumentBuilderFactory.newDocumentBuilder" 
"FileInputStream.<init>" -- "DocumentBuilder.parse" 
"FileInputStream.<init>" -- "XPath.compile" 
"FileInputStream.<init>" -- "XMLInputFactory.newInstance" 
"FileInputStream.<init>" -- "XMLInputFactory.createXMLEventReader" 
"FileInputStream.<init>" -- "XMLEventReader.hasNext" 
"FileInputStream.<init>" -- "XMLEventReader.nextEvent" 
"FileInputStream.<init>" -- "XMLEvent.isStartElement" 
"FileInputStream.<init>" -- "XMLEvent.asStartElement" 
"FileInputStream.<init>" -- "StartElement.getName" 
"FileInputStream.<init>" -- "StartElement.getAttributeByName" 
"FileInputStream.<init>" -- "XMLEvent.asCharacters" 
"FileInputStream.<init>" -- "XMLEvent.isEndElement" 
"FileInputStream.<init>" -- "XMLEvent.asEndElement" 
"FileInputStream.<init>" -- "EndElement.getName" 
"Cell.getCellTypeEnum" -- "Cell.getDateCellValue" 
"Cell.getCellTypeEnum" -- "Cell.getNumericCellValue" 
"Cell.getCellTypeEnum" -- "Cell.getBooleanCellValue" 
"Cell.getCellTypeEnum" -- "Cell.getCellFormula" 
"Cell.getCellTypeEnum" -- "Cell.getStringCellValue" 
"Cell.getDateCellValue" -- "Cell.getNumericCellValue" 
"Cell.getDateCellValue" -- "Cell.getBooleanCellValue" 
"Cell.getDateCellValue" -- "Cell.getCellFormula" 
"Cell.getDateCellValue" -- "Cell.getStringCellValue" 
"Cell.getNumericCellValue" -- "Cell.getBooleanCellValue" 
"Cell.getNumericCellValue" -- "Cell.getCellFormula" 
"Cell.getNumericCellValue" -- "Object.<init>" 
"Cell.getNumericCellValue" -- "Row.getCell" 
"Cell.getNumericCellValue" -- "Cell.getCellType" 
"Cell.getNumericCellValue" -- "Cell.getStringCellValue" 
"Cell.getNumericCellValue" -- "Cell.getCachedFormulaResultType" 
"Cell.getBooleanCellValue" -- "Cell.getCellFormula" 
"Cell.getBooleanCellValue" -- "Object.<init>" 
"Cell.getBooleanCellValue" -- "Row.getCell" 
"Cell.getBooleanCellValue" -- "Cell.getCellType" 
"Cell.getBooleanCellValue" -- "Cell.getStringCellValue" 
"Cell.getBooleanCellValue" -- "Cell.getCachedFormulaResultType" 
"Cell.getCellFormula" -- "Cell.getStringCellValue" 
"Object.<init>" -- "Row.getCell" 
"Object.<init>" -- "Cell.getCellType" 
"Object.<init>" -- "Cell.getStringCellValue" 
"Object.<init>" -- "Cell.getCachedFormulaResultType" 
"Object.<init>" -- "List<Object>.add" 
"Object.<init>" -- "List<Object>.size" 
"Row.getCell" -- "Cell.getCellType" 
"Row.getCell" -- "Cell.getStringCellValue" 
"Row.getCell" -- "Cell.getCachedFormulaResultType" 
"Cell.getCellType" -- "Cell.getStringCellValue" 
"Cell.getCellType" -- "Cell.getCachedFormulaResultType" 
"Cell.getStringCellValue" -- "Cell.getCachedFormulaResultType" 
"FileOutputStream.close" -- "Rectangle.<init>" 
"FileOutputStream.close" -- "Color.<init>" 
"FileOutputStream.close" -- "ClassLoader.getResource" 
"FileOutputStream.close" -- "ClassLoader.getSystemResource" 
"FileOutputStream.close" -- "Paths.get" 
"FileOutputStream.close" -- "Path.getFileName" 
"FileOutputStream.close" -- "Files.newInputStream" 
"FileOutputStream.close" -- "ObjectOutputStream.<init>" 
"FileOutputStream.close" -- "ObjectOutputStream.writeObject" 
"FileOutputStream.close" -- "ObjectOutputStream.close" 
"FileOutputStream.close" -- "InputStream.close" 
"FileOutputStream.close" -- "FileInputStream.close" 
"FileOutputStream.close" -- "ZipInputStream.<init>" 
"FileOutputStream.close" -- "ZipInputStream.getNextEntry" 
"FileOutputStream.close" -- "ZipInputStream.read" 
"FileOutputStream.close" -- "FileOutputStream.write" 
"FileOutputStream.close" -- "ZipInputStream.closeEntry" 
"FileOutputStream.close" -- "ZipInputStream.close" 
"FileOutputStream.close" -- "ZipEntry.<init>" 
"FileOutputStream.close" -- "ZipOutputStream.putNextEntry" 
"FileOutputStream.close" -- "File.getName" 
"FileOutputStream.close" -- "FileInputStream.read" 
"FileOutputStream.close" -- "ZipOutputStream.write" 
"FileOutputStream.close" -- "ZipOutputStream.<init>" 
"FileOutputStream.close" -- "ZipOutputStream.close" 
"FileOutputStream.close" -- "InputStream.read" 
"FileOutputStream.close" -- "Object.toString" 
"FileOutputStream.close" -- "KeyStore.load" 
"FileOutputStream.close" -- "KeyStore.getDefaultType" 
"FileOutputStream.close" -- "KeyStore.getInstance" 
"FileOutputStream.close" -- "KeyStore.store" 
"FileOutputStream.close" -- "FileOutputStream.flush" 
"Rectangle.<init>" -- "Color.<init>" 
"Rectangle.<init>" -- "ClassLoader.getResource" 
"Rectangle.<init>" -- "Toolkit.getDefaultToolkit" 
"Rectangle.<init>" -- "Robot.<init>" 
"Rectangle.<init>" -- "Robot.createScreenCapture" 
"Rectangle.<init>" -- "ImageIO.write" 
"Color.<init>" -- "ClassLoader.getResource" 
"ClassLoader.getResource" -- "FileReader.<init>" 
"ClassLoader.getSystemResource" -- "Paths.get" 
"ClassLoader.getSystemResource" -- "Path.getFileName" 
"ClassLoader.getSystemResource" -- "Files.newInputStream" 
"ClassLoader.getSystemResource" -- "Files.newBufferedReader" 
"ClassLoader.getSystemResource" -- "Image.getInstance" 
"ClassLoader.getSystemResource" -- "Path.toAbsolutePath" 
"ClassLoader.getSystemResource" -- "Image.scalePercent" 
"Paths.get" -- "Path.getFileName" 
"Paths.get" -- "Files.newInputStream" 
"Paths.get" -- "Path.toString" 
"Paths.get" -- "UUID.randomUUID" 
"Paths.get" -- "BitSet.<init>" 
"Paths.get" -- "Files.write" 
"Paths.get" -- "FileReader.<init>" 
"Paths.get" -- "MessageDigest.getInstance" 
"Paths.get" -- "MessageDigest.digest" 
"Paths.get" -- "URI.<init>" 
"Paths.get" -- "List<URI>.stream" 
"Paths.get" -- "List<String>.stream" 
"Paths.get" -- "System.getProperty" 
"Paths.get" -- "ArrayList<String>.cast" 
"Paths.get" -- "Files.readAllLines" 
"Paths.get" -- "Objects.requireNonNull" 
"Paths.get" -- "File.getName" 
"Paths.get" -- "Files.isDirectory" 
"Paths.get" -- "SimpleFileVisitor<Path>.<init>" 
"Paths.get" -- "Files.walkFileTree" 
"Paths.get" -- "Files.walk" 
"Paths.get" -- "Files.copy" 
"Paths.get" -- "String.indexOf" 
"Paths.get" -- "Files.lines" 
"Paths.get" -- "Charset.defaultCharset" 
"Paths.get" -- "Files.delete" 
"Paths.get" -- "FileSystems.getDefault" 
"Paths.get" -- "Path.register" 
"Paths.get" -- "WatchService.take" 
"Paths.get" -- "WatchKey.pollEvents" 
"Paths.get" -- "WatchEvent.context" 
"Paths.get" -- "WatchEvent.kind" 
"Paths.get" -- "WatchKey.reset" 
"Paths.get" -- "WatchService.close" 
"Paths.get" -- "ManagementFactory.getThreadMXBean" 
"Paths.get" -- "ThreadMXBean.dumpAllThreads" 
"Paths.get" -- "ThreadInfo.toString" 
"Paths.get" -- "KeyStore.aliases" 
"Paths.get" -- "Enumeration<String>.hasMoreElements" 
"Paths.get" -- "Enumeration<String>.nextElement" 
"Paths.get" -- "KeyStore.deleteEntry" 
"Paths.get" -- "Files.readAllBytes" 
"Paths.get" -- "File.getPath" 
"Paths.get" -- "Files.newBufferedReader" 
"Paths.get" -- "Utils.getPrivateKey" 
"Paths.get" -- "Utils.getPublicKey" 
"Paths.get" -- "Signature.getInstance" 
"Paths.get" -- "Signature.initSign" 
"Paths.get" -- "Signature.update" 
"Paths.get" -- "Signature.sign" 
"Paths.get" -- "Signature.initVerify" 
"Paths.get" -- "Signature.verify" 
"Paths.get" -- "Document.<init>" 
"Paths.get" -- "TextField.<init>" 
"Paths.get" -- "Document.add" 
"Paths.get" -- "Path.toFile" 
"Paths.get" -- "Image.getInstance" 
"Paths.get" -- "Path.toAbsolutePath" 
"Paths.get" -- "Image.scalePercent" 
"Paths.get" -- "Path.normalize" 
"Path.getFileName" -- "Files.newInputStream" 
"Path.getFileName" -- "Path.toString" 
"Path.getFileName" -- "Files.isDirectory" 
"Path.getFileName" -- "SimpleFileVisitor<Path>.<init>" 
"Path.getFileName" -- "Files.walkFileTree" 
"Subject.hasRole" -- "Subject.isPermitted" 
"Subject.hasRole" -- "Subject.getPrincipal" 
"Subject.isPermitted" -- "Subject.getPrincipal" 
"Subject.isAuthenticated" -- "Subject.login" 
"Map<String,Set<String>>.containsKey" -- "Map<String,Set<String>>.get" 
"Map<String,String>.containsKey" -- "Map<String,String>.get" 
"Map<String,String>.containsKey" -- "Map<String,String>.put" 
"Map<String,String>.containsKey" -- "ConcurrentHashMap.<init>" 
"Map<String,String>.containsKey" -- "Lock.lock" 
"Map<String,String>.containsKey" -- "Lock.unlock" 
"Map<String,String>.containsKey" -- "Long.valueOf" 
"Map<String,String>.containsKey" -- "Collections.emptySet" 
"Map<String,String>.get" -- "ReentrantLock.lock" 
"Map<String,String>.get" -- "ReentrantLock.unlock" 
"Map<String,String>.get" -- "StampedLock.tryOptimisticRead" 
"Map<String,String>.get" -- "StampedLock.validate" 
"Map<String,String>.get" -- "StampedLock.readLock" 
"Map<String,String>.get" -- "StampedLock.unlock" 
"Map<String,String>.get" -- "StampedLock.unlockRead" 
"Map<String,String>.get" -- "Lock.lock" 
"Map<String,String>.get" -- "Lock.unlock" 
"Map<String,String>.get" -- "Integer.valueOf" 
"Map<String,String>.get" -- "Long.valueOf" 
"Map<String,String>.get" -- "Book.setAuthor" 
"Map<String,String>.get" -- "Boolean.valueOf" 
"Map<String,String>.get" -- "Collections.emptySet" 
"Map<String,String>.get" -- "Map<String,String>.keySet" 
"Map<String,String>.get" -- "Book.setTitle" 
"Map<String,String>.get" -- "Map<String,Map<String,String>>.get" 
"Map<String,String>.get" -- "Set<String>.iterator" 
"Map<String,String>.get" -- "Document.createElement" 
"Map<String,String>.get" -- "Element.setTextContent" 
"Map<String,String>.get" -- "Element.appendChild" 
"Map<String,String>.get" -- "XMLOutputFactory.newInstance" 
"Map<String,String>.get" -- "XMLStreamWriter.writeDTD" 
"Map<String,String>.get" -- "XMLStreamWriter.writeCharacters" 
"Map<String,String>.get" -- "XMLStreamWriter.writeStartElement" 
"Map<String,String>.get" -- "XMLStreamWriter.writeAttribute" 
"Map<String,String>.get" -- "XMLStreamWriter.writeEndElement" 
"Map<String,String>.get" -- "XMLStreamWriter.writeEndDocument" 
"Map<String,String>.get" -- "XMLStreamWriter.flush" 
"Map<String,Integer>.keySet" -- "Map<String,Integer>.get" 
"Map<String,Integer>.get" -- "HashMap<String,Integer>.<init>" 
"Map<String,Integer>.get" -- "Map<String,Integer>.put" 
"Relationship.<init>" -- "List<Relationship>.add" 
"Files.createTempDirectory" -- "Path.toString" 
"Path.toString" -- "BufferedReader.<init>" 
"Path.toString" -- "FileReader.<init>" 
"Path.toString" -- "BufferedReader.readLine" 
"Path.toString" -- "BufferedReader.close" 
"Path.toString" -- "FileReader.close" 
"Path.toString" -- "FileWriter.<init>" 
"Path.toString" -- "Writer.close" 
"Path.toString" -- "Path.normalize" 
"Relationship.getDst" -- "Relationship.getType" 
"Relationship.getDst" -- "Relationship.getSrc" 
"Relationship.getType" -- "Relationship.getSrc" 
"UUID.toString" -- "Instant.toString" 
"UUID.randomUUID" -- "Date.<init>" 
"UUID.randomUUID" -- "MediaType.toString" 
"UUID.randomUUID" -- "Product.<init>" 
"UUID.randomUUID" -- "Connection.createStatement" 
"UUID.randomUUID" -- "Statement.executeUpdate" 
"UUID.randomUUID" -- "Properties.<init>" 
"UUID.randomUUID" -- "Long.<init>" 
"UUID.randomUUID" -- "Validator.validate" 
"UUID.randomUUID" -- "Set<>.size" 
"UUID.randomUUID" -- "Properties.load" 
"UUID.randomUUID" -- "Properties.getProperty" 
"UUID.randomUUID" -- "PreparedStatement.setString" 
"UUID.randomUUID" -- "PreparedStatement.executeUpdate" 
"UUID.randomUUID" -- "Statement.executeQuery" 
"UUID.randomUUID" -- "ResultSet.next" 
"UUID.randomUUID" -- "ResultSet.getString" 
"UUID.randomUUID" -- "HashMap<String,String>.<init>" 
"UUID.randomUUID" -- "Map<String,String>.put" 
"UUID.randomUUID" -- "String.toString" 
"UUID.randomUUID" -- "Files.write" 
"UUID.randomUUID" -- "MessageDigest.getInstance" 
"UUID.randomUUID" -- "MessageDigest.update" 
"UUID.randomUUID" -- "MessageDigest.digest" 
"UUID.randomUUID" -- "Random.nextLong" 
"UUID.randomUUID" -- "BlockingQueue.put" 
"UUID.randomUUID" -- "Instant.plus" 
"UUID.randomUUID" -- "Date.from" 
"UUID.randomUUID" -- "Message.setFrom" 
"UUID.randomUUID" -- "Instant.now" 
"UUID.randomUUID" -- "Observable.from" 
"UUID.randomUUID" -- "Message.<init>" 
"UUID.randomUUID" -- "Connection.prepareStatement" 
"UUID.randomUUID" -- "Builder.issuer" 
"UUID.randomUUID" -- "PreparedStatement.addBatch" 
"UUID.randomUUID" -- "PreparedStatement.executeBatch" 
"UUID.randomUUID" -- "Connection.commit" 
"UUID.randomUUID" -- "Connection.rollback" 
"UUID.randomUUID" -- "Statement.addBatch" 
"UUID.randomUUID" -- "Statement.executeBatch" 
"UUID.randomUUID" -- "Message.setText" 
"UUID.randomUUID" -- "Message.setTo" 
"UUID.randomUUID" -- "Message.setDate" 
"UUID.randomUUID" -- "Message.setId" 
"Long.toString" -- "String.getBytes" 
"Long.toString" -- "MessageDigest.getInstance" 
"Long.toString" -- "MessageDigest.digest" 
"Long.toString" -- "Page.getTotalElements" 
"Long.toString" -- "Page.getTotalPages" 
"Long.toString" -- "Page.getNumber" 
"Long.toString" -- "Page.getSize" 
"Long.toString" -- "LongAdder.sum" 
"HashMap<String,Integer>.<init>" -- "Map<String,Integer>.put" 
"Map<String,Integer>.put" -- "Builder.withDetail" 
"Date.<init>" -- "PreparedStatement.setString" 
"Date.<init>" -- "SimpleDateFormat.<init>" 
"Date.<init>" -- "Calendar.getInstance" 
"Date.<init>" -- "SimpleDateFormat.format" 
"Date.<init>" -- "String.getBytes" 
"Date.<init>" -- "List<Locale>.forEach" 
"Date.<init>" -- "LocalDate.now" 
"Date.<init>" -- "LocalTime.now" 
"Date.<init>" -- "ThreadLocalRandom.current" 
"Date.<init>" -- "Date.getTime" 
"Date.<init>" -- "Date.before" 
"Date.<init>" -- "SimpleDateFormat.parse" 
"Date.<init>" -- "HashSet<Integer>.<init>" 
"Date.<init>" -- "ArrayList<Integer>.<init>" 
"Date.<init>" -- "ExecutorService.execute" 
"Date.<init>" -- "AtomicBoolean.get" 
"Date.<init>" -- "DateFormat.format" 
"Date.<init>" -- "Date.valueOf" 
"Date.<init>" -- "Timestamp.valueOf" 
"Date.<init>" -- "Time.valueOf" 
"Date.<init>" -- "DateFormat.parse" 
"Date.<init>" -- "OffsetDateTime.now" 
"Date.<init>" -- "OffsetTime.now" 
"Date.<init>" -- "Instant.now" 
"Date.<init>" -- "Locale.getDefault" 
"Date.<init>" -- "Event.fire" 
"Date.<init>" -- "File.createNewFile" 
"Date.<init>" -- "Connection.prepareStatement" 
"Date.<init>" -- "Set<String>.containsAll" 
"Date.<init>" -- "PreparedStatement.addBatch" 
"Date.<init>" -- "PreparedStatement.executeBatch" 
"Date.<init>" -- "ThreadLocal<SimpleDateFormat>.get" 
"Date.<init>" -- "Channel.<init>" 
"Date.<init>" -- "Channel.setLink" 
"Date.<init>" -- "Channel.setTitle" 
"Date.<init>" -- "Channel.setDescription" 
"Date.<init>" -- "Channel.setPubDate" 
"Date.<init>" -- "Message.getFrom" 
"Date.<init>" -- "Message.getText" 
"Date.<init>" -- "BufferedOutputStream.<init>" 
"Date.<init>" -- "BufferedOutputStream.write" 
"Date.<init>" -- "BufferedOutputStream.close" 
"Date.<init>" -- "Message.getTo" 
"Date.<init>" -- "Channel.setItems" 
"Date.<init>" -- "PreparedStatement.setDate" 
"Date.<init>" -- "List<ArrayList<Integer>>.size" 
"Date.<init>" -- "List<ArrayList<Integer>>.get" 
"Date.<init>" -- "ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.get" 
"Date.<init>" -- "ConcurrentHashMap<Integer,Integer>.<init>" 
"Date.<init>" -- "ConcurrentHashMap<Integer,Integer>.get" 
"Date.<init>" -- "ConcurrentHashMap<Integer,Integer>.put" 
"Date.<init>" -- "ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.put" 
"Date.<init>" -- "DateFormat.getDateTimeInstance" 
"BitSet.get" -- "ThreadLocalRandom.current" 
"BitSet.<init>" -- "BitSet.set" 
"BitSet.<init>" -- "ThreadLocalRandom.current" 
"BitSet.set" -- "ThreadLocalRandom.current" 
"List.cast" -- "ExecutorService.shutdown" 
"List.cast" -- "Executors.newSingleThreadExecutor" 
"List.cast" -- "Query.getResultList" 
"List.cast" -- "Query.execute" 
"List.cast" -- "Iterator<Product>.hasNext" 
"List.cast" -- "Iterator<Product>.next" 
"List.cast" -- "Query.setParameters" 
"List.cast" -- "Builder.setInitialIntervalMillis" 
"List.cast" -- "Future.get" 
"List.cast" -- "Provider.get" 
"MediaType.toString" -- "HashMap<String,String>.<init>" 
"MediaType.toString" -- "Map<String,String>.put" 
"MediaType.toString" -- "String.toString" 
"Product.<init>" -- "Collections.singletonList" 
"Product.<init>" -- "HashMap<String,Product>.compute" 
"Product.<init>" -- "HashMap<String,Product>.containsKey" 
"Product.<init>" -- "HashMap<String,Product>.get" 
"Product.<init>" -- "HashMap<String,Product>.put" 
"Product.<init>" -- "Product.getTags" 
"Product.<init>" -- "HashMap<String,Product>.merge" 
"Product.<init>" -- "HashMap<String,Product>.putIfAbsent" 
"Product.<init>" -- "HashMap<String,Product>.getOrDefault" 
"Product.<init>" -- "Instant.now" 
"Product.<init>" -- "List<Product>.remove" 
"Product.<init>" -- "List<Product>.forEach" 
"Product.<init>" -- "Optional.ifPresent" 
"Product.<init>" -- "Product.fromMap" 
"Product.<init>" -- "Product.saveIt" 
"Product.<init>" -- "Product.get" 
"Product.<init>" -- "Product.getSku" 
"Product.<init>" -- "Product.setSku" 
"Context.put" -- "Context.get" 
"HashMap<String,Object>.<init>" -- "Environment.getProperty" 
"HashMap<String,Object>.<init>" -- "HashMap<String,Object>.put" 
"HashMap<String,Object>.<init>" -- "Map<String,Object>.putAll" 
"HashMap<String,Object>.<init>" -- "MultiValueMap<String,Object>.add" 
"HashMap<String,Object>.<init>" -- "MultiValueMap.add" 
"ClassFileTransformer.<init>" -- "Instrumentation.addTransformer" 
"Instrumentation.addTransformer" -- "Class.getName" 
"Instrumentation.addTransformer" -- "Instrumentation.retransformClasses" 
"DataSource.getConnection" -- "InitialContext.<init>" 
"DataSource.getConnection" -- "Context.lookup" 
"DataSource.getConnection" -- "DataSource.cast" 
"Connection.createStatement" -- "Statement.executeUpdate" 
"Connection.createStatement" -- "Statement.executeQuery" 
"Connection.createStatement" -- "ResultSet.next" 
"Connection.createStatement" -- "ResultSet.getString" 
"Connection.createStatement" -- "Connection.commit" 
"Connection.createStatement" -- "Connection.rollback" 
"Connection.createStatement" -- "Statement.addBatch" 
"Connection.createStatement" -- "Statement.executeBatch" 
"Connection.createStatement" -- "CachedRowSet.setUsername" 
"Connection.createStatement" -- "CachedRowSet.setPassword" 
"Connection.createStatement" -- "CachedRowSet.setUrl" 
"Connection.createStatement" -- "CachedRowSet.setCommand" 
"Connection.createStatement" -- "CachedRowSet.execute" 
"Connection.createStatement" -- "CachedRowSet.addRowSetListener" 
"Connection.createStatement" -- "CachedRowSet.next" 
"Connection.createStatement" -- "CachedRowSet.getInt" 
"Connection.createStatement" -- "CachedRowSet.deleteRow" 
"Connection.createStatement" -- "WebRowSet.setUsername" 
"Connection.createStatement" -- "WebRowSet.setPassword" 
"Connection.createStatement" -- "WebRowSet.setUrl" 
"Connection.createStatement" -- "WebRowSet.setCommand" 
"Connection.createStatement" -- "WebRowSet.execute" 
"Connection.createStatement" -- "WebRowSet.writeXml" 
"Connection.createStatement" -- "RowSetProvider.newFactory" 
"Connection.createStatement" -- "RowSetFactory.createFilteredRowSet" 
"Connection.createStatement" -- "ResultSetMetaData.getColumnCount" 
"Connection.createStatement" -- "ResultSetMetaData.getColumnLabel" 
"Connection.createStatement" -- "ResultSet.getInt" 
"Connection.createStatement" -- "ResultSet.first" 
"Connection.createStatement" -- "Statement.execute" 
"Statement.executeUpdate" -- "Properties.<init>" 
"Statement.executeUpdate" -- "Properties.load" 
"Statement.executeUpdate" -- "Properties.getProperty" 
"Statement.executeUpdate" -- "PreparedStatement.setString" 
"Statement.executeUpdate" -- "PreparedStatement.executeUpdate" 
"Statement.executeUpdate" -- "Statement.executeQuery" 
"Statement.executeUpdate" -- "ResultSet.next" 
"Statement.executeUpdate" -- "ResultSet.getString" 
"Statement.executeUpdate" -- "CachedRowSet.setUsername" 
"Statement.executeUpdate" -- "CachedRowSet.setPassword" 
"Statement.executeUpdate" -- "CachedRowSet.setUrl" 
"Statement.executeUpdate" -- "CachedRowSet.setCommand" 
"Statement.executeUpdate" -- "CachedRowSet.execute" 
"Statement.executeUpdate" -- "CachedRowSet.addRowSetListener" 
"Statement.executeUpdate" -- "CachedRowSet.next" 
"Statement.executeUpdate" -- "CachedRowSet.getInt" 
"Statement.executeUpdate" -- "CachedRowSet.deleteRow" 
"Statement.executeUpdate" -- "WebRowSet.setUsername" 
"Statement.executeUpdate" -- "WebRowSet.setPassword" 
"Statement.executeUpdate" -- "WebRowSet.setUrl" 
"Statement.executeUpdate" -- "WebRowSet.setCommand" 
"Statement.executeUpdate" -- "WebRowSet.execute" 
"Statement.executeUpdate" -- "WebRowSet.writeXml" 
"Statement.executeUpdate" -- "RowSetProvider.newFactory" 
"Statement.executeUpdate" -- "RowSetFactory.createFilteredRowSet" 
"Statement.executeUpdate" -- "ResultSetMetaData.getColumnCount" 
"Statement.executeUpdate" -- "ResultSetMetaData.getColumnLabel" 
"Connection.close" -- "PreparedStatement.executeUpdate" 
"Connection.close" -- "ResultSet.next" 
"Connection.close" -- "String.getBytes" 
"Connection.close" -- "PreparedStatement.executeQuery" 
"Connection.close" -- "Connection.prepareStatement" 
"Connection.close" -- "List<Connection>.forEach" 
"Connection.close" -- "List<Connection>.clear" 
"Connection.close" -- "ResultSet.getInt" 
"Connection.close" -- "Connection.createChannel" 
"Connection.close" -- "Channel.queueDeclare" 
"Connection.close" -- "Channel.basicPublish" 
"Connection.close" -- "Channel.close" 
"Connection.close" -- "Connection.start" 
"Connection.close" -- "Connection.createSession" 
"Connection.close" -- "PreparedStatement.close" 
"Properties.<init>" -- "Properties.put" 
"Properties.<init>" -- "Properties.load" 
"Properties.<init>" -- "Properties.getProperty" 
"Properties.<init>" -- "PreparedStatement.setString" 
"Properties.<init>" -- "PreparedStatement.executeUpdate" 
"Properties.<init>" -- "Statement.executeQuery" 
"Properties.<init>" -- "ResultSet.next" 
"Properties.<init>" -- "ResultSet.getString" 
"Properties.<init>" -- "InputStreamReader.<init>" 
"Properties.<init>" -- "BufferedReader.<init>" 
"Properties.<init>" -- "InitialContext.<init>" 
"Properties.<init>" -- "InputStream.close" 
"Properties.<init>" -- "Class.forName" 
"Properties.<init>" -- "DriverManager.getConnection" 
"Properties.<init>" -- "Authenticator.<init>" 
"Properties.<init>" -- "PasswordAuthentication.<init>" 
"Properties.<init>" -- "Message.setFrom" 
"Properties.<init>" -- "Message.setRecipients" 
"Properties.<init>" -- "Message.setSubject" 
"Properties.<init>" -- "Message.setContent" 
"Properties.<init>" -- "Environment.getProperty" 
"Properties.<init>" -- "Properties.setProperty" 
"Properties.put" -- "InitialContext.<init>" 
"Properties.put" -- "Class.forName" 
"Properties.put" -- "DriverManager.getConnection" 
"Properties.put" -- "Authenticator.<init>" 
"Properties.put" -- "PasswordAuthentication.<init>" 
"Properties.put" -- "Message.setFrom" 
"Properties.put" -- "Message.setRecipients" 
"Properties.put" -- "Message.setSubject" 
"Properties.put" -- "Message.setContent" 
"Long.<init>" -- "Validator.validate" 
"Long.<init>" -- "Set<>.size" 
"Validator.validate" -- "Set<>.size" 
"Validator.validate" -- "Set<<Member>>.isEmpty" 
"Validator.validate" -- "HashSet<>.<init>" 
"Validator.validate" -- "Member.getEmail" 
"Validator.validate" -- "ServerRequest.bodyToMono" 
"Validator.validate" -- "Objects.nonNull" 
"Validator.validate" -- "Result.include" 
"Validator.validate" -- "Result.redirectTo" 
"Validator.validate" -- "Validator.hasErrors" 
"Validator.validate" -- "Validator.getErrors" 
"Validator.validate" -- "Validator.onErrorRedirectTo" 
"Set<>.size" -- "Map<String,String>.put" 
"Storage.builder" -- "CompletableFuture.join" 
"Storage.builder" -- "WorkerThread.<init>" 
"Storage.builder" -- "WorkerThread.run" 
"WorkerThread.<init>" -- "WorkerThread.run" 
"ParameterizedType.cast" -- "ParameterizedType.getActualTypeArguments" 
"ParameterizedType.cast" -- "Class.cast" 
"ParameterizedType.cast" -- "ParameterizedType.instance" 
"ParameterizedType.cast" -- "Type.equals" 
"ParameterizedType.getActualTypeArguments" -- "Class.cast" 
"ParameterizedType.getActualTypeArguments" -- "ParameterizedType.instance" 
"ParameterizedType.getActualTypeArguments" -- "Type.equals" 
"Class.cast" -- "ScriptEngine.eval" 
"Class.cast" -- "FileReader.<init>" 
"Class.cast" -- "Class.newInstance" 
"Class.cast" -- "Consumer.accept" 
"Class.cast" -- "Class.isInstance" 
"Properties.load" -- "Properties.getProperty" 
"Properties.load" -- "PreparedStatement.setString" 
"Properties.load" -- "PreparedStatement.executeUpdate" 
"Properties.load" -- "Statement.executeQuery" 
"Properties.load" -- "ResultSet.next" 
"Properties.load" -- "ResultSet.getString" 
"Properties.load" -- "InputStreamReader.<init>" 
"Properties.load" -- "BufferedReader.<init>" 
"Properties.load" -- "InputStream.close" 
"Properties.getProperty" -- "PreparedStatement.setString" 
"Properties.getProperty" -- "PreparedStatement.executeUpdate" 
"Properties.getProperty" -- "Statement.executeQuery" 
"Properties.getProperty" -- "ResultSet.next" 
"Properties.getProperty" -- "ResultSet.getString" 
"Properties.getProperty" -- "Class.forName" 
"Properties.getProperty" -- "DriverManager.getConnection" 
"PreparedStatement.setString" -- "PreparedStatement.executeUpdate" 
"PreparedStatement.setString" -- "Statement.executeQuery" 
"PreparedStatement.setString" -- "ResultSet.next" 
"PreparedStatement.setString" -- "ResultSet.getString" 
"PreparedStatement.setString" -- "Calendar.getInstance" 
"PreparedStatement.setString" -- "Objects.isNull" 
"PreparedStatement.setString" -- "PreparedStatement.executeQuery" 
"PreparedStatement.setString" -- "PreparedStatement.execute" 
"PreparedStatement.setString" -- "Connection.prepareStatement" 
"PreparedStatement.setString" -- "PreparedStatement.setLong" 
"PreparedStatement.setString" -- "PreparedStatement.setBoolean" 
"PreparedStatement.setString" -- "PreparedStatement.addBatch" 
"PreparedStatement.setString" -- "PreparedStatement.executeBatch" 
"PreparedStatement.setString" -- "Connection.commit" 
"PreparedStatement.setString" -- "Connection.rollback" 
"PreparedStatement.setString" -- "PreparedStatement.setInt" 
"PreparedStatement.setString" -- "PreparedStatement.setNull" 
"PreparedStatement.setString" -- "UUID.fromString" 
"PreparedStatement.setString" -- "PreparedStatement.setDate" 
"PreparedStatement.executeUpdate" -- "Statement.executeQuery" 
"PreparedStatement.executeUpdate" -- "ResultSet.next" 
"PreparedStatement.executeUpdate" -- "ResultSet.getString" 
"PreparedStatement.executeUpdate" -- "PreparedStatement.executeQuery" 
"PreparedStatement.executeUpdate" -- "Connection.prepareStatement" 
"PreparedStatement.executeUpdate" -- "PreparedStatement.setLong" 
"PreparedStatement.executeUpdate" -- "PreparedStatement.setBoolean" 
"PreparedStatement.executeUpdate" -- "ResultSet.getInt" 
"PreparedStatement.executeUpdate" -- "PreparedStatement.setInt" 
"PreparedStatement.executeUpdate" -- "PreparedStatement.close" 
"Statement.executeQuery" -- "ResultSet.next" 
"Statement.executeQuery" -- "ResultSet.getString" 
"Statement.executeQuery" -- "ResultSet.getInt" 
"Statement.executeQuery" -- "ResultSet.first" 
"ResultSet.next" -- "ResultSet.getString" 
"ResultSet.next" -- "PreparedStatement.executeQuery" 
"ResultSet.next" -- "Connection.prepareStatement" 
"ResultSet.next" -- "DatabaseMetaData.getUserName" 
"ResultSet.next" -- "DatabaseMetaData.getSchemas" 
"ResultSet.next" -- "DatabaseMetaData.getImportedKeys" 
"ResultSet.next" -- "DatabaseMetaData.getPrimaryKeys" 
"ResultSet.next" -- "DatabaseMetaData.getColumns" 
"ResultSet.next" -- "DatabaseMetaData.getTables" 
"ResultSet.next" -- "ResultSet.getInt" 
"ResultSet.next" -- "ResultSet.getLong" 
"ResultSet.next" -- "ResultSet.getBigDecimal" 
"ResultSet.next" -- "PreparedStatement.close" 
"ResultSet.getString" -- "Book.<init>" 
"ResultSet.getString" -- "PreparedStatement.executeQuery" 
"ResultSet.getString" -- "Book.setId" 
"ResultSet.getString" -- "Book.setAuthor" 
"ResultSet.getString" -- "Connection.prepareStatement" 
"ResultSet.getString" -- "DatabaseMetaData.getUserName" 
"ResultSet.getString" -- "DatabaseMetaData.getSchemas" 
"ResultSet.getString" -- "DatabaseMetaData.getImportedKeys" 
"ResultSet.getString" -- "DatabaseMetaData.getPrimaryKeys" 
"ResultSet.getString" -- "DatabaseMetaData.getColumns" 
"ResultSet.getString" -- "DatabaseMetaData.getTables" 
"ResultSet.getString" -- "ResultSet.getInt" 
"ResultSet.getString" -- "PreparedStatement.setInt" 
"ResultSet.getString" -- "ResultSet.first" 
"ResultSet.getString" -- "ResultSet.wasNull" 
"ResultSet.getString" -- "ResultSet.getLong" 
"ResultSet.getString" -- "ArrayList.build" 
"ResultSet.getString" -- "RowMapper<Object>.<init>" 
"ResultSet.getString" -- "ResultSet.getBigDecimal" 
"ResultSet.getString" -- "Book.setTitle" 
"Executors.newFixedThreadPool" -- "AtomicInteger.get" 
"Executors.newFixedThreadPool" -- "CyclicBarrier.<init>" 
"Executors.newFixedThreadPool" -- "ExecutorService.execute" 
"Executors.newFixedThreadPool" -- "CyclicBarrier.await" 
"Executors.newFixedThreadPool" -- "ExecutorService.shutdown" 
"Executors.newFixedThreadPool" -- "ExecutorService.awaitTermination" 
"Executors.newFixedThreadPool" -- "ExecutorService.submit" 
"Executors.newFixedThreadPool" -- "Writer.<init>" 
"Executors.newFixedThreadPool" -- "Reader.<init>" 
"Executors.newFixedThreadPool" -- "ThreadPoolExecutor.cast" 
"Executors.newFixedThreadPool" -- "Runnable.cast" 
"Executors.newFixedThreadPool" -- "CountDownLatch.<init>" 
"Executors.newFixedThreadPool" -- "CountDownLatch.getCount" 
"Executors.newFixedThreadPool" -- "CyclicBarrier.getNumberWaiting" 
"Executors.newFixedThreadPool" -- "PriorityBlockingQueue.<init>" 
"Executors.newFixedThreadPool" -- "PriorityBlockingQueue.take" 
"Executors.newFixedThreadPool" -- "Future<String>.cancel" 
"Executors.newFixedThreadPool" -- "Future<String>.get" 
"Executors.newFixedThreadPool" -- "Future<String>.isCancelled" 
"Executors.newFixedThreadPool" -- "Future<String>.isDone" 
"Executors.newFixedThreadPool" -- "Executors.newScheduledThreadPool" 
"Executors.newFixedThreadPool" -- "Executors.newCachedThreadPool" 
"Executors.newFixedThreadPool" -- "LinkedBlockingQueue<Runnable>.<init>" 
"Executors.newFixedThreadPool" -- "ThreadPoolExecutor.<init>" 
"Executors.newFixedThreadPool" -- "ThreadPoolExecutor.setMaximumPoolSize" 
"Executors.newFixedThreadPool" -- "ScheduledThreadPoolExecutor.cast" 
"Executors.newFixedThreadPool" -- "Future<Double>.get" 
"Executors.newFixedThreadPool" -- "Future<Double>.isDone" 
"HashMap<String,String>.<init>" -- "Map<String,String>.put" 
"HashMap<String,String>.<init>" -- "Map<String>.put" 
"HashMap<String,String>.<init>" -- "List<Message>.get" 
"HashMap<String,String>.<init>" -- "String.toString" 
"HashMap<String,String>.<init>" -- "Map.of" 
"HashMap<String,String>.<init>" -- "Map.ofEntries" 
"HashMap<String,String>.<init>" -- "SimpleEntry<String,String>.<init>" 
"Map<String,String>.put" -- "Map<String>.put" 
"Map<String,String>.put" -- "List<Message>.get" 
"Map<String,String>.put" -- "Entry<String,String>.getKey" 
"Map<String,String>.put" -- "Entry<String,String>.getValue" 
"Map<String,String>.put" -- "Class.getDeclaredFields" 
"Map<String,String>.put" -- "Field.setAccessible" 
"Map<String,String>.put" -- "Field.isAnnotationPresent" 
"Map<String,String>.put" -- "Field.get" 
"Map<String,String>.put" -- "ConcurrentHashMap.<init>" 
"Map<String,String>.put" -- "EnumSet.of" 
"Map<String,String>.put" -- "ReentrantLock.lock" 
"Map<String,String>.put" -- "ReentrantLock.unlock" 
"Map<String,String>.put" -- "StampedLock.writeLock" 
"Map<String,String>.put" -- "StampedLock.unlockWrite" 
"Map<String,String>.put" -- "Lock.lock" 
"Map<String,String>.put" -- "Lock.unlock" 
"Map<String,String>.put" -- "Map<String,String>.remove" 
"Map<String,String>.put" -- "System.gc" 
"Map<String,String>.put" -- "Map<String,String>.size" 
"Map<String,String>.put" -- "Map<String,Object>.entrySet" 
"Map<String,String>.put" -- "Entry<String,Object>.getValue" 
"Map<String,String>.put" -- "Entry<String,Object>.getKey" 
"Map<String,String>.put" -- "Objects.toString" 
"Map<String,String>.put" -- "Iterable.cast" 
"Map<String,String>.put" -- "Iterable.forEach" 
"Map<String,String>.put" -- "Message.getPayload" 
"Map<String,String>.put" -- "LinkedHashMap<String,String>.<init>" 
"Map<String,String>.put" -- "Element.getElementsByTagName" 
"Map<String,String>.put" -- "XMLStreamReader.hasNext" 
"Map<String,String>.put" -- "XMLStreamReader.next" 
"Map<String,String>.put" -- "XMLStreamReader.isStartElement" 
"Map<String,String>.put" -- "XMLStreamReader.getLocalName" 
"Map<String,String>.put" -- "XMLStreamReader.getElementText" 
"Map<String>.put" -- "List<Message>.get" 
"Map<String>.put" -- "HashMap<String>.<init>" 
"Map<String>.put" -- "TimeZone.getTimeZone" 
"Map<String>.put" -- "Objects.requireNonNull" 
"Map<String>.put" -- "String.endsWith" 
"Map<String>.put" -- "File.list" 
"Map<String>.put" -- "Map<String>.get" 
"Map<String>.put" -- "Map<String>.containsKey" 
"Map<String>.put" -- "Cluster.openBucket" 
"Map<String>.put" -- "Security.builder" 
"Map<String>.put" -- "Connection.subscribe" 
"Map<String>.put" -- "Resource.exists" 
"Map<String>.put" -- "Resource.getFilename" 
"Map<String>.put" -- "Collections.unmodifiableMap" 
"InputStreamReader.<init>" -- "BufferedReader.<init>" 
"InputStreamReader.<init>" -- "OutputStreamWriter.<init>" 
"InputStreamReader.<init>" -- "OutputStreamWriter.write" 
"InputStreamReader.<init>" -- "OutputStreamWriter.close" 
"InputStreamReader.<init>" -- "ScriptEngine.eval" 
"InputStreamReader.<init>" -- "ByteArrayInputStream.<init>" 
"InputStreamReader.<init>" -- "URL.<init>" 
"InputStreamReader.<init>" -- "URL.openConnection" 
"InputStreamReader.<init>" -- "HttpURLConnection.cast" 
"InputStreamReader.<init>" -- "String.getBytes" 
"InputStreamReader.<init>" -- "HttpURLConnection.getResponseCode" 
"InputStreamReader.<init>" -- "Pattern.compile" 
"InputStreamReader.<init>" -- "Runtime.getRuntime" 
"InputStreamReader.<init>" -- "Scanner.nextLine" 
"InputStreamReader.<init>" -- "Scanner.next" 
"InputStreamReader.<init>" -- "Scanner.nextDouble" 
"InputStreamReader.<init>" -- "BufferedReader.readLine" 
"InputStreamReader.<init>" -- "Scanner.hasNextInt" 
"InputStreamReader.<init>" -- "Scanner.hasNext" 
"InputStreamReader.<init>" -- "BufferedReader.close" 
"InputStreamReader.<init>" -- "PrintWriter.close" 
"InputStreamReader.<init>" -- "Socket.close" 
"InputStreamReader.<init>" -- "PrintWriter.println" 
"InputStreamReader.<init>" -- "Socket.<init>" 
"InputStreamReader.<init>" -- "Socket.getOutputStream" 
"InputStreamReader.<init>" -- "PrintWriter.<init>" 
"InputStreamReader.<init>" -- "Socket.getInputStream" 
"InputStreamReader.<init>" -- "ServerSocket.<init>" 
"InputStreamReader.<init>" -- "ServerSocket.accept" 
"InputStreamReader.<init>" -- "BufferedReader.lines" 
"InputStreamReader.<init>" -- "Process.getInputStream" 
"InputStreamReader.<init>" -- "HttpURLConnection.instance" 
"InputStreamReader.<init>" -- "HttpURLConnection.getResponseMessage" 
"InputStreamReader.<init>" -- "HttpURLConnection.getInputStream" 
"InputStreamReader.<init>" -- "HttpURLConnection.getHeaderFields" 
"InputStreamReader.<init>" -- "HttpURLConnection.getErrorStream" 
"InputStreamReader.<init>" -- "Process.getErrorStream" 
"InputStreamReader.<init>" -- "Charset.newDecoder" 
"InputStreamReader.<init>" -- "CharsetDecoder.onMalformedInput" 
"InputStreamReader.<init>" -- "Event.request" 
"InputStreamReader.<init>" -- "InputStreamReader.read" 
"InputStreamReader.<init>" -- "OutputStreamWriter.flush" 
"InputStreamReader.<init>" -- "Optional.orElseThrow" 
"InputStreamReader.<init>" -- "ScriptEngineManager.<init>" 
"InputStreamReader.<init>" -- "URLConnection.getInputStream" 
"InputStreamReader.<init>" -- "Builder.setDataStoreFactory" 
"InputStreamReader.<init>" -- "ScriptEngineManager.getEngineByName" 
"BufferedReader.<init>" -- "OutputStreamWriter.<init>" 
"BufferedReader.<init>" -- "OutputStreamWriter.write" 
"BufferedReader.<init>" -- "OutputStreamWriter.close" 
"BufferedReader.<init>" -- "FileReader.<init>" 
"BufferedReader.<init>" -- "ByteArrayInputStream.<init>" 
"BufferedReader.<init>" -- "URL.<init>" 
"BufferedReader.<init>" -- "URL.openConnection" 
"BufferedReader.<init>" -- "HttpURLConnection.cast" 
"BufferedReader.<init>" -- "String.getBytes" 
"BufferedReader.<init>" -- "HttpURLConnection.getResponseCode" 
"BufferedReader.<init>" -- "Pattern.compile" 
"BufferedReader.<init>" -- "Runtime.getRuntime" 
"BufferedReader.<init>" -- "Scanner.nextLine" 
"BufferedReader.<init>" -- "Scanner.next" 
"BufferedReader.<init>" -- "Scanner.nextDouble" 
"BufferedReader.<init>" -- "BufferedReader.readLine" 
"BufferedReader.<init>" -- "Scanner.hasNextInt" 
"BufferedReader.<init>" -- "Scanner.hasNext" 
"BufferedReader.<init>" -- "BufferedReader.close" 
"BufferedReader.<init>" -- "PrintWriter.close" 
"BufferedReader.<init>" -- "Socket.close" 
"BufferedReader.<init>" -- "PrintWriter.println" 
"BufferedReader.<init>" -- "Socket.<init>" 
"BufferedReader.<init>" -- "Socket.getOutputStream" 
"BufferedReader.<init>" -- "PrintWriter.<init>" 
"BufferedReader.<init>" -- "Socket.getInputStream" 
"BufferedReader.<init>" -- "ServerSocket.<init>" 
"BufferedReader.<init>" -- "ServerSocket.accept" 
"BufferedReader.<init>" -- "BufferedReader.lines" 
"BufferedReader.<init>" -- "FileReader.close" 
"BufferedReader.<init>" -- "Process.getInputStream" 
"BufferedReader.<init>" -- "HttpURLConnection.instance" 
"BufferedReader.<init>" -- "HttpURLConnection.getResponseMessage" 
"BufferedReader.<init>" -- "HttpURLConnection.getInputStream" 
"BufferedReader.<init>" -- "HttpURLConnection.getHeaderFields" 
"BufferedReader.<init>" -- "HttpURLConnection.getErrorStream" 
"BufferedReader.<init>" -- "Process.getErrorStream" 
"BufferedReader.<init>" -- "Charset.newDecoder" 
"BufferedReader.<init>" -- "CharsetDecoder.onMalformedInput" 
"BufferedReader.<init>" -- "Font.<init>" 
"BufferedReader.<init>" -- "Optional.orElseThrow" 
"BufferedReader.<init>" -- "Thread.wait" 
"BufferedReader.<init>" -- "URLConnection.getInputStream" 
"BufferedReader.<init>" -- "Document.<init>" 
"BufferedReader.<init>" -- "Document.add" 
"BufferedReader.<init>" -- "Document.open" 
"BufferedReader.<init>" -- "Document.close" 
"BufferedReader.<init>" -- "Font.setStyle" 
"BufferedReader.<init>" -- "Font.setSize" 
"OutputStreamWriter.<init>" -- "OutputStreamWriter.write" 
"OutputStreamWriter.<init>" -- "OutputStreamWriter.close" 
"OutputStreamWriter.<init>" -- "Event.request" 
"OutputStreamWriter.<init>" -- "InputStreamReader.read" 
"OutputStreamWriter.<init>" -- "OutputStreamWriter.flush" 
"OutputStreamWriter.write" -- "OutputStreamWriter.close" 
"OutputStreamWriter.write" -- "Event.request" 
"OutputStreamWriter.write" -- "InputStreamReader.read" 
"OutputStreamWriter.write" -- "OutputStreamWriter.flush" 
"OutputStream.write" -- "InputStream.read" 
"OutputStream.write" -- "InputStream.available" 
"Entry<String,String>.getKey" -- "Entry<String,String>.getValue" 
"Entry<String,String>.getKey" -- "URLEncoder.encode" 
"Entry<String,String>.getValue" -- "URLEncoder.encode" 
"ByteBuffer.capacity" -- "List<DataBuffer>.size" 
"ByteBuffer.capacity" -- "DataBuffer.readableByteCount" 
"ByteBuffer.capacity" -- "ByteBuffer.allocate" 
"ByteBuffer.capacity" -- "List<DataBuffer>.forEach" 
"ByteBuffer.capacity" -- "ByteBuffer.put" 
"ByteBuffer.capacity" -- "ByteBuffer.rewind" 
"List<DataBuffer>.size" -- "DataBuffer.readableByteCount" 
"List<DataBuffer>.size" -- "ByteBuffer.allocate" 
"List<DataBuffer>.size" -- "List<DataBuffer>.forEach" 
"List<DataBuffer>.size" -- "ByteBuffer.put" 
"List<DataBuffer>.size" -- "ByteBuffer.rewind" 
"DataBuffer.readableByteCount" -- "ByteBuffer.allocate" 
"DataBuffer.readableByteCount" -- "List<DataBuffer>.forEach" 
"DataBuffer.readableByteCount" -- "ByteBuffer.put" 
"DataBuffer.readableByteCount" -- "ByteBuffer.rewind" 
"ByteBuffer.allocate" -- "List<DataBuffer>.forEach" 
"ByteBuffer.allocate" -- "ByteBuffer.put" 
"ByteBuffer.allocate" -- "ByteBuffer.rewind" 
"ByteBuffer.allocate" -- "Files.createTempFile" 
"ByteBuffer.allocate" -- "Files.lines" 
"ByteBuffer.allocate" -- "InetSocketAddress.<init>" 
"ByteBuffer.allocate" -- "ByteBuffer.hasRemaining" 
"ByteBuffer.allocate" -- "ByteBuffer.flip" 
"ByteBuffer.allocate" -- "SocketChannel.open" 
"ByteBuffer.allocate" -- "Selector.open" 
"ByteBuffer.allocate" -- "ServerSocketChannel.open" 
"ByteBuffer.allocate" -- "ServerSocketChannel.bind" 
"ByteBuffer.allocate" -- "ServerSocketChannel.configureBlocking" 
"ByteBuffer.allocate" -- "ServerSocketChannel.register" 
"ByteBuffer.allocate" -- "Selector.select" 
"ByteBuffer.allocate" -- "Selector.selectedKeys" 
"ByteBuffer.allocate" -- "Set<SelectionKey>.iterator" 
"ByteBuffer.allocate" -- "Iterator<SelectionKey>.hasNext" 
"ByteBuffer.allocate" -- "Iterator<SelectionKey>.next" 
"ByteBuffer.allocate" -- "SelectionKey.isAcceptable" 
"ByteBuffer.allocate" -- "SelectionKey.isReadable" 
"ByteBuffer.allocate" -- "Iterator<SelectionKey>.remove" 
"ByteBuffer.allocate" -- "Long.intValue" 
"ByteBuffer.allocate" -- "List<Float>.get" 
"List<DataBuffer>.forEach" -- "ByteBuffer.put" 
"List<DataBuffer>.forEach" -- "ByteBuffer.rewind" 
"List<DataBuffer>.forEach" -- "AtomicLong.addAndGet" 
"List<DataBuffer>.forEach" -- "AtomicLong.<init>" 
"ByteBuffer.put" -- "ByteBuffer.rewind" 
"ByteBuffer.put" -- "Files.createTempFile" 
"ByteBuffer.put" -- "Files.lines" 
"ByteBuffer.put" -- "ByteBuffer.hasRemaining" 
"ByteBuffer.put" -- "ByteBuffer.flip" 
"ByteBuffer.rewind" -- "Long.intValue" 
"ByteBuffer.rewind" -- "List<Float>.get" 
"Map<String>.values" -- "Collections.sort" 
"Map<String>.values" -- "Collectors.toCollection" 
"Request.header" -- "Response.header" 
"Request.session" -- "Response.text" 
"Response.text" -- "Request.attribute" 
"Request.attribute" -- "Response.render" 
"Files.createTempFile" -- "Files.write" 
"Files.createTempFile" -- "Files.lines" 
"Files.createTempFile" -- "ByteBuffer.hasRemaining" 
"Files.createTempFile" -- "ByteBuffer.flip" 
"Files.createTempFile" -- "Path.toFile" 
"Files.write" -- "String.getBytes" 
"Files.write" -- "MessageDigest.getInstance" 
"Files.write" -- "MessageDigest.digest" 
"Files.write" -- "ManagementFactory.getThreadMXBean" 
"Files.write" -- "ThreadMXBean.dumpAllThreads" 
"Files.write" -- "ThreadInfo.toString" 
"Files.write" -- "Files.readAllBytes" 
"Files.write" -- "Utils.getPrivateKey" 
"Files.write" -- "Signature.getInstance" 
"Files.write" -- "Signature.initSign" 
"Files.write" -- "Signature.update" 
"Files.write" -- "Signature.sign" 
"Files.write" -- "Path.toFile" 
"Collections.singletonList" -- "List.subList" 
"Collections.singletonList" -- "Locale.forLanguageTag" 
"Collections.singletonList" -- "Instant.now" 
"Collections.singletonList" -- "LinkedHashMap.cast" 
"Collections.singletonList" -- "Page.getMaxResults" 
"Collections.singletonList" -- "Page.getFirstResult" 
"Collections.singletonList" -- "LinkedHashMap.instance" 
"Collections.singletonList" -- "LinkedHashMap.entrySet" 
"Collections.singletonList" -- "AtomicReference.get" 
"Collections.singletonList" -- "MediaType.parseMediaType" 
"Collections.singletonList" -- "MediaType.parseMediaTypes" 
"SimpleDateFormat.<init>" -- "Calendar.getInstance" 
"SimpleDateFormat.<init>" -- "Calendar.getTime" 
"SimpleDateFormat.<init>" -- "SimpleDateFormat.format" 
"SimpleDateFormat.<init>" -- "Date.getTime" 
"SimpleDateFormat.<init>" -- "Calendar.setTime" 
"SimpleDateFormat.<init>" -- "Calendar.add" 
"SimpleDateFormat.<init>" -- "SimpleDateFormat.parse" 
"SimpleDateFormat.<init>" -- "DateFormat.format" 
"SimpleDateFormat.<init>" -- "DateFormat.setLenient" 
"SimpleDateFormat.<init>" -- "DateFormat.parse" 
"SimpleDateFormat.<init>" -- "TimeZone.getTimeZone" 
"SimpleDateFormat.<init>" -- "DateFormat.setTimeZone" 
"SimpleDateFormat.<init>" -- "List<>.add" 
"SimpleDateFormat.<init>" -- "File.createNewFile" 
"SimpleDateFormat.<init>" -- "Message.getFrom" 
"SimpleDateFormat.<init>" -- "Message.getText" 
"SimpleDateFormat.<init>" -- "BufferedOutputStream.<init>" 
"SimpleDateFormat.<init>" -- "BufferedOutputStream.write" 
"SimpleDateFormat.<init>" -- "BufferedOutputStream.close" 
"SimpleDateFormat.<init>" -- "Message.getTo" 
"Calendar.getInstance" -- "Calendar.getTime" 
"Calendar.getInstance" -- "SimpleDateFormat.format" 
"Calendar.getInstance" -- "LocalDate.now" 
"Calendar.getInstance" -- "LocalTime.now" 
"Calendar.getInstance" -- "Date.before" 
"Calendar.getInstance" -- "Calendar.setTime" 
"Calendar.getInstance" -- "Calendar.add" 
"Calendar.getInstance" -- "SimpleDateFormat.parse" 
"Calendar.getInstance" -- "Calendar.get" 
"Calendar.getInstance" -- "HashSet<Integer>.<init>" 
"Calendar.getInstance" -- "Calendar.set" 
"Calendar.getInstance" -- "Date.valueOf" 
"Calendar.getInstance" -- "Timestamp.valueOf" 
"Calendar.getInstance" -- "Time.valueOf" 
"Calendar.getInstance" -- "OffsetDateTime.now" 
"Calendar.getInstance" -- "OffsetTime.now" 
"Calendar.getInstance" -- "Calendar.clear" 
"Calendar.getInstance" -- "Connection.prepareStatement" 
"Calendar.getInstance" -- "PreparedStatement.addBatch" 
"Calendar.getInstance" -- "PreparedStatement.executeBatch" 
"Calendar.getInstance" -- "PreparedStatement.setDate" 
"Calendar.getTime" -- "SimpleDateFormat.format" 
"Calendar.getTime" -- "Date.before" 
"Calendar.getTime" -- "Calendar.setTime" 
"Calendar.getTime" -- "Calendar.add" 
"Calendar.getTime" -- "SimpleDateFormat.parse" 
"Calendar.getTime" -- "GregorianCalendar.<init>" 
"Calendar.getTime" -- "Calendar.set" 
"Calendar.getTime" -- "ArrayList<Date>.<init>" 
"Calendar.getTime" -- "Calendar.before" 
"Calendar.getTime" -- "List<Date>.add" 
"Calendar.getTime" -- "Calendar.clear" 
"SimpleDateFormat.format" -- "Date.getTime" 
"SimpleDateFormat.format" -- "Calendar.setTime" 
"SimpleDateFormat.format" -- "Calendar.add" 
"SimpleDateFormat.format" -- "SimpleDateFormat.parse" 
"SimpleDateFormat.format" -- "ArrayList<Integer>.<init>" 
"SimpleDateFormat.format" -- "TimeZone.getTimeZone" 
"SimpleDateFormat.format" -- "Message.getFrom" 
"SimpleDateFormat.format" -- "Message.getText" 
"SimpleDateFormat.format" -- "SimpleDateFormat.setTimeZone" 
"SimpleDateFormat.format" -- "Message.getTo" 
"SimpleDateFormat.format" -- "List<ArrayList<Integer>>.size" 
"SimpleDateFormat.format" -- "List<ArrayList<Integer>>.get" 
"SimpleDateFormat.format" -- "ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.get" 
"SimpleDateFormat.format" -- "ConcurrentHashMap<Integer,Integer>.<init>" 
"SimpleDateFormat.format" -- "ConcurrentHashMap<Integer,Integer>.get" 
"SimpleDateFormat.format" -- "ConcurrentHashMap<Integer,Integer>.put" 
"SimpleDateFormat.format" -- "ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.put" 
"SimpleDateFormat.format" -- "Date.cast" 
"String.matches" -- "Instant.now" 
"ScriptEngine.eval" -- "FileReader.<init>" 
"ScriptEngine.eval" -- "Class.newInstance" 
"ScriptEngine.eval" -- "ScriptEngineManager.<init>" 
"ScriptEngine.eval" -- "ScriptEngineManager.getEngineByName" 
"FileReader.<init>" -- "Class.newInstance" 
"FileReader.<init>" -- "BufferedReader.readLine" 
"FileReader.<init>" -- "BufferedReader.close" 
"FileReader.<init>" -- "File.getName" 
"FileReader.<init>" -- "FileReader.close" 
"FileReader.<init>" -- "File.getPath" 
"FileReader.<init>" -- "Font.<init>" 
"FileReader.<init>" -- "Thread.wait" 
"FileReader.<init>" -- "Document.<init>" 
"FileReader.<init>" -- "TextField.<init>" 
"FileReader.<init>" -- "Document.add" 
"FileReader.<init>" -- "Path.toFile" 
"FileReader.<init>" -- "Document.open" 
"FileReader.<init>" -- "Document.close" 
"FileReader.<init>" -- "Font.setStyle" 
"FileReader.<init>" -- "Font.setSize" 
"FileReader.<init>" -- "XMLInputFactory.newInstance" 
"FileReader.<init>" -- "XMLInputFactory.createXMLEventReader" 
"FileReader.<init>" -- "XMLEventReader.hasNext" 
"FileReader.<init>" -- "XMLEventReader.nextEvent" 
"FileReader.<init>" -- "XMLEvent.asStartElement" 
"FileReader.<init>" -- "XMLEvent.asCharacters" 
"FileReader.<init>" -- "XMLEvent.asEndElement" 
"FileReader.<init>" -- "XMLEvent.getEventType" 
"FileReader.<init>" -- "Iterator<Attribute>.hasNext" 
"FileReader.<init>" -- "Iterator<Attribute>.next" 
"FileReader.<init>" -- "Attribute.getName" 
"FileReader.<init>" -- "Attribute.getValue" 
"Binding.<init>" -- "File.toURI" 
"File.toURI" -- "Map<String,Serializable>.put" 
"Base64.getDecoder" -- "ByteArrayInputStream.<init>" 
"Base64.getDecoder" -- "ObjectInputStream.<init>" 
"Base64.getDecoder" -- "ObjectInputStream.readObject" 
"Base64.getDecoder" -- "ObjectInputStream.close" 
"ByteArrayInputStream.<init>" -- "ObjectInputStream.<init>" 
"ByteArrayInputStream.<init>" -- "ObjectInputStream.readObject" 
"ByteArrayInputStream.<init>" -- "ObjectInputStream.close" 
"ByteArrayInputStream.<init>" -- "String.getBytes" 
"ByteArrayInputStream.<init>" -- "BufferedReader.readLine" 
"ByteArrayInputStream.<init>" -- "BufferedReader.lines" 
"ByteArrayInputStream.<init>" -- "Charset.newDecoder" 
"ByteArrayInputStream.<init>" -- "CharsetDecoder.onMalformedInput" 
"ByteArrayInputStream.<init>" -- "ImageIO.read" 
"ByteArrayInputStream.<init>" -- "Image.<init>" 
"ByteArrayInputStream.<init>" -- "Collection.iterator" 
"ByteArrayInputStream.<init>" -- "ASN1InputStream.<init>" 
"ByteArrayInputStream.<init>" -- "ASN1InputStream.readObject" 
"ByteArrayInputStream.<init>" -- "ASN1InputStream.close" 
"ByteArrayInputStream.<init>" -- "ByteArrayInputStream.close" 
"ObjectInputStream.<init>" -- "ObjectInputStream.readObject" 
"ObjectInputStream.<init>" -- "ObjectInputStream.close" 
"ObjectInputStream.readObject" -- "ObjectInputStream.close" 
"ObjectInputStream.readObject" -- "ObjectInputStream.defaultReadObject" 
"ObjectOutputStream.<init>" -- "ObjectOutputStream.writeObject" 
"ObjectOutputStream.<init>" -- "ObjectOutputStream.close" 
"ObjectOutputStream.<init>" -- "Base64.getEncoder" 
"ObjectOutputStream.<init>" -- "Object.toString" 
"ObjectOutputStream.writeObject" -- "ObjectOutputStream.close" 
"ObjectOutputStream.writeObject" -- "Base64.getEncoder" 
"ObjectOutputStream.writeObject" -- "ObjectOutputStream.defaultWriteObject" 
"ObjectOutputStream.writeObject" -- "Object.toString" 
"ObjectOutputStream.close" -- "Base64.getEncoder" 
"ObjectOutputStream.close" -- "Object.toString" 
"Base64.getEncoder" -- "String.getBytes" 
"Base64.getEncoder" -- "MessageDigest.getInstance" 
"Base64.getEncoder" -- "MessageDigest.update" 
"Base64.getEncoder" -- "MessageDigest.digest" 
"JOptionPane.showMessageDialog" -- "GraphicsEnvironment.isHeadless" 
"ObjectInput.readUTF" -- "ObjectInput.readInt" 
"ObjectInput.readUTF" -- "ObjectInput.readObject" 
"ObjectOutput.writeUTF" -- "ObjectOutput.writeInt" 
"ObjectOutput.writeUTF" -- "ObjectOutput.writeObject" 
"InitialContext.lookup" -- "File.cast" 
"InitialContext.lookup" -- "InitialContext.<init>" 
"InitialContext.lookup" -- "Cache.getService" 
"InitialContext.lookup" -- "Cache.addService" 
"File.cast" -- "File.getName" 
"Hashtable<String,String>.<init>" -- "Hashtable<String,String>.put" 
"Hashtable<String,String>.<init>" -- "InitialContext.<init>" 
"Hashtable<String,String>.put" -- "InitialContext.<init>" 
"InitialContext.<init>" -- "Context.lookup" 
"InitialContext.<init>" -- "DataSource.cast" 
"InitialContext.<init>" -- "Cache.getService" 
"InitialContext.<init>" -- "Cache.addService" 
"URL.<init>" -- "URL.openConnection" 
"URL.<init>" -- "HttpURLConnection.cast" 
"URL.<init>" -- "HttpURLConnection.setRequestMethod" 
"URL.<init>" -- "HttpURLConnection.setRequestProperty" 
"URL.<init>" -- "HttpURLConnection.setDoOutput" 
"URL.<init>" -- "String.getBytes" 
"URL.<init>" -- "HttpURLConnection.getResponseCode" 
"URL.<init>" -- "SecureRandom.<init>" 
"URL.<init>" -- "BufferedReader.readLine" 
"URL.<init>" -- "HttpURLConnection.disconnect" 
"URL.<init>" -- "Socket.<init>" 
"URL.<init>" -- "InetSocketAddress.<init>" 
"URL.<init>" -- "Proxy.<init>" 
"URL.<init>" -- "Socket.connect" 
"URL.<init>" -- "System.setProperty" 
"URL.<init>" -- "HttpURLConnection.instance" 
"URL.<init>" -- "HttpURLConnection.getResponseMessage" 
"URL.<init>" -- "HttpURLConnection.getInputStream" 
"URL.<init>" -- "HttpURLConnection.setFollowRedirects" 
"URL.<init>" -- "URLConnection.getInputStream" 
"URL.<init>" -- "Document.<init>" 
"URL.<init>" -- "Document.add" 
"URL.<init>" -- "Document.open" 
"URL.<init>" -- "Document.close" 
"URL.<init>" -- "Image.getInstance" 
"URL.openConnection" -- "HttpURLConnection.cast" 
"URL.openConnection" -- "HttpURLConnection.setRequestMethod" 
"URL.openConnection" -- "HttpURLConnection.setRequestProperty" 
"URL.openConnection" -- "HttpURLConnection.setDoOutput" 
"URL.openConnection" -- "String.getBytes" 
"URL.openConnection" -- "HttpURLConnection.getResponseCode" 
"URL.openConnection" -- "SecureRandom.<init>" 
"URL.openConnection" -- "BufferedReader.readLine" 
"URL.openConnection" -- "HttpURLConnection.disconnect" 
"URL.openConnection" -- "Socket.<init>" 
"URL.openConnection" -- "InetSocketAddress.<init>" 
"URL.openConnection" -- "Proxy.<init>" 
"URL.openConnection" -- "Socket.connect" 
"URL.openConnection" -- "System.setProperty" 
"URL.openConnection" -- "HttpURLConnection.instance" 
"URL.openConnection" -- "HttpURLConnection.getResponseMessage" 
"URL.openConnection" -- "HttpURLConnection.getInputStream" 
"URL.openConnection" -- "HttpURLConnection.setFollowRedirects" 
"URL.openConnection" -- "URLConnection.getInputStream" 
"HttpURLConnection.cast" -- "HttpURLConnection.setRequestMethod" 
"HttpURLConnection.cast" -- "HttpURLConnection.setRequestProperty" 
"HttpURLConnection.cast" -- "HttpURLConnection.setDoOutput" 
"HttpURLConnection.cast" -- "String.getBytes" 
"HttpURLConnection.cast" -- "HttpURLConnection.getResponseCode" 
"HttpURLConnection.cast" -- "URI.<init>" 
"HttpURLConnection.cast" -- "BufferedReader.readLine" 
"HttpURLConnection.cast" -- "HttpURLConnection.disconnect" 
"HttpURLConnection.cast" -- "Socket.<init>" 
"HttpURLConnection.cast" -- "File.exists" 
"HttpURLConnection.cast" -- "InetSocketAddress.<init>" 
"HttpURLConnection.cast" -- "Proxy.<init>" 
"HttpURLConnection.cast" -- "Socket.connect" 
"HttpURLConnection.cast" -- "URI.toURL" 
"HttpURLConnection.cast" -- "HttpURLConnection.instance" 
"HttpURLConnection.cast" -- "HttpURLConnection.getResponseMessage" 
"HttpURLConnection.cast" -- "HttpURLConnection.getInputStream" 
"HttpURLConnection.cast" -- "HttpURLConnection.getContentLengthLong" 
"HttpURLConnection.cast" -- "File.length" 
"HttpURLConnection.cast" -- "HttpURLConnection.setFollowRedirects" 
"HttpURLConnection.setRequestMethod" -- "HttpURLConnection.setRequestProperty" 
"HttpURLConnection.setRequestMethod" -- "HttpURLConnection.setDoOutput" 
"HttpURLConnection.setRequestMethod" -- "String.getBytes" 
"HttpURLConnection.setRequestMethod" -- "HttpURLConnection.getResponseCode" 
"HttpURLConnection.setRequestMethod" -- "URI.<init>" 
"HttpURLConnection.setRequestMethod" -- "File.exists" 
"HttpURLConnection.setRequestMethod" -- "URI.toURL" 
"HttpURLConnection.setRequestMethod" -- "HttpURLConnection.instance" 
"HttpURLConnection.setRequestMethod" -- "HttpURLConnection.getContentLengthLong" 
"HttpURLConnection.setRequestMethod" -- "File.length" 
"HttpURLConnection.setRequestMethod" -- "HttpURLConnection.setFollowRedirects" 
"HttpURLConnection.setRequestProperty" -- "HttpURLConnection.setDoOutput" 
"HttpURLConnection.setRequestProperty" -- "String.getBytes" 
"HttpURLConnection.setRequestProperty" -- "HttpURLConnection.getResponseCode" 
"HttpURLConnection.setRequestProperty" -- "URI.<init>" 
"HttpURLConnection.setRequestProperty" -- "HttpURLConnection.disconnect" 
"HttpURLConnection.setRequestProperty" -- "File.exists" 
"HttpURLConnection.setRequestProperty" -- "URI.toURL" 
"HttpURLConnection.setRequestProperty" -- "HttpURLConnection.instance" 
"HttpURLConnection.setRequestProperty" -- "HttpURLConnection.getContentLengthLong" 
"HttpURLConnection.setRequestProperty" -- "File.length" 
"HttpURLConnection.setDoOutput" -- "String.getBytes" 
"HttpURLConnection.setDoOutput" -- "HttpURLConnection.getResponseCode" 
"String.getBytes" -- "HttpURLConnection.getResponseCode" 
"String.getBytes" -- "MessageDigest.getInstance" 
"String.getBytes" -- "MessageDigest.update" 
"String.getBytes" -- "MessageDigest.digest" 
"String.getBytes" -- "UUID.nameUUIDFromBytes" 
"String.getBytes" -- "AtomicInteger.set" 
"String.getBytes" -- "AtomicInteger.<init>" 
"String.getBytes" -- "ByteBuffer.wrap" 
"String.getBytes" -- "CountDownLatch.<init>" 
"String.getBytes" -- "BufferedReader.readLine" 
"String.getBytes" -- "Socket.<init>" 
"String.getBytes" -- "Socket.getOutputStream" 
"String.getBytes" -- "Map<String>.get" 
"String.getBytes" -- "DatagramPacket.<init>" 
"String.getBytes" -- "DatagramSocket.receive" 
"String.getBytes" -- "DatagramSocket.send" 
"String.getBytes" -- "DatagramPacket.getData" 
"String.getBytes" -- "DatagramPacket.getLength" 
"String.getBytes" -- "DataInputStream.<init>" 
"String.getBytes" -- "DataOutputStream.<init>" 
"String.getBytes" -- "DataOutputStream.writeChar" 
"String.getBytes" -- "DataOutputStream.writeInt" 
"String.getBytes" -- "DataOutputStream.write" 
"String.getBytes" -- "Base64.encodeBase64" 
"String.getBytes" -- "ByteBuffer.hasRemaining" 
"String.getBytes" -- "ByteBuffer.get" 
"String.getBytes" -- "SocketChannel.write" 
"String.getBytes" -- "ByteBuffer.clear" 
"String.getBytes" -- "SocketChannel.read" 
"String.getBytes" -- "ByteBuffer.array" 
"String.getBytes" -- "Charset.forName" 
"String.getBytes" -- "Security.addProvider" 
"String.getBytes" -- "Charset.newDecoder" 
"String.getBytes" -- "CharsetDecoder.onMalformedInput" 
"String.getBytes" -- "Integer.toBinaryString" 
"String.getBytes" -- "Result.getValue" 
"String.getBytes" -- "Storage.get" 
"String.getBytes" -- "Blob.writer" 
"String.getBytes" -- "WritableByteChannel.write" 
"String.getBytes" -- "WritableByteChannel.close" 
"String.getBytes" -- "Blob.getBlobId" 
"String.getBytes" -- "Connection.subscribe" 
"String.getBytes" -- "Connection.publish" 
"String.getBytes" -- "Connection.request" 
"String.getBytes" -- "Request.getParam" 
"String.getBytes" -- "Reader.fromBuf" 
"String.getBytes" -- "Request.version" 
"String.getBytes" -- "Response.apply" 
"String.getBytes" -- "Future.value" 
"String.getBytes" -- "HashMap<Long>.<init>" 
"String.getBytes" -- "Map<Long>.size" 
"String.getBytes" -- "Map<Long>.entrySet" 
"String.getBytes" -- "Arrays.equals)" 
"String.getBytes" -- "Optional<Entry<Long>>.isPresent" 
"String.getBytes" -- "Optional<Entry<Long>>.get" 
"String.getBytes" -- "Put.<init>" 
"String.getBytes" -- "Put.addImmutable" 
"String.getBytes" -- "Put.addColumn" 
"String.getBytes" -- "Connection.createChannel" 
"String.getBytes" -- "Channel.queueDeclare" 
"String.getBytes" -- "Channel.basicPublish" 
"String.getBytes" -- "Channel.close" 
"HttpURLConnection.getResponseCode" -- "BufferedReader.readLine" 
"HttpURLConnection.getResponseCode" -- "HttpURLConnection.disconnect" 
"HttpURLConnection.getResponseCode" -- "BufferedReader.close" 
"HttpURLConnection.getResponseCode" -- "HttpURLConnection.instance" 
"HttpURLConnection.getResponseCode" -- "HttpURLConnection.getResponseMessage" 
"HttpURLConnection.getResponseCode" -- "HttpURLConnection.getInputStream" 
"HttpURLConnection.getResponseCode" -- "HttpURLConnection.getHeaderFields" 
"HttpURLConnection.getResponseCode" -- "HttpURLConnection.getErrorStream" 
"HttpURLConnection.getResponseCode" -- "HttpURLConnection.setFollowRedirects" 
"InputStream.close" -- "FileOutputStream.write" 
"InputStream.close" -- "InputStream.read" 
"InputStream.close" -- "FileOutputStream.flush" 
"MessageDigest.getInstance" -- "MessageDigest.update" 
"MessageDigest.getInstance" -- "MessageDigest.digest" 
"MessageDigest.getInstance" -- "InternalError.<init>" 
"MessageDigest.getInstance" -- "Arrays.copyOfRange" 
"MessageDigest.getInstance" -- "Security.addProvider" 
"MessageDigest.getInstance" -- "Files.readAllBytes" 
"MessageDigest.getInstance" -- "Utils.getPrivateKey" 
"MessageDigest.getInstance" -- "Utils.getPublicKey" 
"MessageDigest.update" -- "MessageDigest.digest" 
"MessageDigest.digest" -- "InternalError.<init>" 
"MessageDigest.digest" -- "Arrays.copyOfRange" 
"MessageDigest.digest" -- "Security.addProvider" 
"MessageDigest.digest" -- "Files.readAllBytes" 
"MessageDigest.digest" -- "Utils.getPrivateKey" 
"MessageDigest.digest" -- "Utils.getPublicKey" 
"InternalError.<init>" -- "Arrays.copyOfRange" 
"Arrays.copyOfRange" -- "Pattern.matcher" 
"Arrays.copyOfRange" -- "Matcher.group" 
"Arrays.copyOfRange" -- "Matcher.matches" 
"Arrays.copyOfRange" -- "Base64.getUrlDecoder" 
"LocalDateTime.of" -- "Duration.between" 
"LocalDateTime.of" -- "Duration.getSeconds" 
"LocalDateTime.of" -- "Duration.getNano" 
"LocalDateTime.of" -- "ZoneId.of" 
"Duration.between" -- "Duration.getSeconds" 
"Duration.between" -- "Duration.getNano" 
"Duration.between" -- "Date.toInstant" 
"Duration.between" -- "Instant.now" 
"Duration.getSeconds" -- "Duration.getNano" 
"Random.nextLong" -- "Duration.ofSeconds" 
"Random.ints" -- "Executors.newWorkStealingPool" 
"Random.ints" -- "IntStream.mapToObj" 
"URI.create" -- "ZonedDateTime.now" 
"URI.create" -- "Charset.forName" 
"URI.create" -- "URI.toString" 
"URI.create" -- "Duration.ofSeconds" 
"URI.create" -- "Context.get" 
"URI.create" -- "Context.getResponse" 
"URI.create" -- "Message.creator" 
"URI.<init>" -- "List<URI>.stream" 
"URI.<init>" -- "System.getProperty" 
"URI.<init>" -- "Integer.valueOf" 
"URI.<init>" -- "File.exists" 
"URI.<init>" -- "URI.toURL" 
"URI.<init>" -- "HttpURLConnection.instance" 
"URI.<init>" -- "HttpURLConnection.getContentLengthLong" 
"URI.<init>" -- "File.length" 
"URI.<init>" -- "Comment.getId" 
"Method.invoke" -- "Field.setAccessible" 
"Method.invoke" -- "Field.get" 
"Method.invoke" -- "Class.getDeclaredMethods" 
"Method.invoke" -- "Method.isAnnotationPresent" 
"Method.invoke" -- "Method.setAccessible" 
"Method.invoke" -- "Class.forName" 
"Method.invoke" -- "Class.getMethod" 
"Method.invoke" -- "DataSource.getClass" 
"Stream.empty" -- "Collection<String>.stream" 
"Collection<String>.stream" -- "Collection<String>.add" 
"Collection<String>.stream" -- "Map<Boolean,List<String>>.get" 
"AtomicInteger.get" -- "AtomicInteger.intValue" 
"AtomicInteger.get" -- "List.subList" 
"AtomicInteger.get" -- "AtomicInteger.set" 
"AtomicInteger.get" -- "AtomicInteger.getAndIncrement" 
"AtomicInteger.get" -- "AtomicInteger.decrementAndGet" 
"AtomicInteger.get" -- "AtomicInteger.compareAndSet" 
"AtomicInteger.get" -- "CyclicBarrier.<init>" 
"AtomicInteger.get" -- "ExecutorService.execute" 
"AtomicInteger.get" -- "CyclicBarrier.await" 
"AtomicInteger.get" -- "ExecutorService.shutdown" 
"AtomicInteger.get" -- "ExecutorService.awaitTermination" 
"AtomicInteger.get" -- "CountDownLatch.<init>" 
"AtomicInteger.get" -- "CountDownLatch.getCount" 
"AtomicInteger.get" -- "CyclicBarrier.getNumberWaiting" 
"AtomicInteger.get" -- "ThreadLocal<Integer>.get" 
"AtomicInteger.get" -- "ThreadLocal<Integer>.set" 
"AtomicInteger.intValue" -- "List.subList" 
"AtomicInteger.intValue" -- "AtomicInteger.set" 
"List.subList" -- "AtomicInteger.set" 
"List.subList" -- "Page.getMaxResults" 
"List.subList" -- "Page.getFirstResult" 
"AtomicInteger.set" -- "AtomicInteger.<init>" 
"AtomicInteger.set" -- "CountDownLatch.<init>" 
"AtomicInteger.set" -- "AtomicReference.<init>" 
"AtomicInteger.set" -- "Map<String>.get" 
"AtomicInteger.set" -- "HashMap<Long>.<init>" 
"AtomicInteger.set" -- "Map<Long>.size" 
"AtomicInteger.set" -- "Map<Long>.entrySet" 
"AtomicInteger.set" -- "Arrays.equals)" 
"AtomicInteger.set" -- "Optional<Entry<Long>>.isPresent" 
"AtomicInteger.set" -- "Optional<Entry<Long>>.get" 
"Spliterator.tryAdvance" -- "Stream.spliterator" 
"Spliterator.tryAdvance" -- "BiConsumer<>.accept" 
"Spliterator.tryAdvance" -- "Predicate.test" 
"List<String>.stream" -- "List<String>.isEmpty" 
"List<String>.stream" -- "Collectors.groupingBy" 
"List<String>.stream" -- "Files.readAllLines" 
"List<String>.stream" -- "Objects.requireNonNull" 
"List<String>.stream" -- "String.endsWith" 
"List<String>.stream" -- "Files.readAllBytes" 
"List<String>.stream" -- "Stream<String>.skip" 
"List<String>.stream" -- "Stream<String>.reduce" 
"List<String>.stream" -- "Collectors.toCollection" 
"List<String>.stream" -- "Long.parseLong" 
"List<String>.stream" -- "Supplier<List<String>>.get" 
"List<String>.stream" -- "Query.getResultList" 
"List<String>.stream" -- "String.instance" 
"List<String>.stream" -- "List<String>.cast" 
"List<String>.stream" -- "List<String[]>.cast" 
"List<String>.stream" -- "Map<String,Validator>.entrySet" 
"List<String>.stream" -- "Entry<String,Validator>.getValue" 
"List<String>.stream" -- "Entry<String,Validator>.getKey" 
"List<String>.stream" -- "Object>.equals" 
"List.addAll" -- "TreeMap.<init>" 
"List.addAll" -- "Map.values" 
"List.addAll" -- "Map.keySet" 
"List.addAll" -- "Role.getName" 
"List.addAll" -- "Role.getPrivileges" 
"Locale.forLanguageTag" -- "Context.<init>" 
"Locale.forLanguageTag" -- "Context.setVariable" 
"ResourceBundle.getBundle" -- "ResourceBundle.getString" 
"ResourceBundle.getBundle" -- "MessageFormat.<init>" 
"ResourceBundle.getBundle" -- "MessageFormat.format" 
"ResourceBundle.getString" -- "MessageFormat.<init>" 
"ResourceBundle.getString" -- "MessageFormat.format" 
"MessageFormat.<init>" -- "MessageFormat.format" 
"Stream.iterate" -- "Stream.iterate(0,i" 
"Stream.iterate" -- "Stream<Integer>.limit" 
"LocalDateTime.atZone" -- "ZoneId.systemDefault" 
"LocalDateTime.atZone" -- "ZoneOffset.compareTo" 
"DateTimeFormatter.ofLocalizedDateTime" -- "LocalDateTime.format" 
"LocalDateTime.format" -- "DateTimeFormatter.ofPattern" 
"DateTimeFormatter.ofPattern" -- "LocalDate.parse" 
"DateTimeFormatter.ofPattern" -- "GregorianCalendar.toZonedDateTime" 
"DateTimeFormatter.ofPattern" -- "Line.format" 
"DateTimeFormatter.ofPattern" -- "Line.<init>" 
"LocalDate.atStartOfDay" -- "ZoneId.systemDefault" 
"LocalDate.atStartOfDay" -- "Page.getContent" 
"LocalDate.now" -- "TemporalAdjusters.firstDayOfMonth" 
"LocalDate.now" -- "LocalDate.parse" 
"LocalDate.now" -- "LocalTime.now" 
"LocalDate.now" -- "LocalTime.parse" 
"LocalDate.now" -- "Period.between" 
"LocalDate.now" -- "LocalDate.isBefore" 
"LocalDate.now" -- "Date.valueOf" 
"LocalDate.now" -- "Timestamp.valueOf" 
"LocalDate.now" -- "Time.valueOf" 
"LocalDate.now" -- "OffsetDateTime.now" 
"LocalDate.now" -- "OffsetTime.now" 
"LocalDate.now" -- "LocalDate.isAfter" 
"LocalDate.now" -- "Long.valueOf" 
"LocalDate.now" -- "Instant.now" 
"LocalDate.now" -- "LocalDate.instance" 
"LocalDate.now" -- "LocalDate.cast" 
"LocalDate.now" -- "Period.getYears" 
"LocalDate.now" -- "Line.getDob" 
"LocalDate.now" -- "Line.toString" 
"LocalDate.now" -- "Line.setAge" 
"LocalDate.getDayOfWeek" -- "LocalDate.plusDays" 
"LocalDate.getDayOfWeek" -- "DayOfWeek.getDisplayName" 
"LocalDate.getDayOfWeek" -- "DayOfWeek.getValue" 
"LocalDate.getDayOfWeek" -- "LocalDate.minusDays" 
"LocalDate.plusDays" -- "LocalDate.isBefore" 
"LocalDate.plusDays" -- "IntStream.iterate"
"LocalDate.parse" -- "LocalDate.isAfter" 
"LocalDate.parse" -- "Line.<init>" 
"LocalTime.now" -- "LocalTime.parse" 
"LocalTime.now" -- "ExecutorService.execute" 
"LocalTime.now" -- "Executors.newSingleThreadExecutor" 
"LocalTime.now" -- "Date.valueOf" 
"LocalTime.now" -- "Timestamp.valueOf" 
"LocalTime.now" -- "Time.valueOf" 
"LocalTime.now" -- "OffsetDateTime.now" 
"LocalTime.now" -- "OffsetTime.now" 
"LocalTime.now" -- "Duration.ofSeconds" 
"Period.between" -- "Period.getYears" 
"ZoneId.systemDefault" -- "LocalDateTime.ofInstant" 
"ZoneId.systemDefault" -- "Date.toInstant" 
"ZoneId.systemDefault" -- "Date.getTime" 
"ZoneId.systemDefault" -- "LocalDate.isEqual" 
"ZoneId.systemDefault" -- "LocalDate.ofInstant" 
"ZoneId.systemDefault" -- "Instant.ofEpochMilli" 
"ZoneId.systemDefault" -- "Page.getContent" 
"LocalDateTime.ofInstant" -- "Date.toInstant" 
"LocalDateTime.ofInstant" -- "Instant.ofEpochMilli" 
"Date.toInstant" -- "Date.from" 
"Date.toInstant" -- "Duration.ofHours" 
"Date.toInstant" -- "Instant.equals" 
"Date.toInstant" -- "LocalDate.isEqual" 
"Date.toInstant" -- "LocalDate.ofInstant" 
"ZonedDateTime.toLocalDateTime" -- "ZonedDateTime.getZone" 
"Temporal.get" -- "DayOfWeek.of" 
"Temporal.get" -- "Temporal.plus" 
"DayOfWeek.of" -- "Temporal.plus" 
"LocalDate.ofEpochDay" -- "ThreadLocalRandom.current" 
"LocalDate.ofEpochDay" -- "LocalDate.toEpochDay" 
"LocalDate.ofEpochDay" -- "Executors.newScheduledThreadPool" 
"LocalDate.ofEpochDay" -- "Instant.now" 
"LocalDate.ofEpochDay" -- "Button.<init>" 
"LocalDate.ofEpochDay" -- "Button.addStyleName" 
"LocalDate.ofEpochDay" -- "Button.setEnabled" 
"LocalDate.ofEpochDay" -- "ScheduledExecutorService.scheduleWithFixedDelay" 
"LocalDate.ofEpochDay" -- "TextField.<init>" 
"LocalDate.ofEpochDay" -- "Binder.setBean" 
"LocalDate.ofEpochDay" -- "Button.addClickListener" 
"LocalDate.ofEpochDay" -- "GridLayout.<init>" 
"LocalDate.ofEpochDay" -- "GridLayout.setSpacing" 
"LocalDate.ofEpochDay" -- "GridLayout.setMargin" 
"LocalDate.ofEpochDay" -- "Label.setId" 
"LocalDate.ofEpochDay" -- "Label.setValue" 
"LocalDate.ofEpochDay" -- "Label.setCaption" 
"LocalDate.ofEpochDay" -- "GridLayout.addComponent" 
"LocalDate.ofEpochDay" -- "Link.<init>" 
"LocalDate.ofEpochDay" -- "Link.setId" 
"LocalDate.ofEpochDay" -- "Link.setTargetName" 
"LocalDate.ofEpochDay" -- "TextField.setId" 
"LocalDate.ofEpochDay" -- "TextField.setCaption" 
"LocalDate.ofEpochDay" -- "TextField.setValue" 
"LocalDate.ofEpochDay" -- "TextField.setIcon" 
"LocalDate.ofEpochDay" -- "TextArea.<init>" 
"LocalDate.ofEpochDay" -- "TextArea.setCaption" 
"LocalDate.ofEpochDay" -- "TextArea.setId" 
"LocalDate.ofEpochDay" -- "TextArea.setValue" 
"LocalDate.ofEpochDay" -- "Panel.<init>" 
"LocalDate.ofEpochDay" -- "Panel.setContent" 
"LocalDate.ofEpochDay" -- "Button.setId" 
"LocalDate.ofEpochDay" -- "Button.setDescription" 
"LocalDate.ofEpochDay" -- "Button.setIcon" 
"LocalDate.ofEpochDay" -- "Grid.<init>" 
"LocalDate.ofEpochDay" -- "Grid<Row>.setColumns" 
"LocalDate.ofEpochDay" -- "Row.<init>" 
"LocalDate.ofEpochDay" -- "List<Row>.add" 
"LocalDate.ofEpochDay" -- "Grid<Row>.setItems" 
"LocalDate.ofEpochDay" -- "Panel.setSizeUndefined" 
"LocalDate.ofEpochDay" -- "Binder.<init>" 
"LocalDate.ofEpochDay" -- "Binder.readBean" 
"LocalDate.ofEpochDay" -- "TextField.setWidth" 
"LocalDate.ofEpochDay" -- "Binder.forField" 
"LocalDate.ofEpochDay" -- "Binder.validate" 
"ThreadLocalRandom.current" -- "Date.getTime" 
"ThreadLocalRandom.current" -- "LocalDate.toEpochDay" 
"ThreadLocalRandom.current" -- "Instant.getEpochSecond" 
"ThreadLocalRandom.current" -- "Instant.ofEpochSecond" 
"ThreadLocalRandom.current" -- "LocalTime.toSecondOfDay" 
"ThreadLocalRandom.current" -- "LocalTime.ofSecondOfDay" 
"ThreadLocalRandom.current" -- "Data.receive" 
"ThreadLocalRandom.current" -- "Data.send" 
"ThreadLocalRandom.current" -- "BlockingQueue<Integer>.put" 
"ThreadLocalRandom.current" -- "Book.<init>" 
"ThreadLocalRandom.current" -- "Duration.ofSeconds" 
"ThreadLocalRandom.current" -- "Cell.cas" 
"ThreadLocalRandom.current" -- "Double.doubleToRawLongBits" 
"ThreadLocalRandom.current" -- "Double.longBitsToDouble" 
"ThreadLocalRandom.current" -- "DoubleBinaryOperator.applyAsDouble" 
"ThreadLocalRandom.current" -- "LongBinaryOperator.applyAsLong" 
"ThreadLocalRandom.current" -- "Duration.ofMillis" 
"Date.getTime" -- "ArrayList<Integer>.<init>" 
"Date.getTime" -- "DateFormat.format" 
"Date.getTime" -- "TimeZone.getDefault" 
"Date.getTime" -- "DateTime.forInstant" 
"Date.getTime" -- "DateTime.isSameDayAs" 
"Date.getTime" -- "Timestamp.<init>" 
"Date.getTime" -- "Instant.ofEpochMilli" 
"Date.getTime" -- "DateFormat.parse" 
"Date.getTime" -- "Output.writeString" 
"Date.getTime" -- "Output.writeLong" 
"Date.getTime" -- "Output.writeInt" 
"Date.getTime" -- "List<ArrayList<Integer>>.size" 
"Date.getTime" -- "List<ArrayList<Integer>>.get" 
"Instant.getEpochSecond" -- "Instant.ofEpochSecond" 
"Instant.ofEpochSecond" -- "Date.from" 
"Instant.ofEpochSecond" -- "Long.parseLong" 
"Instant.ofEpochSecond" -- "Map<String,Object>.forEach" 
"LocalTime.toSecondOfDay" -- "LocalTime.ofSecondOfDay" 
"Map.of" -- "Map.ofEntries" 
"Map.of" -- "SimpleEntry<String,String>.<init>" 
"Map.ofEntries" -- "SimpleEntry<String,String>.<init>" 
"Date.before" -- "Calendar.setTime" 
"Date.before" -- "Calendar.add" 
"Date.before" -- "Set<String>.containsAll" 
"Calendar.setTime" -- "Calendar.add" 
"Calendar.setTime" -- "SimpleDateFormat.parse" 
"Calendar.setTime" -- "Calendar.get" 
"Calendar.setTime" -- "GregorianCalendar.<init>" 
"Calendar.setTime" -- "ArrayList<Date>.<init>" 
"Calendar.setTime" -- "Calendar.before" 
"Calendar.setTime" -- "List<Date>.add" 
"Calendar.add" -- "SimpleDateFormat.parse" 
"Calendar.add" -- "GregorianCalendar.<init>" 
"Calendar.add" -- "ArrayList<Date>.<init>" 
"Calendar.add" -- "Calendar.before" 
"Calendar.add" -- "List<Date>.add" 
"LocalDate.isBefore" -- "LocalDate.isAfter" 
"LocalDate.isBefore" -- "LocalDate.instance" 
"LocalDate.isBefore" -- "LocalDate.cast" 
"ServiceLoader.load" -- "HashMap<Class,Object>.put" 
"ServiceLoader.load" -- "ServiceLoader.forEach" 
"ArrayList<String>.isEmpty" -- "ArrayList<String>.stream" 
"ArrayList<String>.isEmpty" -- "ArrayList<String>.size" 
"ArrayList<String>.isEmpty" -- "ArrayList<String>.clear" 
"ArrayList<String>.stream" -- "ArrayList<String>.size" 
"ArrayList<String>.stream" -- "ArrayList<String>.clear" 
"ArrayList<String>.stream" -- "Collectors.toCollection" 
"ArrayList<String>.stream" -- "ArrayList<String>.removeAll" 
"ArrayList<String>.size" -- "ArrayList<String>.clear" 
"ArrayList<String>.size" -- "ArrayList<String>.add" 
"ArrayList<String>.add" -- "SimpleDateFormat.parse" 
"ArrayList<String>.add" -- "StringBuffer.length" 
"ArrayList<String>.add" -- "HashMap<String,String>.forEach" 
"ArrayList<String>.add" -- "HashMap<String,String>.size" 
"ArrayList<String>.add" -- "ArrayList<String>.toArray" 
"Class.getCanonicalName" -- "Class.isInstance" 
"Class.getCanonicalName" -- "Integer.instance" 
"Stream.filter" -- "Stream.collect" 
"Runnable.run" -- "StreamSupport.stream" 
"Runnable.run" -- "Callable<Void>.<init>" 
"Runnable.run" -- "Duration.ofMillis" 
"Runnable.run" -- "Consumer<String,Integer>.poll" 
"Runnable.run" -- "Consumer<String,Integer>.commitSync" 
"Runnable.run" -- "Consumer<Throwable>.accept" 
"Runnable.run" -- "Consumer<String,Integer>.close" 
"AtomicInteger.decrementAndGet" -- "AtomicReference<Node>.get" 
"AtomicInteger.decrementAndGet" -- "Node.getNext" 
"AtomicInteger.decrementAndGet" -- "AtomicReference<Node>.compareAndSet" 
"AtomicInteger.<init>" -- "CountDownLatch.<init>" 
"AtomicInteger.<init>" -- "AtomicReference.<init>" 
"AtomicInteger.<init>" -- "Map<String>.get" 
"AtomicInteger.<init>" -- "HashMap<Long>.<init>" 
"AtomicInteger.<init>" -- "Map<Long>.size" 
"AtomicInteger.<init>" -- "Map<Long>.entrySet" 
"AtomicInteger.<init>" -- "Arrays.equals)" 
"AtomicInteger.<init>" -- "Optional<Entry<Long>>.isPresent" 
"AtomicInteger.<init>" -- "Optional<Entry<Long>>.get" 
"Function<>.apply" -- "Array.newInstance" 
"Function<>.apply" -- "String.endsWith" 
"Function<>.apply" -- "BigDecimal.longValue" 
"Function<>.apply" -- "Function<TemporalAccessor>.apply" 
"Function<>.apply" -- "BiFunction<ZoneId>.apply" 
"SimpleDateFormat.parse" -- "GregorianCalendar.<init>" 
"SimpleDateFormat.parse" -- "TimeZone.getTimeZone" 
"SimpleDateFormat.parse" -- "StringReader.<init>" 
"SimpleDateFormat.parse" -- "SimpleDateFormat.setTimeZone" 
"SimpleDateFormat.parse" -- "GregorianCalendar.setTime" 
"GregorianCalendar.<init>" -- "ArrayList<Date>.<init>" 
"GregorianCalendar.<init>" -- "Calendar.before" 
"GregorianCalendar.<init>" -- "List<Date>.add" 
"GregorianCalendar.<init>" -- "GregorianCalendar.setTime" 
"GregorianCalendar.isLeapYear" -- "GregorianCalendar.getInstance" 
"GregorianCalendar.isLeapYear" -- "GregorianCalendar.cast" 
"System.getProperty" -- "Class.getSimpleName" 
"System.getProperty" -- "Integer.valueOf" 
"System.getProperty" -- "File.getCanonicalPath" 
"System.getProperty" -- "File.getName" 
"System.getProperty" -- "File.exists" 
"System.getProperty" -- "File.mkdir" 
"System.getProperty" -- "ProcessBuilder.<init>" 
"System.getProperty" -- "ProcessBuilder.start" 
"System.getProperty" -- "Class.getName" 
"System.getProperty" -- "System.getenv" 
"System.getProperty" -- "System.setProperty" 
"System.getProperty" -- "FileSystems.getDefault" 
"System.getProperty" -- "Path.register" 
"System.getProperty" -- "WatchService.take" 
"System.getProperty" -- "WatchKey.pollEvents" 
"System.getProperty" -- "WatchEvent.context" 
"System.getProperty" -- "WatchEvent.kind" 
"System.getProperty" -- "WatchKey.reset" 
"System.getProperty" -- "WatchService.close" 
"System.getProperty" -- "File.canExecute" 
"System.getProperty" -- "Optional<String[]>.map" 
"System.getProperty" -- "Builder.setPrincipal" 
"System.getProperty" -- "FileAlterationObserver.<init>" 
"System.getProperty" -- "FileAlterationMonitor.<init>" 
"System.getProperty" -- "FileAlterationListenerAdaptor.<init>" 
"System.getProperty" -- "FileAlterationObserver.addListener" 
"System.getProperty" -- "FileAlterationMonitor.addObserver" 
"System.getProperty" -- "FileAlterationMonitor.start" 
"System.getProperty" -- "Context.addServletMappingDecoded" 
"System.getProperty" -- "Context.addFilterDef" 
"System.getProperty" -- "Context.addFilterMap" 
"System.getProperty" -- "OutputStream.close" 
"System.getProperty" -- "Optional.fromNullable" 
"System.getProperty" -- "Wrapper.setAsyncSupported" 
"Stream.spliterator" -- "BiConsumer<>.accept" 
"Stream.spliterator" -- "StreamSupport.stream" 
"StreamSupport.stream" -- "Iterable.spliterator" 
"StreamSupport.stream" -- "Duration.ofMillis" 
"StreamSupport.stream" -- "Consumer<String,Integer>.poll" 
"StreamSupport.stream" -- "Consumer<String,Integer>.commitSync" 
"StreamSupport.stream" -- "Consumer<Throwable>.accept" 
"StreamSupport.stream" -- "Consumer<String,Integer>.close" 
"Field.getAnnotation" -- "Field.getName" 
"Class.getDeclaredFields" -- "Field.setAccessible" 
"Class.getDeclaredFields" -- "Field.isAnnotationPresent" 
"Class.getDeclaredFields" -- "Field.get" 
"Field.setAccessible" -- "Field.isAnnotationPresent" 
"Field.setAccessible" -- "Field.get" 
"Field.setAccessible" -- "Method.setAccessible" 
"Field.setAccessible" -- "Annotation>,Annotation>.cast" 
"Field.setAccessible" -- "Annotation>,Annotation>.put" 
"Field.isAnnotationPresent" -- "Field.get" 
"Field.isAnnotationPresent" -- "Class.getSimpleName" 
"Field.isAnnotationPresent" -- "Field.getGenericType" 
"Field.isAnnotationPresent" -- "Field.getType" 
"Field.isAnnotationPresent" -- "Field.getDeclaredAnnotation" 
"Field.isAnnotationPresent" -- "Field.set" 
"Field.get" -- "Method.setAccessible" 
"Field.get" -- "Annotation>,Annotation>.cast" 
"Field.get" -- "Annotation>,Annotation>.put" 
"Class.getDeclaredMethods" -- "Method.isAnnotationPresent" 
"Class.getDeclaredMethods" -- "Method.setAccessible" 
"Method.isAnnotationPresent" -- "Method.setAccessible" 
"Method.setAccessible" -- "Annotation>,Annotation>.cast" 
"Method.setAccessible" -- "Annotation>,Annotation>.put" 
"Objects.isNull" -- "Class.isAnnotationPresent" 
"Objects.isNull" -- "Class.getSimpleName" 
"Objects.isNull" -- "Object.equals" 
"Objects.isNull" -- "ExecutorService.shutdownNow" 
"Objects.isNull" -- "PrintWriter.close" 
"Objects.isNull" -- "PrintWriter.println" 
"Objects.isNull" -- "PrintWriter.flush" 
"Objects.isNull" -- "Cache<String,Integer>.get" 
"Objects.isNull" -- "Cache<String,Integer>.put" 
"Objects.isNull" -- "PreparedStatement.setLong" 
"Objects.isNull" -- "PreparedStatement.setInt" 
"Objects.isNull" -- "PreparedStatement.setNull" 
"Objects.isNull" -- "Result.include" 
"Objects.isNull" -- "Result.redirectTo" 
"Objects.isNull" -- "Result.use" 
"Class.isAnnotationPresent" -- "Class.getSimpleName" 
"Class.getSimpleName" -- "Class.getName" 
"Class.getSimpleName" -- "Context.addServletMappingDecoded" 
"Class.getSimpleName" -- "Context.addFilterDef" 
"Class.getSimpleName" -- "Context.addFilterMap" 
"Class.getSimpleName" -- "Field.getGenericType" 
"Class.getSimpleName" -- "Field.getType" 
"Class.getSimpleName" -- "Field.getDeclaredAnnotation" 
"Class.getSimpleName" -- "Field.set" 
"ByteBuffer.wrap" -- "ByteBuffer.hasRemaining" 
"ByteBuffer.wrap" -- "ByteBuffer.get" 
"ByteBuffer.wrap" -- "SocketChannel.write" 
"ByteBuffer.wrap" -- "ByteBuffer.clear" 
"ByteBuffer.wrap" -- "SocketChannel.read" 
"ByteBuffer.wrap" -- "ByteBuffer.array" 
"ByteBuffer.wrap" -- "Storage.get" 
"ByteBuffer.wrap" -- "Blob.writer" 
"ByteBuffer.wrap" -- "WritableByteChannel.write" 
"ByteBuffer.wrap" -- "WritableByteChannel.close" 
"Stream<String>.toArray" -- "IntFunction<String[]>.<init>" 
"Plane.getClass" -- "Plane.cast" 
"LinkedHashSet<Integer>.<init>" -- "Set<Integer>.size" 
"LinkedHashSet<Integer>.<init>" -- "Set<Integer>.toArray" 
"Set<Integer>.size" -- "Set<Integer>.toArray" 
"Set<Integer>.size" -- "LinkedHashSet.<init>" 
"Set<Integer>.size" -- "HashSet<Integer>.<init>" 
"Set<Integer>.toArray" -- "LinkedHashSet.<init>" 
"Set<Integer>.toArray" -- "HashSet<Integer>.<init>" 
"HashSet<Integer>.<init>" -- "Map<Integer,Integer>.keySet" 
"HashSet<Integer>.<init>" -- "Map<Integer,Integer>.getOrDefault" 
"List<String>.contains" -- "Collections.synchronizedList" 
"List<String>.contains" -- "CharSequence.toString" 
"ArrayList<Integer>.set" -- "ArrayList<Integer>.get" 
"ArrayList<Integer>.set" -- "List<String>.indexOf" 
"ArrayList<Integer>.get" -- "List<String>.indexOf" 
"LinkedList<Character>.iterator" -- "Iterator<Character>.next" 
"LinkedList<Character>.iterator" -- "Iterator<Character>.remove" 
"Iterator<Character>.next" -- "Iterator<Character>.remove" 
"Iterator<String>.remove" -- "List<String>.listIterator" 
"Iterator<String>.remove" -- "ListIterator<String>.hasNext" 
"Iterator<String>.remove" -- "ListIterator<String>.nextIndex" 
"Iterator<String>.remove" -- "ListIterator<String>.next" 
"Iterator<String>.remove" -- "ListIterator<String>.set" 
"Iterator<String>.remove" -- "ListIterator<String>.add" 
"Iterator<String>.remove" -- "ListIterator<String>.hasPrevious" 
"Iterator<String>.remove" -- "ListIterator<String>.previousIndex" 
"Iterator<String>.remove" -- "ListIterator<String>.previous" 
"Iterator<String>.remove" -- "ListIterator<String>.forEachRemaining" 
"Iterator<String>.remove" -- "Collection<String>.add" 
"Iterator<String>.remove" -- "Collection<String>.iterator" 
"Iterator<String>.remove" -- "List<String>.remove" 
"Iterator<String>.remove" -- "List<String>.removeIf" 
"List<String>.listIterator" -- "ListIterator<String>.hasNext" 
"List<String>.listIterator" -- "ListIterator<String>.nextIndex" 
"List<String>.listIterator" -- "ListIterator<String>.next" 
"List<String>.listIterator" -- "ListIterator<String>.set" 
"List<String>.listIterator" -- "ListIterator<String>.add" 
"List<String>.listIterator" -- "ListIterator<String>.hasPrevious" 
"List<String>.listIterator" -- "ListIterator<String>.previousIndex" 
"List<String>.listIterator" -- "ListIterator<String>.previous" 
"List<String>.listIterator" -- "ListIterator<String>.forEachRemaining" 
"List<String>.listIterator" -- "ListIterator.hasPrevious" 
"List<String>.listIterator" -- "ListIterator.previous" 
"ListIterator<String>.hasNext" -- "ListIterator<String>.nextIndex" 
"ListIterator<String>.hasNext" -- "ListIterator<String>.next" 
"ListIterator<String>.hasNext" -- "ListIterator<String>.set" 
"ListIterator<String>.hasNext" -- "ListIterator<String>.add" 
"ListIterator<String>.hasNext" -- "ListIterator<String>.hasPrevious" 
"ListIterator<String>.hasNext" -- "ListIterator<String>.previousIndex" 
"ListIterator<String>.hasNext" -- "ListIterator<String>.previous" 
"ListIterator<String>.hasNext" -- "ListIterator<String>.forEachRemaining" 
"ListIterator<String>.nextIndex" -- "ListIterator<String>.next" 
"ListIterator<String>.nextIndex" -- "ListIterator<String>.set" 
"ListIterator<String>.nextIndex" -- "ListIterator<String>.add" 
"ListIterator<String>.nextIndex" -- "ListIterator<String>.hasPrevious" 
"ListIterator<String>.nextIndex" -- "ListIterator<String>.previousIndex" 
"ListIterator<String>.nextIndex" -- "ListIterator<String>.previous" 
"ListIterator<String>.nextIndex" -- "ListIterator<String>.forEachRemaining" 
"ListIterator<String>.next" -- "ListIterator<String>.set" 
"ListIterator<String>.next" -- "ListIterator<String>.add" 
"ListIterator<String>.next" -- "ListIterator<String>.hasPrevious" 
"ListIterator<String>.next" -- "ListIterator<String>.previousIndex" 
"ListIterator<String>.next" -- "ListIterator<String>.previous" 
"ListIterator<String>.next" -- "ListIterator<String>.forEachRemaining" 
"ListIterator<String>.set" -- "ListIterator<String>.add" 
"ListIterator<String>.set" -- "ListIterator<String>.hasPrevious" 
"ListIterator<String>.set" -- "ListIterator<String>.previousIndex" 
"ListIterator<String>.set" -- "ListIterator<String>.previous" 
"ListIterator<String>.set" -- "ListIterator<String>.forEachRemaining" 
"ListIterator<String>.add" -- "ListIterator<String>.hasPrevious" 
"ListIterator<String>.add" -- "ListIterator<String>.previousIndex" 
"ListIterator<String>.add" -- "ListIterator<String>.previous" 
"ListIterator<String>.add" -- "ListIterator<String>.forEachRemaining" 
"ListIterator<String>.hasPrevious" -- "ListIterator<String>.previousIndex" 
"ListIterator<String>.hasPrevious" -- "ListIterator<String>.previous" 
"ListIterator<String>.hasPrevious" -- "ListIterator<String>.forEachRemaining" 
"ListIterator<String>.previousIndex" -- "ListIterator<String>.previous" 
"ListIterator<String>.previousIndex" -- "ListIterator<String>.forEachRemaining" 
"ListIterator<String>.previous" -- "ListIterator<String>.forEachRemaining" 
"CopyOnWriteArrayList.indexOf" -- "CopyOnWriteArrayList.add" 
"Map<Long>.containsKey" -- "Map<Long>.put" 
"Map<Long>.containsKey" -- "Map<Long>.get" 
"Map<Long>.put" -- "Map<Long>.get" 
"Map<Long>.put" -- "Map<Long>.getOrDefault" 
"Map<Long>.put" -- "AtomicLong.incrementAndGet" 
"Map<Long>.put" -- "HashMap<Long>.<init>" 
"LinkedList.iterator" -- "Iterator.remove" 
"Collections.synchronizedList" -- "CountDownLatch.<init>" 
"Collections.synchronizedList" -- "List<Long>.add" 
"Stream.concat" -- "List<Object>.stream" 
"Stream.concat" -- "Set<Object>.stream" 
"Stream.concat" -- "Map<String>.entrySet" 
"Stream.concat" -- "Stream<Character>.collect" 
"Stream.concat" -- "List<Character>.stream" 
"Map<String,String>.merge" -- "Map<String,String>.forEach" 
"Map<String,String>.forEach" -- "Map<String,String>.size" 
"Map<String,String>.forEach" -- "Message.getText" 
"Collection.instance" -- "Collection.cast" 
"Collection.instance" -- "Collection.size" 
"Collection.instance" -- "MultiValueMap<String,String>.add" 
"Collection.instance" -- "Collection.isEmpty" 
"Collection.instance" -- "Date.instance" 
"Collection.instance" -- "Date.cast" 
"Collection.cast" -- "Collection.size" 
"Collection.cast" -- "Product.cast" 
"Collection.cast" -- "MultiValueMap<String,String>.add" 
"Collection.cast" -- "Query.execute" 
"Collection.cast" -- "Collection.iterator" 
"Collection.cast" -- "Product.setName" 
"Collection.cast" -- "Iterator<Map<String,Object>>.hasNext" 
"Collection.cast" -- "Iterator<Map<String,Object>>.next" 
"Collection.cast" -- "List<Map<String,Object>>.indexOf" 
"Collection.cast" -- "Collection.isEmpty" 
"Collection.cast" -- "Date.instance" 
"Collection.cast" -- "Date.cast" 
"Collection<String>.add" -- "Collection<String>.removeIf" 
"Collection<String>.add" -- "Collection<String>.iterator" 
"Collection<String>.add" -- "Map<Boolean,List<String>>.get" 
"Collection<String>.add" -- "Collection<String>.addAll" 
"Collection<String>.add" -- "Collection<String>.toArray" 
"List.indexOf" -- "Vector.add" 
"Vector.<init>" -- "Vector<String>.add" 
"Vector.<init>" -- "Vector<String>.elements" 
"Vector.<init>" -- "Enumeration.hasMoreElements" 
"Vector.<init>" -- "Enumeration.nextElement" 
"Vector.<init>" -- "Vector<String>.iterator" 
"Vector<String>.add" -- "Vector<String>.elements" 
"Vector<String>.add" -- "Enumeration.hasMoreElements" 
"Vector<String>.add" -- "Enumeration.nextElement" 
"Vector<String>.add" -- "Vector<String>.iterator" 
"Vector<String>.elements" -- "Enumeration.hasMoreElements" 
"Vector<String>.elements" -- "Enumeration.nextElement" 
"Vector<String>.elements" -- "Vector<String>.iterator" 
"Enumeration.hasMoreElements" -- "Enumeration.nextElement" 
"Enumeration.hasMoreElements" -- "Vector<String>.iterator" 
"Enumeration.hasMoreElements" -- "StringBuffer.length" 
"Enumeration.nextElement" -- "Vector<String>.iterator" 
"Enumeration.nextElement" -- "StringBuffer.length" 
"Set.contains" -- "Set.stream" 
"ArrayList<Integer>.<init>" -- "ArrayList<ArrayList<Integer>>.add" 
"ArrayList<Integer>.<init>" -- "ArrayList<ArrayList<Integer>>.get" 
"ArrayList<Integer>.<init>" -- "ArrayList<ArrayList<Integer>>.size" 
"ArrayList<Integer>.<init>" -- "String.indexOf" 
"ArrayList<Integer>.<init>" -- "List<ArrayList<Integer>>.add" 
"ArrayList<Integer>.<init>" -- "List<ArrayList<Integer>>.size" 
"ArrayList<Integer>.<init>" -- "List<ArrayList<Integer>>.get" 
"ConcurrentHashMap.<init>" -- "ConcurrentHashMap<String,Integer>.put" 
"ConcurrentHashMap.<init>" -- "ConcurrentHashMap<String,Integer>.keySet" 
"ConcurrentHashMap.<init>" -- "ConcurrentHashMap<String,Integer>.size" 
"ConcurrentHashMap.<init>" -- "Map<String,String>.computeIfAbsent" 
"ConcurrentHashMap.<init>" -- "Map<String,String>.putIfAbsent" 
"ConcurrentHashMap.<init>" -- "Map<Object,Boolean>.putIfAbsent" 
"ConcurrentHashMap<String,Integer>.put" -- "ConcurrentHashMap<String,Integer>.keySet" 
"ConcurrentHashMap<String,Integer>.put" -- "ConcurrentHashMap<String,Integer>.size" 
"ConcurrentHashMap<String,Integer>.keySet" -- "ConcurrentHashMap<String,Integer>.size" 
"ArrayList<Integer>.iterator" -- "Iterator<Integer>.hasNext" 
"ArrayList<Integer>.iterator" -- "Iterator<Integer>.next" 
"ArrayList<Integer>.iterator" -- "Iterator<Integer>.remove" 
"Iterator<Integer>.hasNext" -- "Iterator<Integer>.next" 
"Iterator<Integer>.hasNext" -- "Iterator<Integer>.remove" 
"Iterator<Integer>.hasNext" -- "List<Integer>.iterator" 
"Iterator<Integer>.next" -- "Iterator<Integer>.remove" 
"Iterator<Integer>.next" -- "List<Integer>.iterator" 
"Iterator<Integer>.remove" -- "List<Integer>.iterator" 
"Collections.sort" -- "Map<String>.keySet" 
"Collections.sort" -- "TimeZone.getAvailableIDs" 
"Collections.sort" -- "TimeZone.getTimeZone" 
"Collections.sort" -- "TimeZone.getRawOffset" 
"ArrayList<String>.cast" -- "Files.readAllLines" 
"List<String>.remove" -- "List<String>.removeIf" 
"ArrayList<ArrayList<Integer>>.add" -- "ArrayList<ArrayList<Integer>>.get" 
"ArrayList<ArrayList<Integer>>.add" -- "ArrayList<ArrayList<Integer>>.size" 
"ArrayList<ArrayList<Integer>>.get" -- "ArrayList<ArrayList<Integer>>.size" 
"ArrayList<ArrayList<String>>.<init>" -- "ArrayList<ArrayList<ArrayList<String>>>.add" 
"ArrayList<ArrayList<String>>.<init>" -- "ArrayList<ArrayList<ArrayList<String>>>.get" 
"ArrayList<ArrayList<ArrayList<String>>>.add" -- "ArrayList<ArrayList<ArrayList<String>>>.get" 
"ReverseListIterator.<init>" -- "ReverseListIterator.hasNext" 
"ReverseListIterator.<init>" -- "ReverseListIterator.next" 
"ReverseListIterator.hasNext" -- "ReverseListIterator.next" 
"ListIterator.hasPrevious" -- "ListIterator.previous" 
"List<Integer>.iterator" -- "Iterable<Integer>.cast" 
"List<Integer>.iterator" -- "OptionalLong.of" 
"List<Integer>.iterator" -- "OptionalInt.of" 
"List<Integer>.iterator" -- "OptionalDouble.of" 
"Predicate<String>.<init>" -- "Iterable<String>.iterator" 
"Pattern.compile" -- "Pattern.matcher" 
"Pattern.compile" -- "Scanner.nextLine" 
"Pattern.compile" -- "Scanner.next" 
"Pattern.compile" -- "Scanner.nextDouble" 
"Pattern.compile" -- "BufferedReader.readLine" 
"Pattern.compile" -- "Scanner.hasNextInt" 
"Pattern.compile" -- "Scanner.hasNext" 
"Pattern.compile" -- "Matcher.find" 
"Pattern.compile" -- "Matcher.group" 
"Pattern.compile" -- "Pattern.quote" 
"Pattern.matcher" -- "Matcher.find" 
"Pattern.matcher" -- "Matcher.start" 
"Pattern.matcher" -- "Function<Matcher,String>.apply" 
"Pattern.matcher" -- "Matcher.end" 
"Pattern.matcher" -- "Matcher.group" 
"Pattern.matcher" -- "Matcher.matches" 
"Pattern.matcher" -- "Base64.getUrlDecoder" 
"Pattern.matcher" -- "Map<String>.containsKey" 
"Pattern.matcher" -- "Enum.name" 
"Pattern.matcher" -- "Page.getWebURL" 
"Pattern.matcher" -- "Page.getParseData" 
"Pattern.matcher" -- "Page.getContentData" 
"Pattern.matcher" -- "RowSet.isAfterLast" 
"Pattern.matcher" -- "RowSet.getString" 
"Pattern.matcher" -- "Pattern.toString" 
"Pattern.matcher" -- "Deque<String>.peek" 
"Pattern.matcher" -- "Deque<String>.isEmpty" 
"Pattern.matcher" -- "Deque<String>.pop" 
"Pattern.matcher" -- "Deque<Object>.push" 
"Pattern.matcher" -- "Deque<String>.push" 
"List<String>.isEmpty" -- "Collections.frequency" 
"List<String>.isEmpty" -- "List<String>.retainAll" 
"List<String>.isEmpty" -- "Response.seeOther" 
"HashSet<String>.<init>" -- "HashSet<String>.size" 
"Collectors.counting" -- "Collectors.groupingBy" 
"Collectors.counting" -- "Function.identity" 
"Collectors.counting" -- "Stream<Character>.collect" 
"Collectors.counting" -- "Map<Character,Long>.values" 
"Collectors.counting" -- "Map<Character,Long>.size" 
"Collectors.groupingBy" -- "Function.identity" 
"Collectors.groupingBy" -- "EnumMap.<init>" 
"Collectors.groupingBy" -- "Stream<Character>.collect" 
"Collectors.groupingBy" -- "Map<Character,Long>.values" 
"Collectors.groupingBy" -- "Map<Character,Long>.size" 
"Collectors.groupingBy" -- "Collectors.toCollection" 
"Function.identity" -- "Stream<Character>.collect" 
"Function.identity" -- "Map<Character,Long>.values" 
"Function.identity" -- "Map<Character,Long>.size" 
"Function.identity" -- "Book.setId" 
"Function.identity" -- "Book.getId" 
"Function.identity" -- "List<Book>.stream" 
"Function.identity" -- "Map<Long,Book>.putAll" 
"Map<>.entrySet" -- "Entry<>.getKey" 
"Map<>.entrySet" -- "Optional<Entry<>>.get" 
"Map<>.entrySet" -- "Comparator<Entry<>>.<init>" 
"Map<Integer>.keySet" -- "Map<Integer>.get" 
"Map<Integer>.keySet" -- "StringBuilder.delete" 
"Map<Integer>.get" -- "StringBuilder.delete" 
"HashMap<String>.clone" -- "HashMap<String>.cast" 
"HashMap<String>.cast" -- "HashMap<String>.entrySet" 
"HashMap<String>.cast" -- "Set<Entry<String>>.stream" 
"HashMap<String>.entrySet" -- "Set<Entry<String>>.stream" 
"HashMap<String>.entrySet" -- "HashMap<String>.<init>" 
"HashMap<String>.entrySet" -- "Entry<String>.getValue" 
"HashMap<String>.entrySet" -- "Entry<String>.getKey" 
"HashMap<String>.entrySet" -- "HashMap<String>.put" 
"HashMap<String>.<init>" -- "HashMap<String>.putAll" 
"HashMap<String>.<init>" -- "Entry<String>.getValue" 
"HashMap<String>.<init>" -- "Entry<String>.getKey" 
"HashMap<String>.<init>" -- "HashMap<String>.put" 
"HashMap<String>.<init>" -- "TimeZone.getTimeZone" 
"HashMap<String>.<init>" -- "Resource.exists" 
"HashMap<String>.<init>" -- "Resource.getFilename" 
"HashMap<String>.<init>" -- "Collections.unmodifiableMap" 
"Entry<String>.getValue" -- "Entry<String>.getKey" 
"Entry<String>.getValue" -- "HashMap<String>.put" 
"Entry<String>.getValue" -- "Map<String>.entrySet" 
"Entry<String>.getValue" -- "Iterator<Entry<String>>.hasNext" 
"Entry<String>.getValue" -- "Iterator<Entry<String>>.next" 
"Entry<String>.getValue" -- "Entry<String>>.hasNext" 
"Entry<String>.getValue" -- "Entry<String>>.next" 
"Entry<String>.getValue" -- "Collection.contains" 
"Entry<String>.getValue" -- "Entry<String>>.remove" 
"Entry<String>.getKey" -- "HashMap<String>.put" 
"Entry<String>.getKey" -- "Map<String>.entrySet" 
"Entry<String>.getKey" -- "Map<String>.get" 
"Entry<String>.getKey" -- "Iterator<Entry<String>>.hasNext" 
"Entry<String>.getKey" -- "Iterator<Entry<String>>.next" 
"Entry<String>.getKey" -- "Entry<String>>.hasNext" 
"Entry<String>.getKey" -- "Entry<String>>.next" 
"Entry<String>.getKey" -- "Collection.contains" 
"Entry<String>.getKey" -- "Entry<String>>.remove" 
"Entry<String>.getKey" -- "Parameter.<init>" 
"SimpleImmutableEntry.<init>" -- "AbstractMap.SimpleImmutableEntry<>,new" 
"SimpleEntry.<init>" -- "AbstractMap.SimpleEntry<>,new" 
"Map<String,Integer>.entrySet" -- "Entry<String,Integer>>.hasNext" 
"Map<String,Integer>.entrySet" -- "Entry<String,Integer>>.next" 
"Map<String,Integer>.entrySet" -- "Entry<String,Integer>.getValue" 
"Map<String,Integer>.entrySet" -- "Entry<String,Integer>.getKey" 
"Entry<String,Integer>>.hasNext" -- "Entry<String,Integer>>.next" 
"Entry<String,Integer>>.hasNext" -- "Entry<String,Integer>.getValue" 
"Entry<String,Integer>>.hasNext" -- "Entry<String,Integer>.getKey" 
"Entry<String,Integer>>.next" -- "Entry<String,Integer>.getValue" 
"Entry<String,Integer>>.next" -- "Entry<String,Integer>.getKey" 
"Entry<String,Integer>.getValue" -- "Entry<String,Integer>.getKey" 
"Map<String,Integer>.forEach" -- "List<<String,String>>.size" 
"Map<String,Integer>.forEach" -- "List<<String,String>>.get" 
"Map<String,Integer>.forEach" -- "Map<>.put" 
"HashMap<Integer,Integer>.<init>" -- "Map<Integer,Integer>.put" 
"HashMap<Integer,Integer>.<init>" -- "Map<Integer,Integer>.get" 
"Map<Integer,Integer>.put" -- "Map<Integer,Integer>.containsKey" 
"Map<Integer,Integer>.put" -- "Map<Integer,Integer>.get" 
"Map<Integer,Integer>.put" -- "Map<Integer,Integer>.containsValue" 
"Map<String>.forEach" -- "Map<String>.merge" 
"Map<String>.forEach" -- "Map<String>.entrySet" 
"Map<String>.merge" -- "Map<String>.entrySet" 
"Map<String>.entrySet" -- "Map<String>.get" 
"Map<String>.entrySet" -- "Entry<String>>.hasNext" 
"Map<String>.entrySet" -- "Entry<String>>.next" 
"Map<String>.entrySet" -- "Collection.contains" 
"Map<String>.entrySet" -- "Entry<String>>.remove" 
"Map<String>.entrySet" -- "Parameter.<init>" 
"Entry>.hasNext" -- "Entry>.next" 
"Entry>.hasNext" -- "Entry.getBooleanValue" 
"Entry>.hasNext" -- "Entry.getIntKey" 
"Entry>.next" -- "Entry.getBooleanValue" 
"Entry>.next" -- "Entry.getIntKey" 
"Entry.getBooleanValue" -- "Entry.getIntKey" 
"HashMap<String,Product>.compute" -- "HashMap<String,Product>.containsKey" 
"HashMap<String,Product>.compute" -- "HashMap<String,Product>.get" 
"HashMap<String,Product>.compute" -- "HashMap<String,Product>.put" 
"HashMap<String,Product>.containsKey" -- "HashMap<String,Product>.get" 
"HashMap<String,Product>.containsKey" -- "HashMap<String,Product>.put" 
"HashMap<String,Product>.containsKey" -- "Product.getTags" 
"HashMap<String,Product>.containsKey" -- "HashMap<String,Product>.merge" 
"HashMap<String,Product>.containsKey" -- "HashMap<String,Product>.putIfAbsent" 
"HashMap<String,Product>.containsKey" -- "HashMap<String,Product>.getOrDefault" 
"HashMap<String,Product>.get" -- "HashMap<String,Product>.put" 
"HashMap<String,Product>.get" -- "Product.getTags" 
"HashMap<String,Product>.get" -- "HashMap<String,Product>.merge" 
"HashMap<String,Product>.get" -- "HashMap<String,Product>.getOrDefault" 
"HashMap<String,Product>.put" -- "Product.getTags" 
"HashMap<String,Product>.put" -- "HashMap<String,Product>.merge" 
"HashMap<String,Product>.put" -- "HashMap<String,Product>.putIfAbsent" 
"Product.getTags" -- "HashMap<String,Product>.merge" 
"Product.getTags" -- "Product.addAll" 
"HashMap<String,Product>.forEach" -- "HashMap<String,Product>.entrySet" 
"HashMap<String,Product>.forEach" -- "Entry<String,Product>.getValue" 
"HashMap<String,Product>.forEach" -- "Entry<String,Product>.getKey" 
"HashMap<String,Product>.entrySet" -- "Entry<String,Product>.getValue" 
"HashMap<String,Product>.entrySet" -- "Entry<String,Product>.getKey" 
"Entry<String,Product>.getValue" -- "Entry<String,Product>.getKey" 
"Product.getClass" -- "Product.cast" 
"Product.cast" -- "Query.execute" 
"Product.cast" -- "Collection.iterator" 
"Product.cast" -- "Product.setName" 
"Map<String>.keySet" -- "Map<String>.get" 
"Map<String>.keySet" -- "ArrayList<String>.get" 
"Map<String>.keySet" -- "Label.setOutputMarkupId" 
"TreeMap.<init>" -- "TreeMap<String>.putAll" 
"TreeMap.<init>" -- "TreeMap<String>.entrySet" 
"TreeMap.<init>" -- "Map.values" 
"TreeMap.<init>" -- "Map.keySet" 
"TreeMap<String>.putAll" -- "TreeMap<String>.entrySet" 
"EnumSet.allOf" -- "EnumSet.noneOf" 
"EnumSet.allOf" -- "EnumSet.of" 
"EnumSet.allOf" -- "EnumSet.complementOf" 
"EnumSet.allOf" -- "EnumSet.range" 
"EnumSet.allOf" -- "EnumSet.copyOf" 
"EnumSet.allOf" -- "List<Color>.add" 
"EnumSet.allOf" -- "EnumSet<Color>.add" 
"EnumSet.allOf" -- "EnumSet<Color>.contains" 
"EnumSet.allOf" -- "EnumSet<Color>.forEach" 
"EnumSet.allOf" -- "EnumSet<Color>.remove" 
"EnumSet.noneOf" -- "EnumSet.of" 
"EnumSet.noneOf" -- "EnumSet.complementOf" 
"EnumSet.noneOf" -- "EnumSet.range" 
"EnumSet.noneOf" -- "EnumSet.copyOf" 
"EnumSet.noneOf" -- "List<Color>.add" 
"EnumSet.noneOf" -- "EnumSet<Color>.add" 
"EnumSet.noneOf" -- "EnumSet<Color>.contains" 
"EnumSet.noneOf" -- "EnumSet<Color>.forEach" 
"EnumSet.noneOf" -- "EnumSet<Color>.remove" 
"EnumSet.of" -- "EnumSet.complementOf" 
"EnumSet.of" -- "EnumSet.range" 
"EnumSet.of" -- "EnumSet.copyOf" 
"EnumSet.of" -- "List<Color>.add" 
"EnumSet.of" -- "EnumSet<Color>.add" 
"EnumSet.of" -- "EnumSet<Color>.contains" 
"EnumSet.of" -- "EnumSet<Color>.forEach" 
"EnumSet.of" -- "EnumSet<Color>.remove" 
"EnumSet.of" -- "Environment.acceptsProfiles" 
"EnumSet.of" -- "Environment.getActiveProfiles" 
"EnumSet.of" -- "Object[].cast" 
"EnumSet.complementOf" -- "EnumSet.range" 
"EnumSet.complementOf" -- "EnumSet.copyOf" 
"EnumSet.complementOf" -- "List<Color>.add" 
"EnumSet.complementOf" -- "EnumSet<Color>.add" 
"EnumSet.complementOf" -- "EnumSet<Color>.contains" 
"EnumSet.complementOf" -- "EnumSet<Color>.forEach" 
"EnumSet.complementOf" -- "EnumSet<Color>.remove" 
"EnumSet.range" -- "EnumSet.copyOf" 
"EnumSet.range" -- "List<Color>.add" 
"EnumSet.range" -- "EnumSet<Color>.add" 
"EnumSet.range" -- "EnumSet<Color>.contains" 
"EnumSet.range" -- "EnumSet<Color>.forEach" 
"EnumSet.range" -- "EnumSet<Color>.remove" 
"EnumSet.copyOf" -- "List<Color>.add" 
"EnumSet.copyOf" -- "EnumSet<Color>.add" 
"EnumSet.copyOf" -- "EnumSet<Color>.contains" 
"EnumSet.copyOf" -- "EnumSet<Color>.forEach" 
"EnumSet.copyOf" -- "EnumSet<Color>.remove" 
"List<Color>.add" -- "EnumSet<Color>.add" 
"List<Color>.add" -- "EnumSet<Color>.contains" 
"List<Color>.add" -- "EnumSet<Color>.forEach" 
"List<Color>.add" -- "EnumSet<Color>.remove" 
"EnumSet<Color>.add" -- "EnumSet<Color>.contains" 
"EnumSet<Color>.add" -- "EnumSet<Color>.forEach" 
"EnumSet<Color>.add" -- "EnumSet<Color>.remove" 
"EnumSet<Color>.contains" -- "EnumSet<Color>.forEach" 
"EnumSet<Color>.contains" -- "EnumSet<Color>.remove" 
"EnumSet<Color>.forEach" -- "EnumSet<Color>.remove" 
"HashSet.clone" -- "Set.cast" 
"Monitor.enter" -- "Monitor.leave" 
"Monitor.leave" -- "Monitor.newGuard" 
"Monitor.leave" -- "Monitor.enterWhen" 
"ReentrantLock.lock" -- "ReentrantLock.unlock" 
"ReentrantLock.lock" -- "Condition.await" 
"ReentrantLock.lock" -- "Condition.signalAll" 
"ReentrantLock.unlock" -- "Condition.await" 
"ReentrantLock.unlock" -- "Condition.signalAll" 
"ReentrantLock.unlock" -- "ReentrantLock.tryLock" 
"Semaphore.acquire" -- "Semaphore.release" 
"Semaphore.release" -- "Semaphore.availablePermits" 
"Semaphore.release" -- "Semaphore.tryAcquire" 
"Semaphore.release" -- "Semaphore.getQueueLength" 
"AtomicInteger.compareAndSet" -- "ThreadLocal<Integer>.get" 
"AtomicInteger.compareAndSet" -- "ThreadLocal<Integer>.set" 
"CyclicBarrier.<init>" -- "ExecutorService.execute" 
"CyclicBarrier.<init>" -- "CyclicBarrier.await" 
"CyclicBarrier.<init>" -- "ExecutorService.shutdown" 
"CyclicBarrier.<init>" -- "ExecutorService.awaitTermination" 
"CyclicBarrier.<init>" -- "Thread.setName" 
"CyclicBarrier.<init>" -- "CyclicBarrier.isBroken" 
"CyclicBarrier.<init>" -- "CyclicBarrier.getNumberWaiting" 
"CyclicBarrier.<init>" -- "Task.<init>" 
"ExecutorService.execute" -- "CyclicBarrier.await" 
"ExecutorService.execute" -- "ExecutorService.shutdown" 
"ExecutorService.execute" -- "ExecutorService.awaitTermination" 
"ExecutorService.execute" -- "Writer.<init>" 
"ExecutorService.execute" -- "Reader.<init>" 
"ExecutorService.execute" -- "CountDownLatch.<init>" 
"ExecutorService.execute" -- "CountDownLatch.getCount" 
"ExecutorService.execute" -- "CyclicBarrier.getNumberWaiting" 
"ExecutorService.execute" -- "PriorityBlockingQueue.<init>" 
"ExecutorService.execute" -- "PriorityBlockingQueue.take" 
"ExecutorService.execute" -- "Executors.newSingleThreadExecutor" 
"CyclicBarrier.await" -- "ExecutorService.shutdown" 
"CyclicBarrier.await" -- "ExecutorService.awaitTermination" 
"CyclicBarrier.await" -- "CyclicBarrier.isBroken" 
"CyclicBarrier.await" -- "CyclicBarrier.getNumberWaiting" 
"ExecutorService.shutdown" -- "ExecutorService.awaitTermination" 
"ExecutorService.shutdown" -- "ExecutorService.submit" 
"ExecutorService.shutdown" -- "Writer.<init>" 
"ExecutorService.shutdown" -- "Reader.<init>" 
"ExecutorService.shutdown" -- "CountDownLatch.<init>" 
"ExecutorService.shutdown" -- "CountDownLatch.getCount" 
"ExecutorService.shutdown" -- "CyclicBarrier.getNumberWaiting" 
"ExecutorService.shutdown" -- "ExecutorService.shutdownNow" 
"ExecutorService.shutdown" -- "Task.<init>" 
"ExecutorService.shutdown" -- "Executors.newSingleThreadExecutor" 
"ExecutorService.shutdown" -- "LinkedBlockingQueue.<init>" 
"ExecutorService.shutdown" -- "Future<Double>.get" 
"ExecutorService.shutdown" -- "Future<Double>.isDone" 
"ExecutorService.shutdown" -- "Builder.setInitialIntervalMillis" 
"ExecutorService.shutdown" -- "Future.get" 
"ExecutorService.awaitTermination" -- "ExecutorService.submit" 
"ExecutorService.awaitTermination" -- "CyclicBarrier.getNumberWaiting" 
"ExecutorService.awaitTermination" -- "ExecutorService.shutdownNow" 
"ExecutorService.awaitTermination" -- "Task.<init>" 
"System.nanoTime" -- "Method.getName" 
"System.nanoTime" -- "Map<String,Method>.get" 
"System.nanoTime" -- "Query.getResultList" 
"Condition.await" -- "Condition.signalAll" 
"ExecutorService.submit" -- "ThreadPoolExecutor.cast" 
"ExecutorService.submit" -- "Runnable.cast" 
"ExecutorService.submit" -- "ExecutorService.shutdownNow" 
"ExecutorService.submit" -- "Future<Long>.isDone" 
"ExecutorService.submit" -- "Task.<init>" 
"ExecutorService.submit" -- "Future<String>.cancel" 
"ExecutorService.submit" -- "Future<String>.get" 
"ExecutorService.submit" -- "Future<String>.isCancelled" 
"ExecutorService.submit" -- "Future<String>.isDone" 
"ExecutorService.submit" -- "Executors.newSingleThreadExecutor" 
"ExecutorService.submit" -- "LinkedBlockingQueue.<init>" 
"ExecutorService.submit" -- "Future<Double>.get" 
"ExecutorService.submit" -- "Future<Double>.isDone" 
"StampedLock.tryOptimisticRead" -- "StampedLock.validate" 
"StampedLock.tryOptimisticRead" -- "StampedLock.readLock" 
"StampedLock.tryOptimisticRead" -- "StampedLock.unlock" 
"StampedLock.validate" -- "StampedLock.readLock" 
"StampedLock.validate" -- "StampedLock.unlock" 
"StampedLock.readLock" -- "StampedLock.unlock" 
"StampedLock.readLock" -- "StampedLock.unlockRead" 
"StampedLock.writeLock" -- "StampedLock.unlockWrite" 
"Writer.<init>" -- "Reader.<init>" 
"Lock.lock" -- "Lock.unlock" 
"Lock.lock" -- "Map<String,String>.remove" 
"Lock.unlock" -- "Map<String,String>.remove" 
"Map<String,String>.remove" -- "System.gc" 
"Map<String,String>.remove" -- "Map<String,String>.size" 
"Phaser.getPhase" -- "Phaser.arriveAndAwaitAdvance" 
"Phaser.getPhase" -- "Phaser.arriveAndDeregister" 
"Phaser.arriveAndAwaitAdvance" -- "Phaser.arriveAndDeregister" 
"Context.<init>" -- "Map<Integer,Context>.put" 
"Context.<init>" -- "ThreadLocal<Context>.set" 
"Context.<init>" -- "ThreadLocal<Context>.get" 
"Context.<init>" -- "Context.setVariable" 
"Context.<init>" -- "Select.<init>" 
"Context.<init>" -- "Expression.interpret" 
"Context.<init>" -- "Context.setVariables" 
"ThreadLocal<Context>.set" -- "ThreadLocal<Context>.get" 
"ThreadPoolExecutor.cast" -- "Runnable.cast" 
"ThreadPoolExecutor.cast" -- "Executors.newScheduledThreadPool" 
"ThreadPoolExecutor.cast" -- "Executors.newCachedThreadPool" 
"ThreadPoolExecutor.cast" -- "LinkedBlockingQueue<Runnable>.<init>" 
"ThreadPoolExecutor.cast" -- "ThreadPoolExecutor.<init>" 
"ThreadPoolExecutor.cast" -- "ThreadPoolExecutor.setMaximumPoolSize" 
"ThreadPoolExecutor.cast" -- "ScheduledThreadPoolExecutor.cast" 
"CountDownLatch.<init>" -- "CountDownLatch.getCount" 
"CountDownLatch.<init>" -- "Map<String>.get" 
"CountDownLatch.<init>" -- "List<Long>.add" 
"CountDownLatch.<init>" -- "HashMap<Long>.<init>" 
"CountDownLatch.<init>" -- "Map<Long>.size" 
"CountDownLatch.<init>" -- "Map<Long>.entrySet" 
"CountDownLatch.<init>" -- "Arrays.equals)" 
"CountDownLatch.<init>" -- "Optional<Entry<Long>>.isPresent" 
"CountDownLatch.<init>" -- "Optional<Entry<Long>>.get" 
"CyclicBarrier.isBroken" -- "Task.<init>" 
"Printer.wait" -- "Printer.notify" 
"Printer.printEven" -- "Printer.printOdd" 
"ExecutorService.shutdownNow" -- "Task.<init>" 
"PriorityBlockingQueue.<init>" -- "PriorityBlockingQueue.take" 
"Semaphore.availablePermits" -- "Semaphore.tryAcquire" 
"Semaphore.availablePermits" -- "Semaphore.getQueueLength" 
"Semaphore.tryAcquire" -- "Semaphore.getQueueLength" 
"ThreadLocal<Integer>.get" -- "ThreadLocal<Integer>.set" 
"CompletableFuture<String>.thenComposeAsync" -- "CompletableFuture<Void>.get" 
"AtomicReference<Node>.get" -- "Node.getNext" 
"AtomicReference<Node>.get" -- "AtomicReference<Node>.compareAndSet" 
"AtomicReference<Node>.get" -- "Node.setPrevious" 
"Node.getNext" -- "AtomicReference<Node>.compareAndSet" 
"AtomicReference<Node>.compareAndSet" -- "Node.setPrevious" 
"Invoker.<init>" -- "Executor.execute" 
"Executor.execute" -- "Executors.newSingleThreadExecutor" 
"Executor.execute" -- "AtomicLong.addAndGet" 
"Future<String>.cancel" -- "Future<String>.get" 
"Future<String>.cancel" -- "Future<String>.isCancelled" 
"Future<String>.cancel" -- "Future<String>.isDone" 
"Future<String>.get" -- "Future<String>.isCancelled" 
"Future<String>.get" -- "Future<String>.isDone" 
"Future<String>.isCancelled" -- "Future<String>.isDone" 
"Executors.newSingleThreadExecutor" -- "Builder.setInitialIntervalMillis" 
"Executors.newSingleThreadExecutor" -- "Future.get" 
"Executors.newScheduledThreadPool" -- "Function<ScheduledExecutorService,Void>.apply" 
"Executors.newScheduledThreadPool" -- "ScheduledExecutorService.shutdown" 
"Executors.newScheduledThreadPool" -- "ScheduledExecutorService.scheduleAtFixedRate" 
"Executors.newScheduledThreadPool" -- "ScheduledExecutorService.schedule" 
"Executors.newScheduledThreadPool" -- "Instant.now" 
"Executors.newScheduledThreadPool" -- "Button.<init>" 
"Executors.newScheduledThreadPool" -- "Button.addStyleName" 
"Executors.newScheduledThreadPool" -- "Button.setEnabled" 
"Executors.newScheduledThreadPool" -- "Executors.newCachedThreadPool" 
"Executors.newScheduledThreadPool" -- "LinkedBlockingQueue<Runnable>.<init>" 
"Executors.newScheduledThreadPool" -- "ThreadPoolExecutor.<init>" 
"Executors.newScheduledThreadPool" -- "ThreadPoolExecutor.setMaximumPoolSize" 
"Executors.newScheduledThreadPool" -- "ScheduledThreadPoolExecutor.cast" 
"Executors.newScheduledThreadPool" -- "Future<Double>.get" 
"Executors.newScheduledThreadPool" -- "ScheduledExecutorService.scheduleWithFixedDelay" 
"Executors.newScheduledThreadPool" -- "TextField.<init>" 
"Executors.newScheduledThreadPool" -- "Binder.setBean" 
"Executors.newScheduledThreadPool" -- "Button.addClickListener" 
"Executors.newScheduledThreadPool" -- "GridLayout.<init>" 
"Executors.newScheduledThreadPool" -- "GridLayout.setSpacing" 
"Executors.newScheduledThreadPool" -- "GridLayout.setMargin" 
"Executors.newScheduledThreadPool" -- "Label.setId" 
"Executors.newScheduledThreadPool" -- "Label.setValue" 
"Executors.newScheduledThreadPool" -- "Label.setCaption" 
"Executors.newScheduledThreadPool" -- "GridLayout.addComponent" 
"Executors.newScheduledThreadPool" -- "Link.<init>" 
"Executors.newScheduledThreadPool" -- "Link.setId" 
"Executors.newScheduledThreadPool" -- "Link.setTargetName" 
"Executors.newScheduledThreadPool" -- "TextField.setId" 
"Executors.newScheduledThreadPool" -- "TextField.setCaption" 
"Executors.newScheduledThreadPool" -- "TextField.setValue" 
"Executors.newScheduledThreadPool" -- "TextField.setIcon" 
"Executors.newScheduledThreadPool" -- "TextArea.<init>" 
"Executors.newScheduledThreadPool" -- "TextArea.setCaption" 
"Executors.newScheduledThreadPool" -- "TextArea.setId" 
"Executors.newScheduledThreadPool" -- "TextArea.setValue" 
"Executors.newScheduledThreadPool" -- "Panel.<init>" 
"Executors.newScheduledThreadPool" -- "Panel.setContent" 
"Executors.newScheduledThreadPool" -- "Button.setId" 
"Executors.newScheduledThreadPool" -- "Button.setDescription" 
"Executors.newScheduledThreadPool" -- "Button.setIcon" 
"Executors.newScheduledThreadPool" -- "Grid.<init>" 
"Executors.newScheduledThreadPool" -- "Grid<Row>.setColumns" 
"Executors.newScheduledThreadPool" -- "Row.<init>" 
"Executors.newScheduledThreadPool" -- "List<Row>.add" 
"Executors.newScheduledThreadPool" -- "Grid<Row>.setItems" 
"Executors.newScheduledThreadPool" -- "Panel.setSizeUndefined" 
"Executors.newScheduledThreadPool" -- "Binder.<init>" 
"Executors.newScheduledThreadPool" -- "Binder.readBean" 
"Executors.newScheduledThreadPool" -- "TextField.setWidth" 
"Executors.newScheduledThreadPool" -- "Binder.forField" 
"Executors.newScheduledThreadPool" -- "Binder.validate" 
"Function<ScheduledExecutorService,Void>.apply" -- "ScheduledExecutorService.shutdown" 
"Function<ScheduledExecutorService,Void>.apply" -- "Executors.newSingleThreadScheduledExecutor" 
"ScheduledExecutorService.shutdown" -- "Executors.newSingleThreadScheduledExecutor" 
"ScheduledExecutorService.shutdown" -- "ScheduledExecutorService.scheduleAtFixedRate" 
"ScheduledExecutorService.shutdown" -- "ScheduledFuture.cancel" 
"ScheduledExecutorService.shutdown" -- "ScheduledExecutorService.schedule" 
"Executors.newSingleThreadScheduledExecutor" -- "ScheduledExecutorService.scheduleAtFixedRate" 
"Executors.newSingleThreadScheduledExecutor" -- "ScheduledFuture.cancel" 
"Executors.newSingleThreadScheduledExecutor" -- "ScheduledExecutorService.schedule" 
"AtomicBoolean.set" -- "AtomicBoolean.get" 
"AtomicBoolean.set" -- "Thread.interrupt" 
"AtomicBoolean.set" -- "AtomicBoolean.compareAndSet" 
"BigInteger.multiply" -- "BigInteger.gcd" 
"BigInteger.multiply" -- "BigInteger.divide" 
"ScheduledExecutorService.scheduleAtFixedRate" -- "ScheduledFuture.cancel" 
"ScheduledExecutorService.scheduleAtFixedRate" -- "ScheduledExecutorService.schedule" 
"ScheduledExecutorService.scheduleAtFixedRate" -- "Future<Double>.get" 
"ScheduledExecutorService.scheduleAtFixedRate" -- "ScheduledExecutorService.scheduleWithFixedDelay" 
"ScheduledExecutorService.schedule" -- "Future<Double>.get" 
"ScheduledExecutorService.schedule" -- "ScheduledExecutorService.scheduleWithFixedDelay" 
"SecureRandom.<init>" -- "SecureRandom.getInstance" 
"SecureRandom.<init>" -- "SecureRandom.nextLong" 
"SecureRandom.<init>" -- "SecureRandom.nextFloat" 
"SecureRandom.<init>" -- "SecureRandom.nextBoolean" 
"SecureRandom.<init>" -- "SecureRandom.ints" 
"SecureRandom.<init>" -- "SecureRandom.longs" 
"SecureRandom.<init>" -- "SecureRandom.doubles" 
"SecureRandom.<init>" -- "SecureRandom.nextBytes" 
"Data.wait" -- "Data.notifyAll" 
"Data.<init>" -- "Receiver.<init>" 
"Data.<init>" -- "Response.isValid" 
"Data.<init>" -- "Response.setData" 
"Runtime.getRuntime" -- "LinkedBlockingQueue.<init>" 
"Runtime.getRuntime" -- "Scanner.nextLine" 
"Runtime.getRuntime" -- "BufferedReader.readLine" 
"Runtime.getRuntime" -- "Process.waitFor" 
"Runtime.getRuntime" -- "Process.getInputStream" 
"Runtime.getRuntime" -- "CookieManager.<init>" 
"Runtime.getRuntime" -- "CookieManager.getCookieStore" 
"Runtime.getRuntime" -- "Process.getErrorStream" 
"Runtime.getRuntime" -- "Response.getBody" 
"Runtime.getRuntime" -- "Runtime.exec" 
"ZonedDateTime.now" -- "ConcurrentSkipListMap<ZonedDateTime,String>.headMap" 
"ZonedDateTime.now" -- "ConcurrentSkipListMap<ZonedDateTime,String>.tailMap" 
"ZonedDateTime.now" -- "ZoneId.of" 
"ZonedDateTime.now" -- "Charset.forName" 
"Event.getContent" -- "Event.getEventTime" 
"Event.getContent" -- "ConcurrentSkipListMap<ZonedDateTime,String>.put" 
"Event.getEventTime" -- "ConcurrentSkipListMap<ZonedDateTime,String>.put" 
"TransferQueue<String>.take" -- "Consumer.longProcessing" 
"Graphics.setFont" -- "Graphics2D.cast" 
"Graphics.setFont" -- "Graphics2D.setRenderingHint" 
"Graphics.setFont" -- "BufferedImage.getGraphics" 
"Graphics.setFont" -- "ImageIO.read" 
"Graphics.setFont" -- "Font.<init>" 
"Graphics.setFont" -- "Graphics.drawString" 
"Graphics.setFont" -- "Graphics.setColor" 
"Graphics2D.cast" -- "Graphics2D.setRenderingHint" 
"Graphics2D.cast" -- "BufferedImage.getGraphics" 
"Graphics2D.cast" -- "BufferedImage.getHeight" 
"Graphics2D.cast" -- "BufferedImage.getWidth" 
"Graphics2D.cast" -- "BasicStroke.<init>" 
"Graphics2D.cast" -- "Graphics2D.setStroke" 
"Graphics2D.cast" -- "Graphics2D.setColor" 
"Graphics2D.cast" -- "Graphics2D.drawRect" 
"BufferedImage.<init>" -- "BufferedImage.getGraphics" 
"BufferedImage.<init>" -- "BufferedImage.toString" 
"BufferedImage.<init>" -- "BufferedImage.createGraphics" 
"BufferedImage.<init>" -- "Graphics2D.drawImage" 
"BufferedImage.<init>" -- "Graphics2D.dispose" 
"BufferedImage.<init>" -- "BufferedImage.getScaledInstance" 
"BufferedImage.getGraphics" -- "Graphics2D.drawString" 
"BufferedImage.getGraphics" -- "BufferedImage.getRGB" 
"BufferedImage.getGraphics" -- "ImageIO.read" 
"BufferedImage.getGraphics" -- "BufferedImage.getScaledInstance" 
"BufferedImage.getGraphics" -- "FontMetrics.getFontRenderContext" 
"BufferedImage.getGraphics" -- "Font.createGlyphVector" 
"BufferedImage.getGraphics" -- "GlyphVector.getOutline" 
"BufferedImage.getGraphics" -- "Shape.getBounds" 
"BufferedImage.getGraphics" -- "BufferedImage.getHeight" 
"BufferedImage.getGraphics" -- "BufferedImage.getWidth" 
"BufferedImage.getGraphics" -- "Font.getSize2D" 
"BufferedImage.getGraphics" -- "Font.getStyle" 
"BufferedImage.getGraphics" -- "Font.deriveFont" 
"BufferedImage.getGraphics" -- "Font.<init>" 
"BufferedImage.getGraphics" -- "AttributedString.<init>" 
"BufferedImage.getGraphics" -- "AttributedString.addAttribute" 
"BufferedImage.getGraphics" -- "Graphics.getFontMetrics" 
"BufferedImage.getGraphics" -- "FontMetrics.stringWidth" 
"BufferedImage.getGraphics" -- "FontMetrics.getAscent" 
"BufferedImage.getGraphics" -- "FontMetrics.getHeight" 
"BufferedImage.getGraphics" -- "AttributedString.getIterator" 
"BufferedImage.getGraphics" -- "Graphics.drawString" 
"BufferedImage.getGraphics" -- "Graphics.setColor" 
"BufferedImage.getGraphics" -- "BasicStroke.<init>" 
"BufferedImage.getGraphics" -- "Graphics2D.setStroke" 
"BufferedImage.getGraphics" -- "Graphics2D.setColor" 
"BufferedImage.getGraphics" -- "Graphics2D.drawRect" 
"Graphics2D.drawString" -- "BufferedImage.getRGB" 
"System.console" -- "Console.readLine" 
"System.console" -- "Console.printf" 
"System.console" -- "Console.readPassword" 
"System.console" -- "Console.writer" 
"System.console" -- "NameCallback.instance" 
"System.console" -- "NameCallback.cast" 
"System.console" -- "NameCallback.setName" 
"System.console" -- "PasswordCallback.instance" 
"System.console" -- "PasswordCallback.cast" 
"System.console" -- "PasswordCallback.setPassword" 
"System.console" -- "NameCallback.getPrompt" 
"System.console" -- "PasswordCallback.getPrompt" 
"Console.readLine" -- "Console.printf" 
"Console.readLine" -- "Console.readPassword" 
"Console.readLine" -- "NameCallback.instance" 
"Console.readLine" -- "NameCallback.cast" 
"Console.readLine" -- "NameCallback.setName" 
"Console.readLine" -- "PasswordCallback.instance" 
"Console.readLine" -- "PasswordCallback.cast" 
"Console.readLine" -- "PasswordCallback.setPassword" 
"Console.readLine" -- "NameCallback.getPrompt" 
"Console.readLine" -- "PasswordCallback.getPrompt" 
"Console.printf" -- "Console.readPassword" 
"Console.readPassword" -- "NameCallback.instance" 
"Console.readPassword" -- "NameCallback.cast" 
"Console.readPassword" -- "NameCallback.setName" 
"Console.readPassword" -- "PasswordCallback.instance" 
"Console.readPassword" -- "PasswordCallback.cast" 
"Console.readPassword" -- "PasswordCallback.setPassword" 
"Console.readPassword" -- "NameCallback.getPrompt" 
"Console.readPassword" -- "PasswordCallback.getPrompt" 
"Scanner.nextLine" -- "Scanner.next" 
"Scanner.nextLine" -- "Scanner.nextDouble" 
"Scanner.nextLine" -- "BufferedReader.readLine" 
"Scanner.nextLine" -- "Scanner.hasNextInt" 
"Scanner.nextLine" -- "Scanner.hasNext" 
"Scanner.nextLine" -- "Scanner.hasNextLine" 
"Scanner.nextLine" -- "String.equalsIgnoreCase" 
"Scanner.nextLine" -- "Response.getBody" 
"Scanner.nextLine" -- "Runtime.exec" 
"Scanner.next" -- "Scanner.nextDouble" 
"Scanner.next" -- "BufferedReader.readLine" 
"Scanner.next" -- "Scanner.hasNextInt" 
"Scanner.next" -- "Scanner.hasNext" 
"Scanner.next" -- "Scanner.useDelimiter" 
"Scanner.nextDouble" -- "BufferedReader.readLine" 
"Scanner.nextDouble" -- "Scanner.hasNextInt" 
"Scanner.nextDouble" -- "Scanner.hasNext" 
"BufferedReader.readLine" -- "Scanner.hasNextInt" 
"BufferedReader.readLine" -- "Scanner.hasNext" 
"BufferedReader.readLine" -- "BufferedReader.close" 
"BufferedReader.readLine" -- "PrintWriter.close" 
"BufferedReader.readLine" -- "Socket.close" 
"BufferedReader.readLine" -- "PrintWriter.println" 
"BufferedReader.readLine" -- "Socket.getOutputStream" 
"BufferedReader.readLine" -- "PrintWriter.<init>" 
"BufferedReader.readLine" -- "Socket.getInputStream" 
"BufferedReader.readLine" -- "ServerSocket.<init>" 
"BufferedReader.readLine" -- "ServerSocket.accept" 
"BufferedReader.readLine" -- "FileReader.close" 
"BufferedReader.readLine" -- "Process.getInputStream" 
"BufferedReader.readLine" -- "HttpURLConnection.instance" 
"BufferedReader.readLine" -- "HttpURLConnection.getResponseMessage" 
"BufferedReader.readLine" -- "HttpURLConnection.getInputStream" 
"BufferedReader.readLine" -- "HttpURLConnection.getHeaderFields" 
"BufferedReader.readLine" -- "HttpURLConnection.getErrorStream" 
"BufferedReader.readLine" -- "Process.getErrorStream" 
"BufferedReader.readLine" -- "Charset.newDecoder" 
"BufferedReader.readLine" -- "CharsetDecoder.onMalformedInput" 
"BufferedReader.readLine" -- "Font.<init>" 
"BufferedReader.readLine" -- "Optional.orElseThrow" 
"BufferedReader.readLine" -- "Thread.wait" 
"BufferedReader.readLine" -- "URLConnection.getInputStream" 
"BufferedReader.readLine" -- "Document.<init>" 
"BufferedReader.readLine" -- "Document.add" 
"BufferedReader.readLine" -- "Document.open" 
"BufferedReader.readLine" -- "Document.close" 
"BufferedReader.readLine" -- "Font.setStyle" 
"BufferedReader.readLine" -- "Font.setSize" 
"Scanner.hasNextInt" -- "Scanner.hasNext" 
"Scanner.hasNext" -- "Scanner.useDelimiter" 
"DateFormat.format" -- "DateFormat.parse" 
"DateFormat.format" -- "TimeZone.getTimeZone" 
"DateFormat.format" -- "DateFormat.setTimeZone" 
"DateFormat.format" -- "Locale.getDefault" 
"DateFormat.format" -- "File.createNewFile" 
"DateFormat.format" -- "BufferedOutputStream.<init>" 
"DateFormat.format" -- "BufferedOutputStream.write" 
"DateFormat.format" -- "BufferedOutputStream.close" 
"DateFormat.format" -- "DateFormat.getDateTimeInstance" 
"Instant.plus" -- "Date.from" 
"Instant.plus" -- "Instant.now" 
"Instant.plus" -- "Builder.subject" 
"Instant.plus" -- "Builder.issuer" 
"Date.from" -- "Duration.ofHours" 
"Date.from" -- "Message.setFrom" 
"Date.from" -- "Instant.now" 
"Date.from" -- "Long.parseLong" 
"Date.from" -- "Message.<init>" 
"Date.from" -- "ZonedDateTime.toInstant" 
"Date.from" -- "Map<String,Object>.forEach" 
"Date.from" -- "Builder.subject" 
"Date.from" -- "Builder.issuer" 
"Date.from" -- "Message.setText" 
"Date.from" -- "Instant.parse" 
"Date.from" -- "Message.setTo" 
"Date.from" -- "Message.setDate" 
"Date.from" -- "Message.setId" 
"DateTime.<init>" -- "DateTime.plusDays" 
"DatatypeFactory.newInstance" -- "DatatypeFactory.newXMLGregorianCalendar" 
"GregorianCalendar.add" -- "GregorianCalendar.getTime" 
"GregorianCalendar.getTime" -- "GregorianCalendar.roll" 
"GregorianCalendar.getTime" -- "GregorianCalendar.set" 
"GregorianCalendar.getInstance" -- "GregorianCalendar.cast" 
"ArrayList<Date>.<init>" -- "Calendar.before" 
"ArrayList<Date>.<init>" -- "List<Date>.add" 
"Calendar.before" -- "List<Date>.add" 
"TimeZone.getDefault" -- "DateTime.forInstant" 
"TimeZone.getDefault" -- "DateTime.isSameDayAs" 
"DateTime.forInstant" -- "DateTime.isSameDayAs" 
"LocalDate.<init>" -- "LocalDate.equals" 
"Date.valueOf" -- "Timestamp.valueOf" 
"Date.valueOf" -- "Time.valueOf" 
"Date.valueOf" -- "OffsetDateTime.now" 
"Date.valueOf" -- "OffsetTime.now" 
"Timestamp.valueOf" -- "Time.valueOf" 
"Timestamp.valueOf" -- "OffsetDateTime.now" 
"Timestamp.valueOf" -- "OffsetTime.now" 
"Time.valueOf" -- "OffsetDateTime.now" 
"Time.valueOf" -- "OffsetTime.now" 
"Instant.ofEpochMilli" -- "Long.parseLong" 
"Instant.ofEpochMilli" -- "ZonedDateTime.ofInstant" 
"Instant.ofEpochMilli" -- "DateTimeFormatter.parse" 
"Instant.ofEpochMilli" -- "ZonedDateTime.from" 
"Instant.ofEpochMilli" -- "ByteBuffer.remaining" 
"DateFormat.setLenient" -- "DateFormat.parse" 
"ZoneId.getAvailableZoneIds" -- "Set<String>.stream" 
"TimeZone.getAvailableIDs" -- "TimeZone.getTimeZone" 
"TimeZone.getAvailableIDs" -- "TimeZone.getRawOffset" 
"TimeZone.getTimeZone" -- "TimeZone.getRawOffset" 
"TimeZone.getTimeZone" -- "DateFormat.setTimeZone" 
"TimeZone.getTimeZone" -- "TimeZone.setDefault" 
"TimeZone.getTimeZone" -- "SimpleDateFormat.setTimeZone" 
"TimeZone.getTimeZone" -- "Collections.unmodifiableMap" 
"ZoneOffset.of" -- "OffsetDateTime.now" 
"ZoneOffset.of" -- "OffsetTime.now" 
"OffsetDateTime.now" -- "OffsetTime.now" 
"ZoneId.of" -- "ZonedDateTime.withZoneSameInstant" 
"Files.readAllLines" -- "Files.readAllBytes" 
"System.gc" -- "WindowEvent.getNewState" 
"System.gc" -- "Map<String,String>.size" 
"Handler.<init>" -- "Thread.setDefaultUncaughtExceptionHandler" 
"Integer.valueOf" -- "System.getenv" 
"Integer.valueOf" -- "System.setProperty" 
"Integer.valueOf" -- "Optional.isPresent" 
"Integer.valueOf" -- "Optional.get" 
"Integer.valueOf" -- "Object.toString" 
"Integer.valueOf" -- "StringTokenizer.<init>" 
"Integer.valueOf" -- "StringTokenizer.nextToken" 
"Integer.valueOf" -- "StringTokenizer.hasMoreTokens" 
"Integer.valueOf" -- "Long.parseLong" 
"Integer.valueOf" -- "List<String>.toString" 
"Integer.valueOf" -- "Operation.<init>" 
"Integer.valueOf" -- "Optional.fromNullable" 
"Integer.valueOf" -- "Message.getMessageProperties" 
"Integer.valueOf" -- "Channel.basicReject" 
"Integer.valueOf" -- "Double.valueOf" 
"LocalDate.isAfter" -- "LocalDate.instance" 
"LocalDate.isAfter" -- "LocalDate.cast" 
"Objects.requireNonNull" -- "Throwable.getCause" 
"Objects.requireNonNull" -- "String.endsWith" 
"Objects.requireNonNull" -- "File.list" 
"Throwable.getCause" -- "Environment.acceptsProfiles" 
"Throwable.getCause" -- "Throwable.getMessage" 
"Throwable.getCause" -- "Throwable.getLocalizedMessage" 
"BufferedReader.close" -- "PrintWriter.close" 
"BufferedReader.close" -- "Socket.close" 
"BufferedReader.close" -- "PrintWriter.println" 
"BufferedReader.close" -- "Socket.getOutputStream" 
"BufferedReader.close" -- "PrintWriter.<init>" 
"BufferedReader.close" -- "Socket.getInputStream" 
"BufferedReader.close" -- "ServerSocket.close" 
"BufferedReader.close" -- "FileReader.close" 
"BufferedReader.close" -- "HttpURLConnection.getResponseMessage" 
"BufferedReader.close" -- "HttpURLConnection.getInputStream" 
"BufferedReader.close" -- "HttpURLConnection.getHeaderFields" 
"BufferedReader.close" -- "HttpURLConnection.getErrorStream" 
"BufferedReader.close" -- "Font.<init>" 
"BufferedReader.close" -- "Document.<init>" 
"BufferedReader.close" -- "Document.add" 
"BufferedReader.close" -- "Document.open" 
"BufferedReader.close" -- "Document.close" 
"BufferedReader.close" -- "Font.setStyle" 
"BufferedReader.close" -- "Font.setSize" 
"PrintWriter.close" -- "Socket.close" 
"PrintWriter.close" -- "PrintWriter.println" 
"PrintWriter.close" -- "Socket.getOutputStream" 
"PrintWriter.close" -- "PrintWriter.<init>" 
"PrintWriter.close" -- "Socket.getInputStream" 
"PrintWriter.close" -- "ServerSocket.close" 
"PrintWriter.close" -- "FileWriter.<init>" 
"PrintWriter.close" -- "PrintWriter.print" 
"PrintWriter.close" -- "PrintWriter.flush" 
"PrintWriter.close" -- "Entity.text" 
"PrintWriter.close" -- "Builder.header" 
"PrintWriter.close" -- "GZIPOutputStream.<init>" 
"PrintWriter.close" -- "RandomAccessFile.<init>" 
"Socket.close" -- "PrintWriter.println" 
"Socket.close" -- "Socket.<init>" 
"Socket.close" -- "Socket.getOutputStream" 
"Socket.close" -- "PrintWriter.<init>" 
"Socket.close" -- "Socket.getInputStream" 
"Socket.close" -- "ServerSocket.close" 
"PrintWriter.println" -- "Socket.getOutputStream" 
"PrintWriter.println" -- "PrintWriter.<init>" 
"PrintWriter.println" -- "Socket.getInputStream" 
"PrintWriter.println" -- "ServerSocket.<init>" 
"PrintWriter.println" -- "ServerSocket.accept" 
"PrintWriter.println" -- "FileWriter.<init>" 
"PrintWriter.println" -- "StringWriter.<init>" 
"PrintWriter.println" -- "StringWriter.toString" 
"PrintWriter.println" -- "PrintWriter.print" 
"PrintWriter.println" -- "PrintWriter.flush" 
"PrintWriter.println" -- "Part.write" 
"PrintWriter.println" -- "Entity.text" 
"PrintWriter.println" -- "Builder.header" 
"Socket.<init>" -- "Socket.getOutputStream" 
"Socket.<init>" -- "PrintWriter.<init>" 
"Socket.<init>" -- "Socket.getInputStream" 
"Socket.<init>" -- "InetSocketAddress.<init>" 
"Socket.<init>" -- "Proxy.<init>" 
"Socket.<init>" -- "Socket.connect" 
"Socket.<init>" -- "DataInputStream.<init>" 
"Socket.<init>" -- "DataOutputStream.<init>" 
"Socket.<init>" -- "DataOutputStream.writeChar" 
"Socket.<init>" -- "DataOutputStream.writeInt" 
"Socket.<init>" -- "DataOutputStream.write" 
"Socket.getOutputStream" -- "PrintWriter.<init>" 
"Socket.getOutputStream" -- "Socket.getInputStream" 
"Socket.getOutputStream" -- "ServerSocket.<init>" 
"Socket.getOutputStream" -- "ServerSocket.accept" 
"Socket.getOutputStream" -- "DataInputStream.<init>" 
"Socket.getOutputStream" -- "DataOutputStream.<init>" 
"Socket.getOutputStream" -- "DataOutputStream.writeChar" 
"Socket.getOutputStream" -- "DataOutputStream.writeInt" 
"Socket.getOutputStream" -- "DataOutputStream.write" 
"PrintWriter.<init>" -- "Socket.getInputStream" 
"PrintWriter.<init>" -- "ServerSocket.<init>" 
"PrintWriter.<init>" -- "ServerSocket.accept" 
"PrintWriter.<init>" -- "FileWriter.<init>" 
"PrintWriter.<init>" -- "StringWriter.<init>" 
"PrintWriter.<init>" -- "StringWriter.toString" 
"PrintWriter.<init>" -- "PrintWriter.print" 
"PrintWriter.<init>" -- "PrintWriter.flush" 
"PrintWriter.<init>" -- "GZIPOutputStream.<init>" 
"PrintWriter.<init>" -- "Writer.close" 
"PrintWriter.<init>" -- "RandomAccessFile.<init>" 
"Socket.getInputStream" -- "ServerSocket.<init>" 
"Socket.getInputStream" -- "ServerSocket.accept" 
"Socket.getInputStream" -- "DataInputStream.<init>" 
"Socket.getInputStream" -- "BufferedInputStream.<init>" 
"Socket.getInputStream" -- "DataInputStream.readChar" 
"Socket.getInputStream" -- "DataInputStream.readInt" 
"Socket.getInputStream" -- "DataInputStream.read" 
"ServerSocket.close" -- "ServerSocket.<init>" 
"ServerSocket.<init>" -- "ServerSocket.accept" 
"ServerSocket.<init>" -- "DataInputStream.<init>" 
"ServerSocket.<init>" -- "BufferedInputStream.<init>" 
"ServerSocket.<init>" -- "DataInputStream.readChar" 
"ServerSocket.<init>" -- "DataInputStream.readInt" 
"ServerSocket.<init>" -- "DataInputStream.read" 
"ServerSocket.accept" -- "DataInputStream.<init>" 
"ServerSocket.accept" -- "BufferedInputStream.<init>" 
"ServerSocket.accept" -- "DataInputStream.readChar" 
"ServerSocket.accept" -- "DataInputStream.readInt" 
"ServerSocket.accept" -- "DataInputStream.read" 
"FileInputStream.close" -- "File.isHidden" 
"FileInputStream.close" -- "File.isDirectory" 
"FileInputStream.close" -- "String.endsWith" 
"FileInputStream.close" -- "ZipEntry.<init>" 
"FileInputStream.close" -- "ZipOutputStream.putNextEntry" 
"FileInputStream.close" -- "ZipOutputStream.closeEntry" 
"FileInputStream.close" -- "File.listFiles" 
"FileInputStream.close" -- "File.getName" 
"FileInputStream.close" -- "FileInputStream.read" 
"FileInputStream.close" -- "ZipOutputStream.write" 
"FileInputStream.close" -- "ZipOutputStream.<init>" 
"FileInputStream.close" -- "ZipOutputStream.close" 
"ZipEntry.getName" -- "File.getCanonicalPath" 
"File.getCanonicalPath" -- "File.isDirectory" 
"File.getCanonicalPath" -- "File.canExecute" 
"File.getCanonicalPath" -- "File.mkdirs" 
"File.getCanonicalPath" -- "Environment.<init>" 
"ZipInputStream.<init>" -- "ZipInputStream.getNextEntry" 
"ZipInputStream.<init>" -- "ZipInputStream.read" 
"ZipInputStream.<init>" -- "FileOutputStream.write" 
"ZipInputStream.<init>" -- "ZipInputStream.closeEntry" 
"ZipInputStream.<init>" -- "ZipInputStream.close" 
"ZipInputStream.getNextEntry" -- "ZipInputStream.read" 
"ZipInputStream.getNextEntry" -- "FileOutputStream.write" 
"ZipInputStream.getNextEntry" -- "ZipInputStream.closeEntry" 
"ZipInputStream.getNextEntry" -- "ZipInputStream.close" 
"ZipInputStream.read" -- "FileOutputStream.write" 
"ZipInputStream.read" -- "ZipInputStream.closeEntry" 
"ZipInputStream.read" -- "ZipInputStream.close" 
"FileOutputStream.write" -- "ZipInputStream.closeEntry" 
"FileOutputStream.write" -- "ZipInputStream.close" 
"FileOutputStream.write" -- "InputStream.read" 
"FileOutputStream.write" -- "FileOutputStream.flush" 
"ZipInputStream.closeEntry" -- "ZipInputStream.close" 
"File.isHidden" -- "File.isDirectory" 
"File.isHidden" -- "String.endsWith" 
"File.isHidden" -- "ZipEntry.<init>" 
"File.isHidden" -- "ZipOutputStream.putNextEntry" 
"File.isHidden" -- "ZipOutputStream.closeEntry" 
"File.isHidden" -- "File.listFiles" 
"File.isHidden" -- "File.getName" 
"File.isHidden" -- "FileInputStream.read" 
"File.isHidden" -- "ZipOutputStream.write" 
"File.isDirectory" -- "String.endsWith" 
"File.isDirectory" -- "ZipEntry.<init>" 
"File.isDirectory" -- "ZipOutputStream.putNextEntry" 
"File.isDirectory" -- "ZipOutputStream.closeEntry" 
"File.isDirectory" -- "File.listFiles" 
"File.isDirectory" -- "File.getName" 
"File.isDirectory" -- "FileInputStream.read" 
"File.isDirectory" -- "ZipOutputStream.write" 
"File.isDirectory" -- "File.exists" 
"File.isDirectory" -- "File.mkdirs" 
"File.isDirectory" -- "Environment.<init>" 
"String.endsWith" -- "ZipEntry.<init>" 
"String.endsWith" -- "ZipOutputStream.putNextEntry" 
"String.endsWith" -- "ZipOutputStream.closeEntry" 
"String.endsWith" -- "File.listFiles" 
"String.endsWith" -- "File.getName" 
"String.endsWith" -- "FileInputStream.read" 
"String.endsWith" -- "ZipOutputStream.write" 
"String.endsWith" -- "File.list" 
"String.endsWith" -- "Map<Integer,List>.values" 
"String.endsWith" -- "BigDecimal.longValue" 
"String.endsWith" -- "Function<TemporalAccessor>.apply" 
"String.endsWith" -- "BiFunction<ZoneId>.apply" 
"ZipEntry.<init>" -- "ZipOutputStream.putNextEntry" 
"ZipEntry.<init>" -- "ZipOutputStream.closeEntry" 
"ZipEntry.<init>" -- "File.listFiles" 
"ZipEntry.<init>" -- "File.getName" 
"ZipEntry.<init>" -- "FileInputStream.read" 
"ZipEntry.<init>" -- "ZipOutputStream.write" 
"ZipEntry.<init>" -- "ZipOutputStream.<init>" 
"ZipEntry.<init>" -- "ZipOutputStream.close" 
"ZipOutputStream.putNextEntry" -- "ZipOutputStream.closeEntry" 
"ZipOutputStream.putNextEntry" -- "File.listFiles" 
"ZipOutputStream.putNextEntry" -- "File.getName" 
"ZipOutputStream.putNextEntry" -- "FileInputStream.read" 
"ZipOutputStream.putNextEntry" -- "ZipOutputStream.write" 
"ZipOutputStream.putNextEntry" -- "ZipOutputStream.<init>" 
"ZipOutputStream.putNextEntry" -- "ZipOutputStream.close" 
"ZipOutputStream.closeEntry" -- "File.listFiles" 
"ZipOutputStream.closeEntry" -- "File.getName" 
"ZipOutputStream.closeEntry" -- "FileInputStream.read" 
"ZipOutputStream.closeEntry" -- "ZipOutputStream.write" 
"File.listFiles" -- "File.getName" 
"File.listFiles" -- "FileInputStream.read" 
"File.listFiles" -- "ZipOutputStream.write" 
"File.getName" -- "FileInputStream.read" 
"File.getName" -- "ZipOutputStream.write" 
"File.getName" -- "ZipOutputStream.<init>" 
"File.getName" -- "ZipOutputStream.close" 
"File.getName" -- "File.exists" 
"File.getName" -- "File.mkdir" 
"File.getName" -- "File.getPath" 
"File.getName" -- "Utils.extractEntry" 
"File.getName" -- "File.getId" 
"File.getName" -- "FileAlterationObserver.<init>" 
"File.getName" -- "FileAlterationMonitor.<init>" 
"File.getName" -- "FileAlterationListenerAdaptor.<init>" 
"File.getName" -- "FileAlterationObserver.addListener" 
"File.getName" -- "FileAlterationMonitor.addObserver" 
"File.getName" -- "FileAlterationMonitor.start" 
"File.getName" -- "Document.<init>" 
"File.getName" -- "TextField.<init>" 
"File.getName" -- "Document.add" 
"File.getName" -- "Path.toFile" 
"FileInputStream.read" -- "ZipOutputStream.write" 
"FileInputStream.read" -- "ZipOutputStream.<init>" 
"FileInputStream.read" -- "ZipOutputStream.close" 
"ZipOutputStream.write" -- "ZipOutputStream.<init>" 
"ZipOutputStream.write" -- "ZipOutputStream.close" 
"ZipOutputStream.<init>" -- "ZipOutputStream.close" 
"Files.isDirectory" -- "SimpleFileVisitor<Path>.<init>" 
"Files.isDirectory" -- "Files.walkFileTree" 
"Files.isDirectory" -- "Files.isSymbolicLink" 
"Files.isDirectory" -- "Files.readSymbolicLink" 
"SimpleFileVisitor<Path>.<init>" -- "Files.walkFileTree" 
"File.exists" -- "File.mkdir" 
"File.exists" -- "File.list" 
"File.exists" -- "URI.toURL" 
"File.exists" -- "HttpURLConnection.instance" 
"File.exists" -- "HttpURLConnection.getContentLengthLong" 
"File.exists" -- "File.length" 
"File.exists" -- "Evaluation.stats" 
"File.exists" -- "Builder.activation" 
"File.exists" -- "Builder.nOut" 
"File.exists" -- "Builder.kernelSize" 
"File.exists" -- "Builder.nIn" 
"File.exists" -- "Builder.seed" 
"File.exists" -- "File.getParentFile" 
"File.exists" -- "Utils.downloadAndSave" 
"File.exists" -- "Utils.extractTarArchive" 
"File.exists" -- "Map<Integer,Double>.put" 
"File.exists" -- "Builder.stride" 
"File.exists" -- "File.getPath" 
"File.exists" -- "Part.write" 
"File.mkdir" -- "File.list" 
"File.mkdir" -- "Part.write" 
"Files.walk" -- "Files.copy" 
"Files.copy" -- "Files.delete" 
"Files.copy" -- "File.toPath" 
"Files.copy" -- "File.createTempFile" 
"Files.copy" -- "Resource.getFilename" 
"ProcessBuilder.<init>" -- "File.getAbsoluteFile" 
"ProcessBuilder.<init>" -- "ProcessBuilder.directory" 
"ProcessBuilder.<init>" -- "ProcessBuilder.redirectErrorStream" 
"ProcessBuilder.<init>" -- "ProcessBuilder.start" 
"ProcessBuilder.<init>" -- "Process.waitFor" 
"ProcessBuilder.<init>" -- "Process.destroy" 
"ProcessBuilder.<init>" -- "Process.isAlive" 
"ProcessBuilder.<init>" -- "Process.destroyForcibly" 
"ProcessBuilder.<init>" -- "Process.exitValue" 
"File.getAbsoluteFile" -- "ProcessBuilder.directory" 
"File.getAbsoluteFile" -- "ProcessBuilder.redirectErrorStream" 
"File.getAbsoluteFile" -- "ProcessBuilder.start" 
"File.getAbsoluteFile" -- "Process.waitFor" 
"ProcessBuilder.directory" -- "ProcessBuilder.redirectErrorStream" 
"ProcessBuilder.directory" -- "ProcessBuilder.start" 
"ProcessBuilder.directory" -- "Process.waitFor" 
"ProcessBuilder.redirectErrorStream" -- "ProcessBuilder.start" 
"ProcessBuilder.redirectErrorStream" -- "Process.waitFor" 
"ProcessBuilder.start" -- "Process.waitFor" 
"ProcessBuilder.start" -- "Process.destroy" 
"ProcessBuilder.start" -- "Process.isAlive" 
"ProcessBuilder.start" -- "Process.destroyForcibly" 
"ProcessBuilder.start" -- "Process.exitValue" 
"Process.waitFor" -- "Process.getInputStream" 
"FileWriter.<init>" -- "BufferedWriter.<init>" 
"FileWriter.<init>" -- "BufferedWriter.write" 
"FileWriter.<init>" -- "BufferedWriter.newLine" 
"FileWriter.<init>" -- "BufferedWriter.close" 
"FileWriter.<init>" -- "File.createNewFile" 
"FileWriter.<init>" -- "Writer.close" 
"FileWriter.<init>" -- "Element.cast" 
"FileWriter.<init>" -- "Element.addAttribute" 
"FileWriter.<init>" -- "Document.addElement" 
"FileWriter.<init>" -- "Element.addElement" 
"FileWriter.<init>" -- "OutputFormat.createPrettyPrint" 
"FileWriter.<init>" -- "Document.selectNodes" 
"FileWriter.<init>" -- "Element.elementIterator" 
"FileWriter.<init>" -- "Iterator<Element>.hasNext" 
"FileWriter.<init>" -- "Iterator<Element>.next" 
"FileWriter.<init>" -- "Element.getText" 
"FileWriter.<init>" -- "Element.setText" 
"BufferedWriter.<init>" -- "BufferedWriter.write" 
"BufferedWriter.<init>" -- "BufferedWriter.newLine" 
"BufferedWriter.<init>" -- "BufferedWriter.close" 
"BufferedWriter.write" -- "BufferedWriter.newLine" 
"BufferedWriter.write" -- "BufferedWriter.close" 
"BufferedWriter.write" -- "BufferedWriter.flush" 
"BufferedWriter.newLine" -- "BufferedWriter.close" 
"String.equalsIgnoreCase" -- "Map<String,List<String>>.put" 
"String.equalsIgnoreCase" -- "Map<String,List<String>>.entrySet" 
"String.equalsIgnoreCase" -- "Iterator<Entry<String,List<String>>>.hasNext" 
"String.equalsIgnoreCase" -- "Iterator<Entry<String,List<String>>>.next" 
"String.equalsIgnoreCase" -- "Entry<String,List<String>>.getValue" 
"InputStream.read" -- "ByteArrayOutputStream.write" 
"InputStream.read" -- "InputStream.available" 
"InputStream.read" -- "File.mkdirs" 
"InputStream.read" -- "FileOutputStream.flush" 
"Class.getName" -- "Instrumentation.retransformClasses" 
"Class.getName" -- "Class.forName" 
"Class.getName" -- "Class.getClassLoader" 
"Class.getName" -- "Instrumentation.getAllLoadedClasses" 
"Class.getName" -- "Map<LocalVariable,Value>.entrySet" 
"Class.getName" -- "Entry<LocalVariable,Value>.getValue" 
"Class.getName" -- "Entry<LocalVariable,Value>.getKey" 
"Class.getName" -- "Context.addServletMappingDecoded" 
"Class.getName" -- "Context.addFilterDef" 
"Class.getName" -- "Context.addFilterMap" 
"Class.forName" -- "Class.getClassLoader" 
"Class.forName" -- "Instrumentation.getAllLoadedClasses" 
"Class.forName" -- "DriverManager.getConnection" 
"Class.forName" -- "Class.getMethod" 
"Class.forName" -- "Class.asSubclass" 
"Class.forName" -- "Connection.setAutoCommit" 
"Class.getClassLoader" -- "Instrumentation.getAllLoadedClasses" 
"Optional<String>.isPresent" -- "Optional<String>.get" 
"Optional<String>.isPresent" -- "Optional<String>.orElse" 
"Long.valueOf" -- "Optional.isPresent" 
"Long.valueOf" -- "Optional.get" 
"Long.valueOf" -- "Map<String,Long>.put" 
"Long.valueOf" -- "Context.get" 
"Long.valueOf" -- "Context.getResponse" 
"Long.valueOf" -- "Context.getPathTokens" 
"Long.valueOf" -- "Collections.emptySet" 
"Consumer.accept" -- "Message.cast" 
"Consumer.accept" -- "Channel.cast" 
"Consumer.accept" -- "BiConsumer<Throwable>.accept" 
"Rectangle.getClass" -- "Rectangle.cast" 
"System.getenv" -- "System.setProperty" 
"System.getenv" -- "Optional.fromNullable" 
"PrintStream.<init>" -- "System.setOut" 
"PrintStream.<init>" -- "System.setErr" 
"System.setOut" -- "System.setErr" 
"Thread.setDaemon" -- "TextField.getText" 
"Thread.setDaemon" -- "Task<>.<init>" 
"Thread.setDaemon" -- "Task<>.setOnSucceeded" 
"Thread.setDaemon" -- "Task<>.getValue" 
"List<Double>.stream" -- "ImmutableTriple.of" 
"BigDecimal.intValue" -- "BigDecimal.toPlainString" 
"BigDecimal.intValue" -- "BigDecimal.subtract" 
"BigDecimal.toPlainString" -- "BigDecimal.subtract" 
"BigDecimal.subtract" -- "BigDecimal.add" 
"BigDecimal.subtract" -- "BigDecimal.setScale" 
"String.indexOf" -- "Part.getHeader" 
"Set<Set>.add" -- "List<Boolean>.size" 
"Set<Set>.add" -- "List<Boolean>.get" 
"Set<Set>.add" -- "HashSet.add" 
"Set<Set>.add" -- "Set.isEmpty" 
"Set<Set>.add" -- "Set.iterator" 
"Set<Set>.add" -- "Set<Set>.addAll" 
"List<Boolean>.size" -- "List<Boolean>.get" 
"List<Boolean>.size" -- "List<List>.add" 
"List<Boolean>.size" -- "HashSet.add" 
"List<Boolean>.get" -- "List<List>.add" 
"List<Boolean>.get" -- "HashSet.add" 
"Set.size" -- "ConcurrentMap<String,ConcurrentMap<URL,Set>>.get" 
"Set.size" -- "Map<URL,Set>.size" 
"Set.size" -- "URL.getServiceInterface" 
"Set.size" -- "URL.getParameter" 
"Set.size" -- "Map<URL,Set>.get" 
"Set.size" -- "Set.remove" 
"Set.size" -- "Page.getWebURL" 
"Set.size" -- "Page.getParseData" 
"List<Boolean>.add" -- "List<List<Boolean>>.add" 
"Set.isEmpty" -- "Set.iterator" 
"Set.isEmpty" -- "Set<Set>.addAll" 
"Set.iterator" -- "Set<Set>.addAll" 
"Set<Set<Integer>>.size" -- "Set<Set<Integer>>.toArray" 
"Point.<init>" -- "Point.setLocation" 
"Math.toRadians" -- "Math.sin" 
"Math.toRadians" -- "Math.tan" 
"Math.sin" -- "Math.tan" 
"Rectangle.getY" -- "Rectangle.getX" 
"Math.ceil" -- "Frequency.<init>" 
"Math.ceil" -- "Frequency.addValue" 
"Math.ceil" -- "Frequency.getCount" 
"Math.ceil" -- "Math.multiplyExact" 
"Math.ceil" -- "Math.subtractExact" 
"Array2DRowRealMatrix.<init>" -- "RealMatrix.multiply" 
"Stack.isEmpty" -- "Stack.addAll" 
"Files.lines" -- "ByteBuffer.hasRemaining" 
"Files.lines" -- "ByteBuffer.flip" 
"Book.<init>" -- "Book.setId" 
"Book.<init>" -- "ConcurrentMap<String,Book>.put" 
"Book.<init>" -- "Book.setName" 
"Book.<init>" -- "Book.setIsbn" 
"Book.<init>" -- "Book.setAuthor" 
"Book.<init>" -- "Book.setPages" 
"Book.<init>" -- "Book.getId" 
"Book.<init>" -- "Book.getIsbn" 
"Book.<init>" -- "Book.getAuthor" 
"Book.<init>" -- "Book.getTitle" 
"Book.<init>" -- "ResultSet.getLong" 
"Book.<init>" -- "ArrayList<Book>.<init>" 
"Book.<init>" -- "Row.getUUID" 
"Book.<init>" -- "Row.getString" 
"Book.<init>" -- "List<Book>.add" 
"Book.<init>" -- "List<Book>.get" 
"Book.<init>" -- "Optional<Value>.get" 
"Book.<init>" -- "Value.get" 
"Book.<init>" -- "Book.title" 
"Book.<init>" -- "Book.author" 
"Book.<init>" -- "Book.genre" 
"Book.<init>" -- "Book.setTitle" 
"Book.<init>" -- "List<Book>.isEmpty" 
"Book.<init>" -- "Book.getBookId" 
"Book.<init>" -- "Book.getNumberOfPages" 
"Class.isInstance" -- "Integer.instance" 
"Circle.<init>" -- "List<Shape>.add" 
"Circle.<init>" -- "Shape.name" 
"List<Shape>.add" -- "Shape.name" 
"HashCodeBuilder.<init>" -- "HashCodeBuilder.append" 
"DriverManager.getConnection" -- "Connection.setAutoCommit" 
"Map<String>.get" -- "Map<String>.containsKey" 
"Map<String>.get" -- "Cluster.openBucket" 
"Map<String>.get" -- "Security.builder" 
"Map<String>.get" -- "Map<String>.remove" 
"Map<String>.get" -- "HashMap<Long>.<init>" 
"Map<String>.get" -- "Map<Long>.size" 
"Map<String>.get" -- "Map<Long>.entrySet" 
"Map<String>.get" -- "Arrays.equals)" 
"Map<String>.get" -- "Optional<Entry<Long>>.isPresent" 
"Map<String>.get" -- "Optional<Entry<Long>>.get" 
"Map<String>.get" -- "HashMap<String>.get" 
"Map<String>.get" -- "Parameter.<init>" 
"Map<String>.get" -- "ArrayList<String>.get" 
"Map<String>.get" -- "Label.setOutputMarkupId" 
"Map<String,List<String>>.put" -- "Map<String,List<String>>.entrySet" 
"Map<String,List<String>>.put" -- "Iterator<Entry<String,List<String>>>.hasNext" 
"Map<String,List<String>>.put" -- "Iterator<Entry<String,List<String>>>.next" 
"Map<String,List<String>>.put" -- "Entry<String,List<String>>.getValue" 
"Map<String,List<String>>.entrySet" -- "Iterator<Entry<String,List<String>>>.hasNext" 
"Map<String,List<String>>.entrySet" -- "Iterator<Entry<String,List<String>>>.next" 
"Map<String,List<String>>.entrySet" -- "Entry<String,List<String>>.getValue" 
"Map<String,List<String>>.entrySet" -- "Map<String,List<String>>.isEmpty" 
"Map<String,List<String>>.entrySet" -- "Entry<String,List<String>>.getKey" 
"Iterator<Entry<String,List<String>>>.hasNext" -- "Iterator<Entry<String,List<String>>>.next" 
"Iterator<Entry<String,List<String>>>.hasNext" -- "Entry<String,List<String>>.getValue" 
"Iterator<Entry<String,List<String>>>.next" -- "Entry<String,List<String>>.getValue" 
"Entry<String,List<String>>.getValue" -- "StringBuilder.setLength" 
"Entry<String,List<String>>.getValue" -- "Map<String,List<String>>.isEmpty" 
"Entry<String,List<String>>.getValue" -- "Entry<String,List<String>>.getKey" 
"Entry<String,List<String>>.getValue" -- "MultiValueMap<String,String>.entrySet" 
"CookieManager.<init>" -- "CookieManager.getCookieStore" 
"URI.getHost" -- "InetAddress.getByName" 
"URI.getHost" -- "HttpCookie.domainMatches" 
"URI.getHost" -- "URI.getScheme" 
"URI.getHost" -- "URI.getSchemeSpecificPart" 
"URI.getHost" -- "URI.getAuthority" 
"URI.getHost" -- "URI.getPath" 
"URI.getHost" -- "URI.getPort" 
"URI.getHost" -- "URI.getQuery" 
"URI.getHost" -- "URI.getFragment" 
"URI.getHost" -- "URI.toURL" 
"URI.getHost" -- "URL.toString" 
"InetAddress.getByName" -- "HttpCookie.domainMatches" 
"InetAddress.getByName" -- "DatagramSocket.<init>" 
"InetAddress.getByName" -- "MulticastSocket.<init>" 
"InetAddress.getByName" -- "MulticastSocket.setReuseAddress" 
"InetAddress.getByName" -- "MulticastSocket.joinGroup" 
"InetSocketAddress.<init>" -- "Proxy.<init>" 
"InetSocketAddress.<init>" -- "Socket.connect" 
"InetSocketAddress.<init>" -- "DatagramSocket.<init>" 
"InetSocketAddress.<init>" -- "DatagramSocket.setReuseAddress" 
"InetSocketAddress.<init>" -- "DatagramSocket.bind" 
"InetSocketAddress.<init>" -- "SocketChannel.open" 
"InetSocketAddress.<init>" -- "Selector.open" 
"InetSocketAddress.<init>" -- "ServerSocketChannel.open" 
"InetSocketAddress.<init>" -- "ServerSocketChannel.bind" 
"InetSocketAddress.<init>" -- "ServerSocketChannel.configureBlocking" 
"InetSocketAddress.<init>" -- "ServerSocketChannel.register" 
"InetSocketAddress.<init>" -- "Selector.select" 
"InetSocketAddress.<init>" -- "Selector.selectedKeys" 
"InetSocketAddress.<init>" -- "Set<SelectionKey>.iterator" 
"InetSocketAddress.<init>" -- "Iterator<SelectionKey>.hasNext" 
"InetSocketAddress.<init>" -- "Iterator<SelectionKey>.next" 
"InetSocketAddress.<init>" -- "SelectionKey.isAcceptable" 
"InetSocketAddress.<init>" -- "SelectionKey.isReadable" 
"InetSocketAddress.<init>" -- "Iterator<SelectionKey>.remove" 
"Proxy.<init>" -- "Socket.connect" 
"System.setProperty" -- "Environment.acceptsProfiles" 
"System.setProperty" -- "Optional.fromNullable" 
"DatagramSocket.close" -- "DatagramPacket.<init>" 
"DatagramSocket.close" -- "DatagramSocket.receive" 
"DatagramSocket.close" -- "DatagramSocket.send" 
"DatagramSocket.close" -- "DatagramPacket.getAddress" 
"DatagramSocket.close" -- "DatagramPacket.getPort" 
"DatagramSocket.close" -- "DatagramPacket.getData" 
"DatagramSocket.close" -- "DatagramPacket.getLength" 
"DatagramPacket.<init>" -- "DatagramSocket.receive" 
"DatagramPacket.<init>" -- "DatagramSocket.send" 
"DatagramPacket.<init>" -- "DatagramPacket.getAddress" 
"DatagramPacket.<init>" -- "DatagramPacket.getPort" 
"DatagramPacket.<init>" -- "DatagramPacket.getData" 
"DatagramPacket.<init>" -- "DatagramPacket.getLength" 
"DatagramPacket.<init>" -- "MulticastSocket.receive" 
"DatagramPacket.<init>" -- "MulticastSocket.send" 
"DatagramPacket.<init>" -- "MulticastSocket.leaveGroup" 
"DatagramPacket.<init>" -- "MulticastSocket.close" 
"DatagramSocket.receive" -- "DatagramSocket.send" 
"DatagramSocket.receive" -- "DatagramPacket.getAddress" 
"DatagramSocket.receive" -- "DatagramPacket.getPort" 
"DatagramSocket.receive" -- "DatagramPacket.getData" 
"DatagramSocket.receive" -- "DatagramPacket.getLength" 
"DatagramSocket.send" -- "DatagramPacket.getAddress" 
"DatagramSocket.send" -- "DatagramPacket.getPort" 
"DatagramSocket.send" -- "DatagramPacket.getData" 
"DatagramSocket.send" -- "DatagramPacket.getLength" 
"DatagramSocket.<init>" -- "DatagramSocket.setBroadcast" 
"DatagramSocket.<init>" -- "DatagramSocket.setReuseAddress" 
"DatagramSocket.<init>" -- "DatagramSocket.bind" 
"NetworkInterface.getNetworkInterfaces" -- "Enumeration<NetworkInterface>.hasMoreElements" 
"NetworkInterface.getNetworkInterfaces" -- "Enumeration<NetworkInterface>.nextElement" 
"NetworkInterface.getNetworkInterfaces" -- "NetworkInterface.isUp" 
"NetworkInterface.getNetworkInterfaces" -- "NetworkInterface.isLoopback" 
"NetworkInterface.getNetworkInterfaces" -- "NetworkInterface.getInterfaceAddresses" 
"NetworkInterface.getNetworkInterfaces" -- "List<InetAddress>.addAll" 
"NetworkInterface.getNetworkInterfaces" -- "InetAddress.getBroadcast" 
"NetworkInterface.getNetworkInterfaces" -- "NetworkInterface.getHardwareAddress" 
"Enumeration<NetworkInterface>.hasMoreElements" -- "Enumeration<NetworkInterface>.nextElement" 
"Enumeration<NetworkInterface>.hasMoreElements" -- "NetworkInterface.isUp" 
"Enumeration<NetworkInterface>.hasMoreElements" -- "NetworkInterface.isLoopback" 
"Enumeration<NetworkInterface>.hasMoreElements" -- "NetworkInterface.getInterfaceAddresses" 
"Enumeration<NetworkInterface>.hasMoreElements" -- "List<InetAddress>.addAll" 
"Enumeration<NetworkInterface>.hasMoreElements" -- "InetAddress.getBroadcast" 
"Enumeration<NetworkInterface>.hasMoreElements" -- "NetworkInterface.getHardwareAddress" 
"Enumeration<NetworkInterface>.nextElement" -- "NetworkInterface.isUp" 
"Enumeration<NetworkInterface>.nextElement" -- "NetworkInterface.isLoopback" 
"Enumeration<NetworkInterface>.nextElement" -- "NetworkInterface.getInterfaceAddresses" 
"Enumeration<NetworkInterface>.nextElement" -- "List<InetAddress>.addAll" 
"Enumeration<NetworkInterface>.nextElement" -- "InetAddress.getBroadcast" 
"Enumeration<NetworkInterface>.nextElement" -- "NetworkInterface.getHardwareAddress" 
"NetworkInterface.isUp" -- "NetworkInterface.isLoopback" 
"NetworkInterface.isUp" -- "NetworkInterface.getInterfaceAddresses" 
"NetworkInterface.isUp" -- "List<InetAddress>.addAll" 
"NetworkInterface.isUp" -- "InetAddress.getBroadcast" 
"NetworkInterface.isLoopback" -- "NetworkInterface.getInterfaceAddresses" 
"NetworkInterface.isLoopback" -- "List<InetAddress>.addAll" 
"NetworkInterface.isLoopback" -- "InetAddress.getBroadcast" 
"NetworkInterface.getInterfaceAddresses" -- "List<InetAddress>.addAll" 
"NetworkInterface.getInterfaceAddresses" -- "InetAddress.getBroadcast" 
"List<InetAddress>.addAll" -- "InetAddress.getBroadcast" 
"DatagramPacket.getAddress" -- "DatagramPacket.getPort" 
"DatagramPacket.getAddress" -- "DatagramPacket.getData" 
"DatagramPacket.getAddress" -- "DatagramPacket.getLength" 
"DatagramPacket.getAddress" -- "MulticastSocket.receive" 
"DatagramPacket.getAddress" -- "MulticastSocket.send" 
"DatagramPacket.getAddress" -- "MulticastSocket.leaveGroup" 
"DatagramPacket.getAddress" -- "MulticastSocket.close" 
"DatagramPacket.getPort" -- "DatagramPacket.getData" 
"DatagramPacket.getPort" -- "DatagramPacket.getLength" 
"DatagramPacket.getPort" -- "MulticastSocket.receive" 
"DatagramPacket.getPort" -- "MulticastSocket.send" 
"DatagramPacket.getPort" -- "MulticastSocket.leaveGroup" 
"DatagramPacket.getPort" -- "MulticastSocket.close" 
"DatagramPacket.getData" -- "DatagramPacket.getLength" 
"DatagramPacket.getData" -- "MulticastSocket.receive" 
"DatagramPacket.getData" -- "MulticastSocket.send" 
"DatagramPacket.getData" -- "MulticastSocket.leaveGroup" 
"DatagramPacket.getData" -- "MulticastSocket.close" 
"DatagramPacket.getLength" -- "MulticastSocket.receive" 
"DatagramPacket.getLength" -- "MulticastSocket.send" 
"DatagramPacket.getLength" -- "MulticastSocket.leaveGroup" 
"DatagramPacket.getLength" -- "MulticastSocket.close" 
"DatagramSocket.setReuseAddress" -- "DatagramSocket.bind" 
"MulticastSocket.receive" -- "MulticastSocket.send" 
"MulticastSocket.receive" -- "MulticastSocket.leaveGroup" 
"MulticastSocket.receive" -- "MulticastSocket.close" 
"MulticastSocket.send" -- "MulticastSocket.leaveGroup" 
"MulticastSocket.send" -- "MulticastSocket.close" 
"MulticastSocket.leaveGroup" -- "MulticastSocket.close" 
"MulticastSocket.<init>" -- "MulticastSocket.setReuseAddress" 
"MulticastSocket.<init>" -- "MulticastSocket.joinGroup" 
"MulticastSocket.setReuseAddress" -- "MulticastSocket.joinGroup" 
"URI.getScheme" -- "URI.getSchemeSpecificPart" 
"URI.getScheme" -- "URI.getAuthority" 
"URI.getScheme" -- "URI.getPath" 
"URI.getScheme" -- "URI.getPort" 
"URI.getScheme" -- "URI.getQuery" 
"URI.getScheme" -- "URI.getFragment" 
"URI.getScheme" -- "URI.toURL" 
"URI.getScheme" -- "URL.toString" 
"URI.getSchemeSpecificPart" -- "URI.getAuthority" 
"URI.getSchemeSpecificPart" -- "URI.getPath" 
"URI.getSchemeSpecificPart" -- "URI.getPort" 
"URI.getSchemeSpecificPart" -- "URI.getQuery" 
"URI.getSchemeSpecificPart" -- "URI.getFragment" 
"URI.getSchemeSpecificPart" -- "URI.toURL" 
"URI.getSchemeSpecificPart" -- "URL.toString" 
"URI.getAuthority" -- "URI.getPath" 
"URI.getAuthority" -- "URI.getPort" 
"URI.getAuthority" -- "URI.getQuery" 
"URI.getAuthority" -- "URI.getFragment" 
"URI.getAuthority" -- "URI.toURL" 
"URI.getAuthority" -- "URL.toString" 
"URI.getPath" -- "URI.getPort" 
"URI.getPath" -- "URI.getQuery" 
"URI.getPath" -- "URI.getFragment" 
"URI.getPath" -- "URI.toURL" 
"URI.getPath" -- "URL.toString" 
"URI.getPort" -- "URI.getQuery" 
"URI.getPort" -- "URI.getFragment" 
"URI.getPort" -- "URI.toURL" 
"URI.getPort" -- "URL.toString" 
"URI.getQuery" -- "URI.getFragment" 
"URI.getQuery" -- "URI.toURL" 
"URI.getQuery" -- "URL.toString" 
"URI.getFragment" -- "URI.toURL" 
"URI.getFragment" -- "URL.toString" 
"URI.toURL" -- "URL.toString" 
"URI.toURL" -- "HttpURLConnection.instance" 
"URI.toURL" -- "HttpURLConnection.getContentLengthLong" 
"URI.toURL" -- "File.length" 
"HttpURLConnection.instance" -- "HttpURLConnection.getResponseMessage" 
"HttpURLConnection.instance" -- "HttpURLConnection.getInputStream" 
"HttpURLConnection.instance" -- "HttpURLConnection.getContentLengthLong" 
"HttpURLConnection.instance" -- "File.length" 
"HttpURLConnection.getResponseMessage" -- "HttpURLConnection.getInputStream" 
"HttpURLConnection.getResponseMessage" -- "HttpURLConnection.getHeaderFields" 
"HttpURLConnection.getResponseMessage" -- "HttpURLConnection.getErrorStream" 
"HttpURLConnection.getInputStream" -- "HttpURLConnection.getHeaderFields" 
"HttpURLConnection.getInputStream" -- "HttpURLConnection.getErrorStream" 
"DataInputStream.<init>" -- "DataOutputStream.<init>" 
"DataInputStream.<init>" -- "DataOutputStream.writeChar" 
"DataInputStream.<init>" -- "DataOutputStream.writeInt" 
"DataInputStream.<init>" -- "DataOutputStream.write" 
"DataInputStream.<init>" -- "BufferedInputStream.<init>" 
"DataInputStream.<init>" -- "DataInputStream.readChar" 
"DataInputStream.<init>" -- "DataInputStream.readInt" 
"DataInputStream.<init>" -- "DataInputStream.read" 
"DataInputStream.<init>" -- "Util.objectFromStream" 
"DataOutputStream.<init>" -- "DataOutputStream.writeChar" 
"DataOutputStream.<init>" -- "DataOutputStream.writeInt" 
"DataOutputStream.<init>" -- "DataOutputStream.write" 
"DataOutputStream.<init>" -- "Util.objectToStream" 
"DataOutputStream.writeChar" -- "DataOutputStream.writeInt" 
"DataOutputStream.writeChar" -- "DataOutputStream.write" 
"DataOutputStream.writeInt" -- "DataOutputStream.write" 
"BufferedInputStream.<init>" -- "DataInputStream.readChar" 
"BufferedInputStream.<init>" -- "DataInputStream.readInt" 
"BufferedInputStream.<init>" -- "DataInputStream.read" 
"DataInputStream.readChar" -- "DataInputStream.readInt" 
"DataInputStream.readChar" -- "DataInputStream.read" 
"DataInputStream.readInt" -- "DataInputStream.read" 
"HttpURLConnection.getContentLengthLong" -- "File.length" 
"File.length" -- "Message<File>.getPayload" 
"File.length" -- "MediaType.parseMediaType" 
"HttpURLConnection.getHeaderFields" -- "HttpURLConnection.getErrorStream" 
"URLEncoder.encode" -- "Currency.getAvailableCurrencies" 
"Authenticator.<init>" -- "PasswordAuthentication.<init>" 
"Authenticator.<init>" -- "Message.setFrom" 
"Authenticator.<init>" -- "Message.setRecipients" 
"Authenticator.<init>" -- "Message.setSubject" 
"Authenticator.<init>" -- "Message.setContent" 
"PasswordAuthentication.<init>" -- "Message.setFrom" 
"PasswordAuthentication.<init>" -- "Message.setRecipients" 
"PasswordAuthentication.<init>" -- "Message.setSubject" 
"PasswordAuthentication.<init>" -- "Message.setContent" 
"Message.setFrom" -- "Message.setRecipients" 
"Message.setFrom" -- "Message.setSubject" 
"Message.setFrom" -- "Message.setContent" 
"Message.setFrom" -- "Instant.now" 
"Message.setFrom" -- "Set.remove" 
"Message.setFrom" -- "HashMap<String,String>.get" 
"Message.setFrom" -- "Message.<init>" 
"Message.setFrom" -- "HashMap<String,String>.put" 
"Message.setFrom" -- "Message.setText" 
"Message.setFrom" -- "Message.setTo" 
"Message.setFrom" -- "Message.setDate" 
"Message.setFrom" -- "Message.setId" 
"Message.setRecipients" -- "Message.setSubject" 
"Message.setRecipients" -- "Message.setContent" 
"Message.setSubject" -- "Message.setContent" 
"Message.setContent" -- "Set.remove" 
"Message.setContent" -- "HashMap<String,String>.get" 
"Message.setContent" -- "Message.<init>" 
"Message.setContent" -- "HashMap<String,String>.put" 
"Base64.encodeBase64" -- "Charset.forName" 
"Files.getAttribute" -- "FileTime.cast" 
"Files.readAttributes" -- "BasicFileAttributes.creationTime" 
"Files.readAttributes" -- "FileTime.toInstant" 
"BasicFileAttributes.creationTime" -- "FileTime.toInstant" 
"Charset.defaultCharset" -- "File.toPath" 
"Charset.defaultCharset" -- "Files.readAllBytes" 
"Charset.defaultCharset" -- "Base64.decodeBase64" 
"Charset.defaultCharset" -- "KeyFactory.getInstance" 
"Charset.defaultCharset" -- "X509EncodedKeySpec.<init>" 
"Charset.defaultCharset" -- "KeyFactory.generatePublic" 
"Charset.defaultCharset" -- "RSAPublicKey.cast" 
"Charset.defaultCharset" -- "PKCS8EncodedKeySpec.<init>" 
"Charset.defaultCharset" -- "KeyFactory.generatePrivate" 
"Charset.defaultCharset" -- "RSAPrivateKey.cast" 
"LineIterator.hasNext" -- "LineIterator.nextLine" 
"ByteBuffer.hasRemaining" -- "ByteBuffer.get" 
"ByteBuffer.hasRemaining" -- "ByteBuffer.flip" 
"ByteBuffer.flip" -- "SocketChannel.write" 
"ByteBuffer.flip" -- "ByteBuffer.clear" 
"ByteBuffer.flip" -- "SocketChannel.read" 
"ByteBuffer.flip" -- "ByteBuffer.array" 
"ByteBuffer.flip" -- "SocketChannel.close" 
"ByteBuffer.flip" -- "SelectionKey.channel" 
"ByteBuffer.flip" -- "SocketChannel.cast" 
"SocketChannel.write" -- "ByteBuffer.clear" 
"SocketChannel.write" -- "SocketChannel.read" 
"SocketChannel.write" -- "ByteBuffer.array" 
"SocketChannel.write" -- "SocketChannel.close" 
"SocketChannel.write" -- "SelectionKey.channel" 
"SocketChannel.write" -- "SocketChannel.cast" 
"ByteBuffer.clear" -- "SocketChannel.read" 
"ByteBuffer.clear" -- "ByteBuffer.array" 
"ByteBuffer.clear" -- "SocketChannel.close" 
"ByteBuffer.clear" -- "SelectionKey.channel" 
"ByteBuffer.clear" -- "SocketChannel.cast" 
"SocketChannel.read" -- "ByteBuffer.array" 
"SocketChannel.read" -- "SocketChannel.close" 
"SocketChannel.read" -- "SelectionKey.channel" 
"SocketChannel.read" -- "SocketChannel.cast" 
"ByteBuffer.array" -- "SocketChannel.close" 
"ByteBuffer.array" -- "SelectionKey.channel" 
"ByteBuffer.array" -- "SocketChannel.cast" 
"SocketChannel.close" -- "SelectionKey.channel" 
"SocketChannel.close" -- "SocketChannel.cast" 
"ServerSocketChannel.accept" -- "SocketChannel.configureBlocking" 
"ServerSocketChannel.accept" -- "SocketChannel.register" 
"SocketChannel.configureBlocking" -- "SocketChannel.register" 
"SelectionKey.channel" -- "SocketChannel.cast" 
"Selector.open" -- "ServerSocketChannel.open" 
"Selector.open" -- "ServerSocketChannel.bind" 
"Selector.open" -- "ServerSocketChannel.configureBlocking" 
"Selector.open" -- "ServerSocketChannel.register" 
"Selector.open" -- "Selector.select" 
"Selector.open" -- "Selector.selectedKeys" 
"Selector.open" -- "Set<SelectionKey>.iterator" 
"Selector.open" -- "Iterator<SelectionKey>.hasNext" 
"Selector.open" -- "Iterator<SelectionKey>.next" 
"Selector.open" -- "SelectionKey.isAcceptable" 
"Selector.open" -- "SelectionKey.isReadable" 
"Selector.open" -- "Iterator<SelectionKey>.remove" 
"ServerSocketChannel.open" -- "ServerSocketChannel.bind" 
"ServerSocketChannel.open" -- "ServerSocketChannel.configureBlocking" 
"ServerSocketChannel.open" -- "ServerSocketChannel.register" 
"ServerSocketChannel.open" -- "Selector.select" 
"ServerSocketChannel.open" -- "Selector.selectedKeys" 
"ServerSocketChannel.open" -- "Set<SelectionKey>.iterator" 
"ServerSocketChannel.open" -- "Iterator<SelectionKey>.hasNext" 
"ServerSocketChannel.open" -- "Iterator<SelectionKey>.next" 
"ServerSocketChannel.open" -- "SelectionKey.isAcceptable" 
"ServerSocketChannel.open" -- "SelectionKey.isReadable" 
"ServerSocketChannel.open" -- "Iterator<SelectionKey>.remove" 
"ServerSocketChannel.bind" -- "ServerSocketChannel.configureBlocking" 
"ServerSocketChannel.bind" -- "ServerSocketChannel.register" 
"ServerSocketChannel.bind" -- "Selector.select" 
"ServerSocketChannel.bind" -- "Selector.selectedKeys" 
"ServerSocketChannel.bind" -- "Set<SelectionKey>.iterator" 
"ServerSocketChannel.bind" -- "Iterator<SelectionKey>.hasNext" 
"ServerSocketChannel.bind" -- "Iterator<SelectionKey>.next" 
"ServerSocketChannel.bind" -- "SelectionKey.isAcceptable" 
"ServerSocketChannel.bind" -- "SelectionKey.isReadable" 
"ServerSocketChannel.bind" -- "Iterator<SelectionKey>.remove" 
"ServerSocketChannel.configureBlocking" -- "ServerSocketChannel.register" 
"ServerSocketChannel.configureBlocking" -- "Selector.select" 
"ServerSocketChannel.configureBlocking" -- "Selector.selectedKeys" 
"ServerSocketChannel.configureBlocking" -- "Set<SelectionKey>.iterator" 
"ServerSocketChannel.configureBlocking" -- "Iterator<SelectionKey>.hasNext" 
"ServerSocketChannel.configureBlocking" -- "Iterator<SelectionKey>.next" 
"ServerSocketChannel.configureBlocking" -- "SelectionKey.isAcceptable" 
"ServerSocketChannel.configureBlocking" -- "SelectionKey.isReadable" 
"ServerSocketChannel.configureBlocking" -- "Iterator<SelectionKey>.remove" 
"ServerSocketChannel.register" -- "Selector.select" 
"ServerSocketChannel.register" -- "Selector.selectedKeys" 
"ServerSocketChannel.register" -- "Set<SelectionKey>.iterator" 
"ServerSocketChannel.register" -- "Iterator<SelectionKey>.hasNext" 
"ServerSocketChannel.register" -- "Iterator<SelectionKey>.next" 
"ServerSocketChannel.register" -- "SelectionKey.isAcceptable" 
"ServerSocketChannel.register" -- "SelectionKey.isReadable" 
"ServerSocketChannel.register" -- "Iterator<SelectionKey>.remove" 
"Selector.select" -- "Selector.selectedKeys" 
"Selector.select" -- "Set<SelectionKey>.iterator" 
"Selector.select" -- "Iterator<SelectionKey>.hasNext" 
"Selector.select" -- "Iterator<SelectionKey>.next" 
"Selector.select" -- "SelectionKey.isAcceptable" 
"Selector.select" -- "SelectionKey.isReadable" 
"Selector.select" -- "Iterator<SelectionKey>.remove" 
"Selector.selectedKeys" -- "Set<SelectionKey>.iterator" 
"Selector.selectedKeys" -- "Iterator<SelectionKey>.hasNext" 
"Selector.selectedKeys" -- "Iterator<SelectionKey>.next" 
"Selector.selectedKeys" -- "SelectionKey.isAcceptable" 
"Selector.selectedKeys" -- "SelectionKey.isReadable" 
"Selector.selectedKeys" -- "Iterator<SelectionKey>.remove" 
"Set<SelectionKey>.iterator" -- "Iterator<SelectionKey>.hasNext" 
"Set<SelectionKey>.iterator" -- "Iterator<SelectionKey>.next" 
"Set<SelectionKey>.iterator" -- "SelectionKey.isAcceptable" 
"Set<SelectionKey>.iterator" -- "SelectionKey.isReadable" 
"Set<SelectionKey>.iterator" -- "Iterator<SelectionKey>.remove" 
"Iterator<SelectionKey>.hasNext" -- "Iterator<SelectionKey>.next" 
"Iterator<SelectionKey>.hasNext" -- "SelectionKey.isAcceptable" 
"Iterator<SelectionKey>.hasNext" -- "SelectionKey.isReadable" 
"Iterator<SelectionKey>.hasNext" -- "Iterator<SelectionKey>.remove" 
"Iterator<SelectionKey>.next" -- "SelectionKey.isAcceptable" 
"Iterator<SelectionKey>.next" -- "SelectionKey.isReadable" 
"Iterator<SelectionKey>.next" -- "Iterator<SelectionKey>.remove" 
"SelectionKey.isAcceptable" -- "SelectionKey.isReadable" 
"SelectionKey.isAcceptable" -- "Iterator<SelectionKey>.remove" 
"SelectionKey.isReadable" -- "Iterator<SelectionKey>.remove" 
"Files.isSymbolicLink" -- "Files.readSymbolicLink" 
"Files.exists" -- "Files.delete" 
"Files.exists" -- "Files.createLink" 
"Files.exists" -- "Files.createSymbolicLink" 
"Files.delete" -- "Files.createLink" 
"Files.delete" -- "Files.createSymbolicLink" 
"Files.delete" -- "KeyStore.aliases" 
"Files.delete" -- "Enumeration<String>.hasMoreElements" 
"Files.delete" -- "Enumeration<String>.nextElement" 
"Files.delete" -- "KeyStore.deleteEntry" 
"Files.delete" -- "File.createTempFile" 
"FileSystems.getDefault" -- "Path.register" 
"FileSystems.getDefault" -- "WatchService.take" 
"FileSystems.getDefault" -- "WatchKey.pollEvents" 
"FileSystems.getDefault" -- "WatchEvent.context" 
"FileSystems.getDefault" -- "WatchEvent.kind" 
"FileSystems.getDefault" -- "WatchKey.reset" 
"FileSystems.getDefault" -- "WatchService.close" 
"Path.register" -- "WatchService.take" 
"Path.register" -- "WatchKey.pollEvents" 
"Path.register" -- "WatchEvent.context" 
"Path.register" -- "WatchEvent.kind" 
"Path.register" -- "WatchKey.reset" 
"Path.register" -- "WatchService.close" 
"WatchService.take" -- "WatchKey.pollEvents" 
"WatchService.take" -- "WatchEvent.context" 
"WatchService.take" -- "WatchEvent.kind" 
"WatchService.take" -- "WatchKey.reset" 
"WatchService.take" -- "WatchService.close" 
"WatchKey.pollEvents" -- "WatchEvent.context" 
"WatchKey.pollEvents" -- "WatchEvent.kind" 
"WatchKey.pollEvents" -- "WatchKey.reset" 
"WatchKey.pollEvents" -- "WatchService.close" 
"WatchEvent.context" -- "WatchEvent.kind" 
"WatchEvent.context" -- "WatchKey.reset" 
"WatchEvent.context" -- "WatchService.close" 
"WatchEvent.kind" -- "WatchKey.reset" 
"WatchEvent.kind" -- "WatchService.close" 
"WatchKey.reset" -- "WatchService.close" 
"Optional<Integer>.orElse" -- "Page<Book>.getTotalPages" 
"Optional.isPresent" -- "Optional.get" 
"Optional.isPresent" -- "Long.parseLong" 
"Optional.isPresent" -- "List.removeIf" 
"Optional.get" -- "Long.parseLong" 
"Optional.get" -- "List.removeIf" 
"Object.toString" -- "String.instance" 
"Object.toString" -- "List<Object>.get" 
"Process.destroy" -- "Process.isAlive" 
"Process.destroy" -- "Process.destroyForcibly" 
"Process.destroy" -- "Process.exitValue" 
"Process.isAlive" -- "Process.destroyForcibly" 
"Toolkit.getDefaultToolkit" -- "Robot.<init>" 
"Toolkit.getDefaultToolkit" -- "Robot.createScreenCapture" 
"Toolkit.getDefaultToolkit" -- "ImageIO.write" 
"Robot.<init>" -- "Robot.createScreenCapture" 
"Robot.<init>" -- "ImageIO.write" 
"Robot.createScreenCapture" -- "ImageIO.write" 
"ImageIO.write" -- "ImageIO.read" 
"List<Object>.add" -- "List<Object>.size" 
"List<Object>.add" -- "StreamTokenizer.<init>" 
"List<Object>.add" -- "StreamTokenizer.wordChars" 
"List<Object>.add" -- "StreamTokenizer.ordinaryChar" 
"List<Object>.add" -- "StreamTokenizer.commentChar" 
"List<Object>.add" -- "StreamTokenizer.eolIsSignificant" 
"List<Object>.add" -- "StreamTokenizer.nextToken" 
"ManagementFactory.getPlatformMBeanServer" -- "ManagementFactory.newPlatformMXBeanProxy" 
"ManagementFactory.getPlatformMBeanServer" -- "ObjectName.<init>" 
"ManagementFactory.getPlatformMBeanServer" -- "MBeanServer.registerMBean" 
"ObjectName.<init>" -- "MBeanServer.registerMBean" 
"Random.nextBytes" -- "Charset.forName" 
"List<Double>.add" -- "Map<String,List<Double>>.put" 
"ManagementFactory.getThreadMXBean" -- "ThreadMXBean.dumpAllThreads" 
"ManagementFactory.getThreadMXBean" -- "ThreadInfo.toString" 
"ThreadMXBean.dumpAllThreads" -- "ThreadInfo.toString" 
"Method.getName" -- "Map<String,Method>.get" 
"Method.getName" -- "Throwable.getMessage" 
"Annotation>,Annotation>.cast" -- "Annotation>,Annotation>.put" 
"Instant.now" -- "Button.<init>" 
"Instant.now" -- "Button.addStyleName" 
"Instant.now" -- "Button.setEnabled" 
"Instant.now" -- "ScheduledExecutorService.scheduleWithFixedDelay" 
"Instant.now" -- "Message.<init>" 
"Instant.now" -- "TextField.<init>" 
"Instant.now" -- "Builder.subject" 
"Instant.now" -- "Builder.issuer" 
"Instant.now" -- "Message.setText" 
"Instant.now" -- "Message.setTo" 
"Instant.now" -- "Message.setDate" 
"Instant.now" -- "Message.setId" 
"Instant.now" -- "Binder.setBean" 
"Instant.now" -- "Button.addClickListener" 
"Instant.now" -- "GridLayout.<init>" 
"Instant.now" -- "GridLayout.setSpacing" 
"Instant.now" -- "GridLayout.setMargin" 
"Instant.now" -- "Label.setId" 
"Instant.now" -- "Label.setValue" 
"Instant.now" -- "Label.setCaption" 
"Instant.now" -- "GridLayout.addComponent" 
"Instant.now" -- "Link.<init>" 
"Instant.now" -- "Link.setId" 
"Instant.now" -- "Link.setTargetName" 
"Instant.now" -- "TextField.setId" 
"Instant.now" -- "TextField.setCaption" 
"Instant.now" -- "TextField.setValue" 
"Instant.now" -- "TextField.setIcon" 
"Instant.now" -- "TextArea.<init>" 
"Instant.now" -- "TextArea.setCaption" 
"Instant.now" -- "TextArea.setId" 
"Instant.now" -- "TextArea.setValue" 
"Instant.now" -- "Panel.<init>" 
"Instant.now" -- "Panel.setContent" 
"Instant.now" -- "Button.setId" 
"Instant.now" -- "Button.setDescription" 
"Instant.now" -- "Button.setIcon" 
"Instant.now" -- "Grid.<init>" 
"Instant.now" -- "Grid<Row>.setColumns" 
"Instant.now" -- "Row.<init>" 
"Instant.now" -- "List<Row>.add" 
"Instant.now" -- "Grid<Row>.setItems" 
"Instant.now" -- "Panel.setSizeUndefined" 
"Instant.now" -- "Binder.<init>" 
"Instant.now" -- "Binder.readBean" 
"Instant.now" -- "TextField.setWidth" 
"Instant.now" -- "Binder.forField" 
"Instant.now" -- "Binder.validate" 
"Matcher.find" -- "Matcher.start" 
"Matcher.find" -- "Function<Matcher,String>.apply" 
"Matcher.find" -- "Matcher.end" 
"Matcher.find" -- "Matcher.group" 
"Matcher.find" -- "Map<String>.containsKey" 
"Matcher.find" -- "Deque<String>.peek" 
"Matcher.find" -- "Deque<String>.isEmpty" 
"Matcher.find" -- "Deque<String>.pop" 
"Matcher.find" -- "Deque<Object>.push" 
"Matcher.find" -- "Deque<String>.push" 
"Matcher.start" -- "Function<Matcher,String>.apply" 
"Matcher.start" -- "Matcher.end" 
"Matcher.start" -- "Matcher.group" 
"Function<Matcher,String>.apply" -- "Matcher.end" 
"Matcher.end" -- "Matcher.group" 
"Matcher.group" -- "Matcher.matches" 
"Matcher.group" -- "Base64.getUrlDecoder" 
"Matcher.group" -- "Map<String>.containsKey" 
"Matcher.group" -- "Deque<String>.peek" 
"Matcher.group" -- "Deque<String>.isEmpty" 
"Matcher.group" -- "Deque<String>.pop" 
"Matcher.group" -- "Deque<Object>.push" 
"Matcher.group" -- "Deque<String>.push" 
"KeyStore.aliases" -- "Enumeration<String>.hasMoreElements" 
"KeyStore.aliases" -- "Enumeration<String>.nextElement" 
"KeyStore.aliases" -- "KeyStore.deleteEntry" 
"Enumeration<String>.hasMoreElements" -- "Enumeration<String>.nextElement" 
"Enumeration<String>.hasMoreElements" -- "KeyStore.deleteEntry" 
"Enumeration<String>.nextElement" -- "KeyStore.deleteEntry" 
"KeyStore.getCertificate" -- "KeyStore.load" 
"KeyStore.getCertificate" -- "KeyStore.getInstance" 
"KeyStore.getCertificate" -- "Certificate.getPublicKey" 
"PasswordProtection.<init>" -- "KeyStore.getEntry" 
"KeyStore.load" -- "KeyStore.getDefaultType" 
"KeyStore.load" -- "KeyStore.getInstance" 
"KeyStore.load" -- "KeyStore.store" 
"KeyStore.load" -- "Certificate.getPublicKey" 
"KeyStore.load" -- "KeyStore.getKey" 
"KeyStore.load" -- "PrivateKey.cast" 
"KeyStore.getDefaultType" -- "KeyStore.getInstance" 
"KeyStore.getDefaultType" -- "KeyStore.store" 
"KeyStore.getInstance" -- "KeyStore.store" 
"KeyStore.getInstance" -- "Certificate.getPublicKey" 
"KeyStore.getInstance" -- "KeyStore.getKey" 
"KeyStore.getInstance" -- "PrivateKey.cast" 
"SecureRandom.nextLong" -- "SecureRandom.nextFloat" 
"SecureRandom.nextLong" -- "SecureRandom.nextBoolean" 
"SecureRandom.nextLong" -- "SecureRandom.ints" 
"SecureRandom.nextLong" -- "SecureRandom.longs" 
"SecureRandom.nextLong" -- "SecureRandom.doubles" 
"SecureRandom.nextLong" -- "SecureRandom.nextBytes" 
"SecureRandom.nextFloat" -- "SecureRandom.nextBoolean" 
"SecureRandom.nextFloat" -- "SecureRandom.ints" 
"SecureRandom.nextFloat" -- "SecureRandom.longs" 
"SecureRandom.nextFloat" -- "SecureRandom.doubles" 
"SecureRandom.nextFloat" -- "SecureRandom.nextBytes" 
"SecureRandom.nextBoolean" -- "SecureRandom.ints" 
"SecureRandom.nextBoolean" -- "SecureRandom.longs" 
"SecureRandom.nextBoolean" -- "SecureRandom.doubles" 
"SecureRandom.nextBoolean" -- "SecureRandom.nextBytes" 
"SecureRandom.ints" -- "SecureRandom.longs" 
"SecureRandom.ints" -- "SecureRandom.doubles" 
"SecureRandom.ints" -- "SecureRandom.nextBytes" 
"SecureRandom.longs" -- "SecureRandom.doubles" 
"SecureRandom.longs" -- "SecureRandom.nextBytes" 
"SecureRandom.doubles" -- "SecureRandom.nextBytes" 
"SecureRandom.nextBytes" -- "Base64.getUrlEncoder" 
"SecureRandom.nextBytes" -- "Encoder.encodeToString" 
"NameCallback.instance" -- "NameCallback.cast" 
"NameCallback.instance" -- "NameCallback.setName" 
"NameCallback.instance" -- "PasswordCallback.instance" 
"NameCallback.instance" -- "PasswordCallback.cast" 
"NameCallback.instance" -- "PasswordCallback.setPassword" 
"NameCallback.instance" -- "RealmCallback.instance" 
"NameCallback.instance" -- "RealmCallback.cast" 
"NameCallback.instance" -- "RealmCallback.setText" 
"NameCallback.instance" -- "AuthorizeCallback.instance" 
"NameCallback.instance" -- "AuthorizeCallback.cast" 
"NameCallback.instance" -- "AuthorizeCallback.setAuthorized" 
"NameCallback.instance" -- "NameCallback.getPrompt" 
"NameCallback.instance" -- "PasswordCallback.getPrompt" 
"NameCallback.cast" -- "NameCallback.setName" 
"NameCallback.cast" -- "PasswordCallback.instance" 
"NameCallback.cast" -- "PasswordCallback.cast" 
"NameCallback.cast" -- "PasswordCallback.setPassword" 
"NameCallback.cast" -- "RealmCallback.instance" 
"NameCallback.cast" -- "RealmCallback.cast" 
"NameCallback.cast" -- "RealmCallback.setText" 
"NameCallback.cast" -- "AuthorizeCallback.instance" 
"NameCallback.cast" -- "AuthorizeCallback.cast" 
"NameCallback.cast" -- "AuthorizeCallback.setAuthorized" 
"NameCallback.cast" -- "NameCallback.getPrompt" 
"NameCallback.cast" -- "PasswordCallback.getPrompt" 
"NameCallback.setName" -- "PasswordCallback.instance" 
"NameCallback.setName" -- "PasswordCallback.cast" 
"NameCallback.setName" -- "PasswordCallback.setPassword" 
"NameCallback.setName" -- "RealmCallback.instance" 
"NameCallback.setName" -- "RealmCallback.cast" 
"NameCallback.setName" -- "RealmCallback.setText" 
"NameCallback.setName" -- "AuthorizeCallback.instance" 
"NameCallback.setName" -- "AuthorizeCallback.cast" 
"NameCallback.setName" -- "AuthorizeCallback.setAuthorized" 
"NameCallback.setName" -- "NameCallback.getPrompt" 
"NameCallback.setName" -- "PasswordCallback.getPrompt" 
"PasswordCallback.instance" -- "PasswordCallback.cast" 
"PasswordCallback.instance" -- "PasswordCallback.setPassword" 
"PasswordCallback.instance" -- "RealmCallback.instance" 
"PasswordCallback.instance" -- "RealmCallback.cast" 
"PasswordCallback.instance" -- "RealmCallback.setText" 
"PasswordCallback.instance" -- "AuthorizeCallback.instance" 
"PasswordCallback.instance" -- "AuthorizeCallback.cast" 
"PasswordCallback.instance" -- "AuthorizeCallback.setAuthorized" 
"PasswordCallback.instance" -- "NameCallback.getPrompt" 
"PasswordCallback.instance" -- "PasswordCallback.getPrompt" 
"PasswordCallback.cast" -- "PasswordCallback.setPassword" 
"PasswordCallback.cast" -- "RealmCallback.instance" 
"PasswordCallback.cast" -- "RealmCallback.cast" 
"PasswordCallback.cast" -- "RealmCallback.setText" 
"PasswordCallback.cast" -- "AuthorizeCallback.instance" 
"PasswordCallback.cast" -- "AuthorizeCallback.cast" 
"PasswordCallback.cast" -- "AuthorizeCallback.setAuthorized" 
"PasswordCallback.cast" -- "NameCallback.getPrompt" 
"PasswordCallback.cast" -- "PasswordCallback.getPrompt" 
"PasswordCallback.setPassword" -- "RealmCallback.instance" 
"PasswordCallback.setPassword" -- "RealmCallback.cast" 
"PasswordCallback.setPassword" -- "RealmCallback.setText" 
"PasswordCallback.setPassword" -- "AuthorizeCallback.instance" 
"PasswordCallback.setPassword" -- "AuthorizeCallback.cast" 
"PasswordCallback.setPassword" -- "AuthorizeCallback.setAuthorized" 
"PasswordCallback.setPassword" -- "NameCallback.getPrompt" 
"PasswordCallback.setPassword" -- "PasswordCallback.getPrompt" 
"RealmCallback.instance" -- "RealmCallback.cast" 
"RealmCallback.instance" -- "RealmCallback.setText" 
"RealmCallback.instance" -- "AuthorizeCallback.instance" 
"RealmCallback.instance" -- "AuthorizeCallback.cast" 
"RealmCallback.instance" -- "AuthorizeCallback.setAuthorized" 
"RealmCallback.cast" -- "RealmCallback.setText" 
"RealmCallback.cast" -- "AuthorizeCallback.instance" 
"RealmCallback.cast" -- "AuthorizeCallback.cast" 
"RealmCallback.cast" -- "AuthorizeCallback.setAuthorized" 
"RealmCallback.setText" -- "AuthorizeCallback.instance" 
"RealmCallback.setText" -- "AuthorizeCallback.cast" 
"RealmCallback.setText" -- "AuthorizeCallback.setAuthorized" 
"AuthorizeCallback.instance" -- "AuthorizeCallback.cast" 
"AuthorizeCallback.instance" -- "AuthorizeCallback.setAuthorized" 
"AuthorizeCallback.cast" -- "AuthorizeCallback.setAuthorized" 
"Service.<init>" -- "Service.operation" 
"System.getSecurityManager" -- "SecurityManager.checkPermission" 
"CRC32.<init>" -- "Checksum.update" 
"CRC32.<init>" -- "Checksum.getValue" 
"Checksum.update" -- "Checksum.getValue" 
"NameCallback.getPrompt" -- "PasswordCallback.getPrompt" 
"Subject.getPrincipals" -- "UserPrincipal.<init>" 
"NameCallback.<init>" -- "PasswordCallback.<init>" 
"NameCallback.<init>" -- "CallbackHandler.handle" 
"NameCallback.<init>" -- "NameCallback.getName" 
"NameCallback.<init>" -- "PasswordCallback.getPassword" 
"PasswordCallback.<init>" -- "CallbackHandler.handle" 
"PasswordCallback.<init>" -- "NameCallback.getName" 
"PasswordCallback.<init>" -- "PasswordCallback.getPassword" 
"CallbackHandler.handle" -- "NameCallback.getName" 
"CallbackHandler.handle" -- "PasswordCallback.getPassword" 
"NameCallback.getName" -- "PasswordCallback.getPassword" 
"Matcher.matches" -- "Base64.getUrlDecoder" 
"Matcher.matches" -- "Enum.name" 
"Matcher.matches" -- "RowSet.isAfterLast" 
"Matcher.matches" -- "RowSet.getString" 
"Matcher.matches" -- "Pattern.toString" 
"Base64.getUrlEncoder" -- "Encoder.encodeToString" 
"File.toPath" -- "Files.readAllBytes" 
"File.toPath" -- "Base64.decodeBase64" 
"File.toPath" -- "KeyFactory.getInstance" 
"File.toPath" -- "X509EncodedKeySpec.<init>" 
"File.toPath" -- "KeyFactory.generatePublic" 
"File.toPath" -- "RSAPublicKey.cast" 
"File.toPath" -- "PKCS8EncodedKeySpec.<init>" 
"File.toPath" -- "KeyFactory.generatePrivate" 
"File.toPath" -- "RSAPrivateKey.cast" 
"File.toPath" -- "ObjectFactory.createP" 
"File.toPath" -- "ObjectFactory.createR" 
"File.toPath" -- "Context.getWmlObjectFactory" 
"File.toPath" -- "ObjectFactory.createText" 
"File.toPath" -- "Text.setValue" 
"File.toPath" -- "ObjectFactory.createRPr" 
"File.toPath" -- "ObjectFactory.createColor" 
"File.toPath" -- "Color.setVal" 
"File.toPath" -- "Resource.getFilename" 
"Files.readAllBytes" -- "Base64.decodeBase64" 
"Files.readAllBytes" -- "KeyFactory.getInstance" 
"Files.readAllBytes" -- "X509EncodedKeySpec.<init>" 
"Files.readAllBytes" -- "KeyFactory.generatePublic" 
"Files.readAllBytes" -- "RSAPublicKey.cast" 
"Files.readAllBytes" -- "PKCS8EncodedKeySpec.<init>" 
"Files.readAllBytes" -- "KeyFactory.generatePrivate" 
"Files.readAllBytes" -- "RSAPrivateKey.cast" 
"Files.readAllBytes" -- "ObjectFactory.createP" 
"Files.readAllBytes" -- "ObjectFactory.createR" 
"Files.readAllBytes" -- "Context.getWmlObjectFactory" 
"Files.readAllBytes" -- "ObjectFactory.createText" 
"Files.readAllBytes" -- "Text.setValue" 
"Files.readAllBytes" -- "ObjectFactory.createRPr" 
"Files.readAllBytes" -- "ObjectFactory.createColor" 
"Files.readAllBytes" -- "Color.setVal" 
"Files.readAllBytes" -- "Utils.getPrivateKey" 
"Files.readAllBytes" -- "Utils.getPublicKey" 
"Files.readAllBytes" -- "Signature.getInstance" 
"Files.readAllBytes" -- "Signature.initSign" 
"Files.readAllBytes" -- "Signature.update" 
"Files.readAllBytes" -- "Signature.sign" 
"Files.readAllBytes" -- "Signature.initVerify" 
"Files.readAllBytes" -- "Signature.verify" 
"Base64.decodeBase64" -- "KeyFactory.getInstance" 
"Base64.decodeBase64" -- "X509EncodedKeySpec.<init>" 
"Base64.decodeBase64" -- "KeyFactory.generatePublic" 
"Base64.decodeBase64" -- "RSAPublicKey.cast" 
"Base64.decodeBase64" -- "PKCS8EncodedKeySpec.<init>" 
"Base64.decodeBase64" -- "KeyFactory.generatePrivate" 
"Base64.decodeBase64" -- "RSAPrivateKey.cast" 
"KeyFactory.getInstance" -- "X509EncodedKeySpec.<init>" 
"KeyFactory.getInstance" -- "KeyFactory.generatePublic" 
"KeyFactory.getInstance" -- "RSAPublicKey.cast" 
"KeyFactory.getInstance" -- "PKCS8EncodedKeySpec.<init>" 
"KeyFactory.getInstance" -- "KeyFactory.generatePrivate" 
"KeyFactory.getInstance" -- "RSAPrivateKey.cast" 
"X509EncodedKeySpec.<init>" -- "KeyFactory.generatePublic" 
"X509EncodedKeySpec.<init>" -- "RSAPublicKey.cast" 
"KeyFactory.generatePublic" -- "RSAPublicKey.cast" 
"RSAPublicKey.cast" -- "SubjectPublicKeyInfo.getInstance" 
"PKCS8EncodedKeySpec.<init>" -- "KeyFactory.generatePrivate" 
"PKCS8EncodedKeySpec.<init>" -- "RSAPrivateKey.cast" 
"KeyFactory.generatePrivate" -- "RSAPrivateKey.cast" 
"Trie.builder" -- "Trie.parseText" 
"Trie.builder" -- "Collection.forEach" 
"Trie.builder" -- "Collection.toArray" 
"Trie.parseText" -- "Collection.forEach" 
"Trie.parseText" -- "Collection.toArray" 
"Collection.forEach" -- "Collection.toArray" 
"Stream<Character>.collect" -- "Map<Character,Long>.values" 
"Stream<Character>.collect" -- "Map<Character,Long>.size" 
"Stream<Character>.collect" -- "Map<Character,Boolean>.size" 
"Stream<Character>.collect" -- "List<Character>.stream" 
"Map<Character,Long>.values" -- "Map<Character,Long>.size" 
"Collectors.toCollection" -- "ArrayList<String>.removeAll" 
"Collectors.toCollection" -- "List<>.get" 
"Collectors.toCollection" -- "List<>.size" 
"StringBuilder.charAt" -- "StringBuilder.setLength" 
"StringBuilder.charAt" -- "StringBuilder.deleteCharAt" 
"StringBuilder.setLength" -- "Entry<String,List<String>>.getKey" 
"StringTokenizer.<init>" -- "StringTokenizer.countTokens" 
"StringTokenizer.<init>" -- "StringTokenizer.hasMoreElements" 
"StringTokenizer.<init>" -- "StringTokenizer.nextToken" 
"StringTokenizer.<init>" -- "Collections.list" 
"StringTokenizer.<init>" -- "Collections.list(new" 
"StringTokenizer.<init>" -- "StringTokenizer.hasMoreTokens" 
"List<Character>.stream" -- "String.concat" 
"StreamTokenizer.<init>" -- "StreamTokenizer.wordChars" 
"StreamTokenizer.<init>" -- "StreamTokenizer.ordinaryChar" 
"StreamTokenizer.<init>" -- "StreamTokenizer.commentChar" 
"StreamTokenizer.<init>" -- "StreamTokenizer.eolIsSignificant" 
"StreamTokenizer.<init>" -- "StreamTokenizer.nextToken" 
"StreamTokenizer.wordChars" -- "StreamTokenizer.ordinaryChar" 
"StreamTokenizer.wordChars" -- "StreamTokenizer.commentChar" 
"StreamTokenizer.wordChars" -- "StreamTokenizer.eolIsSignificant" 
"StreamTokenizer.wordChars" -- "StreamTokenizer.nextToken" 
"StreamTokenizer.ordinaryChar" -- "StreamTokenizer.commentChar" 
"StreamTokenizer.ordinaryChar" -- "StreamTokenizer.eolIsSignificant" 
"StreamTokenizer.ordinaryChar" -- "StreamTokenizer.nextToken" 
"StreamTokenizer.commentChar" -- "StreamTokenizer.eolIsSignificant" 
"StreamTokenizer.commentChar" -- "StreamTokenizer.nextToken" 
"StreamTokenizer.eolIsSignificant" -- "StreamTokenizer.nextToken" 
"StringTokenizer.hasMoreElements" -- "StringTokenizer.nextToken" 
"StringTokenizer.nextToken" -- "StringTokenizer.hasMoreTokens" 
"Collections.list" -- "Collections.list(new" 
"Character.toTitleCase" -- "Character.isSpaceChar" 
"Character.toTitleCase" -- "Character.toLowerCase" 
"Character.isSpaceChar" -- "Character.toLowerCase" 
"Map<String,Boolean>.forEach" -- "Function<String,Boolean>.apply" 
"Charset.newDecoder" -- "CharsetDecoder.onMalformedInput" 
"StringWriter.<init>" -- "StringWriter.toString" 
"StringWriter.<init>" -- "JAXBContext.newInstance" 
"StringWriter.<init>" -- "Marshaller.setProperty" 
"StringWriter.<init>" -- "Marshaller.marshal" 
"StringWriter.<init>" -- "XPath.selectNodes" 
"StringWriter.<init>" -- "Element.cast" 
"StringWriter.<init>" -- "Element.addAttribute" 
"StringWriter.<init>" -- "TransformerFactory.newInstance" 
"StringWriter.<init>" -- "TransformerFactory.setFeature" 
"StringWriter.<init>" -- "TransformerFactory.newTransformer" 
"StringWriter.<init>" -- "Transformer.setOutputProperty" 
"StringWriter.<init>" -- "StreamResult.<init>" 
"StringWriter.<init>" -- "Transformer.transform" 
"StringWriter.<init>" -- "Writer.toString" 
"StringWriter.<init>" -- "XPathFactory.newInstance" 
"StringWriter.<init>" -- "XPath.evaluate" 
"StringWriter.<init>" -- "NodeList.cast" 
"StringWriter.<init>" -- "NodeList.getLength" 
"StringWriter.<init>" -- "NodeList.item" 
"StringWriter.<init>" -- "Element.setAttribute" 
"StringWriter.<init>" -- "DOMSource.<init>" 
"VariableTree.getName" -- "VariableTree.getType" 
"VariableTree.getType" -- "VariableTree.getModifiers" 
"MethodTree.getParameters" -- "List<VariableTree>.isEmpty" 
"MethodTree.getParameters" -- "List<VariableTree>.forEach" 
"List<VariableTree>.isEmpty" -- "List<VariableTree>.forEach" 
"JAXBContext.newInstance" -- "Marshaller.setProperty" 
"JAXBContext.newInstance" -- "Marshaller.marshal" 
"JAXBContext.newInstance" -- "JAXBContext.createUnmarshaller" 
"JAXBContext.newInstance" -- "Unmarshaller.unmarshal" 
"JAXBContext.newInstance" -- "Book.cast" 
"JAXBContext.newInstance" -- "JAXBContext.createMarshaller" 
"Marshaller.setProperty" -- "Marshaller.marshal" 
"Marshaller.setProperty" -- "JAXBContext.createMarshaller" 
"Marshaller.marshal" -- "Unmarshaller.unmarshal" 
"Marshaller.marshal" -- "JAXBContext.createMarshaller" 
"Observable.from" -- "Observable.toBlocking" 
"Observable.from" -- "Observable.just" 
"Observable.from" -- "Observable<String>.subscribe" 
"Observable.from" -- "Observable<String>.toBlocking" 
"Observable.from" -- "StringBuilder,.subscribe" 
"Observable.from" -- "Observable.empty" 
"Map<String>.containsKey" -- "Cluster.openBucket" 
"Map<String>.containsKey" -- "String.instance" 
"Map<String>.containsKey" -- "Map<String>.containsValue" 
"Map<String>.containsKey" -- "Collections.emptySet" 
"Map<String>.containsKey" -- "Deque<String>.peek" 
"Map<String>.containsKey" -- "Deque<String>.isEmpty" 
"Map<String>.containsKey" -- "Deque<String>.pop" 
"Map<String>.containsKey" -- "Deque<Object>.push" 
"Map<String>.containsKey" -- "Deque<String>.push" 
"Map<String,Long>.entrySet" -- "Entry<String,Long>.getKey" 
"Map<String,Long>.entrySet" -- "Entry<String,Long>.getValue" 
"Map<String,Long>.entrySet" -- "Map<String,Long>.get" 
"Map<String,Long>.entrySet" -- "Map<String,Float>.put" 
"Entry<String,Long>.getKey" -- "Entry<String,Long>.getValue" 
"Entry<String,Long>.getKey" -- "Map<String,Long>.get" 
"Entry<String,Long>.getKey" -- "Map<String,Float>.put" 
"Entry<String,Long>.getValue" -- "Map<String,Long>.get" 
"Entry<String,Long>.getValue" -- "Map<String,Float>.put" 
"Map<String,Long>.get" -- "Map<String,Float>.put" 
"Map<String,Long>.put" -- "Long.parseLong" 
"Engine.<init>" -- "Map<Color>.computeIfAbsent" 
"AVLTree.height" -- "AVLTree.updateHeight" 
"AVLTree.height" -- "AVLTree.getBalance" 
"AVLTree.height" -- "AVLTree.rotateLeft" 
"AVLTree.height" -- "AVLTree.rotateRight" 
"AVLTree.updateHeight" -- "AVLTree.getBalance" 
"AVLTree.updateHeight" -- "AVLTree.rotateLeft" 
"AVLTree.updateHeight" -- "AVLTree.rotateRight" 
"AVLTree.getBalance" -- "AVLTree.rotateLeft" 
"AVLTree.getBalance" -- "AVLTree.rotateRight" 
"AVLTree.rotateLeft" -- "AVLTree.rotateRight" 
"Graph.getClass" -- "Vertex.cast" 
"Graph.getClass" -- "Vertex.getOuterType" 
"Graph.getClass" -- "Graph.getOuterType" 
"Graph.getClass" -- "Graph.equals" 
"Vertex.cast" -- "Vertex.getOuterType" 
"Vertex.cast" -- "Graph.getOuterType" 
"Vertex.cast" -- "Graph.equals" 
"Vertex.getOuterType" -- "Graph.getOuterType" 
"Vertex.getOuterType" -- "Graph.equals" 
"Graph.getOuterType" -- "Graph.equals" 
"Graph.getOuterType" -- "Graph.hashCode" 
"Map<Vertex,List<Vertex>>.keySet" -- "Map<Vertex,List<Vertex>>.get" 
"Map<Vertex,List<Vertex>>.get" -- "Vertex.<init>" 
"Map<Vertex,List<Vertex>>.get" -- "List<Vertex>.remove" 
"Vertex.<init>" -- "List<Vertex>.remove" 
"Vertex.<init>" -- "Map<Vertex,List<Vertex>>.values" 
"Vertex.<init>" -- "Map<Vertex,List<Vertex>>.remove" 
"Vertex.<init>" -- "Map<Vertex,List<Vertex>>.putIfAbsent" 
"Map<Vertex,List<Vertex>>.values" -- "Map<Vertex,List<Vertex>>.remove" 
"LinkedHashSet<String>.<init>" -- "LinkedList<String>.<init>" 
"LinkedHashSet<String>.<init>" -- "Queue<String>.add" 
"LinkedHashSet<String>.<init>" -- "Queue<String>.isEmpty" 
"LinkedHashSet<String>.<init>" -- "Queue<String>.poll" 
"LinkedHashSet<String>.<init>" -- "Graph.getAdjVertices" 
"LinkedHashSet<String>.<init>" -- "Stack<String>.<init>" 
"LinkedHashSet<String>.<init>" -- "Stack<String>.isEmpty" 
"LinkedList<String>.<init>" -- "Queue<String>.add" 
"LinkedList<String>.<init>" -- "Queue<String>.isEmpty" 
"LinkedList<String>.<init>" -- "Queue<String>.poll" 
"LinkedList<String>.<init>" -- "Graph.getAdjVertices" 
"Queue<String>.add" -- "Queue<String>.isEmpty" 
"Queue<String>.add" -- "Queue<String>.poll" 
"Queue<String>.add" -- "Graph.getAdjVertices" 
"Queue<String>.isEmpty" -- "Queue<String>.poll" 
"Queue<String>.isEmpty" -- "Graph.getAdjVertices" 
"Queue<String>.poll" -- "Graph.getAdjVertices" 
"Graph.getAdjVertices" -- "Stack<String>.<init>" 
"Graph.getAdjVertices" -- "Stack<String>.isEmpty" 
"Stack<String>.<init>" -- "Stack<String>.isEmpty" 
"Product.getPrice" -- "BigDecimal.add" 
"Product.getPrice" -- "Product.getId" 
"Product.getPrice" -- "Product.getName" 
"Product.getPrice" -- "Set<Product>.stream" 
"Product.getPrice" -- "Product.setId" 
"Product.getPrice" -- "Set<Product>.add" 
"BigDecimal.add" -- "BigDecimal.setScale" 
"List<Product>.remove" -- "List<Product>.forEach" 
"Map<String,Set>.containsKey" -- "Map<String,Set>.get" 
"Map<String,Set>.get" -- "CopyOnWriteArraySet.<init>" 
"Map<String,Set>.get" -- "Map<String,Set>.put" 
"CopyOnWriteArraySet.<init>" -- "Map<String,Set>.put" 
"Evaluation.stats" -- "Builder.activation" 
"Evaluation.stats" -- "Builder.nOut" 
"Evaluation.stats" -- "Builder.kernelSize" 
"Evaluation.stats" -- "Builder.nIn" 
"Evaluation.stats" -- "Builder.seed" 
"Evaluation.stats" -- "Builder.iterations" 
"Evaluation.stats" -- "Evaluation.<init>" 
"Evaluation.stats" -- "Evaluation.eval" 
"Evaluation.stats" -- "File.getParentFile" 
"Evaluation.stats" -- "Utils.downloadAndSave" 
"Evaluation.stats" -- "Utils.extractTarArchive" 
"Evaluation.stats" -- "Map<Integer,Double>.put" 
"Evaluation.stats" -- "Builder.stride" 
"Evaluation.stats" -- "File.getPath" 
"Builder.activation" -- "Builder.nOut" 
"Builder.activation" -- "Builder.kernelSize" 
"Builder.activation" -- "Builder.nIn" 
"Builder.activation" -- "Builder.seed" 
"Builder.activation" -- "Builder.iterations" 
"Builder.activation" -- "Evaluation.<init>" 
"Builder.activation" -- "Evaluation.eval" 
"Builder.activation" -- "File.getParentFile" 
"Builder.activation" -- "Utils.downloadAndSave" 
"Builder.activation" -- "Utils.extractTarArchive" 
"Builder.activation" -- "Map<Integer,Double>.put" 
"Builder.activation" -- "Builder.stride" 
"Builder.activation" -- "File.getPath" 
"Builder.nOut" -- "Builder.kernelSize" 
"Builder.nOut" -- "Builder.nIn" 
"Builder.nOut" -- "Builder.seed" 
"Builder.nOut" -- "File.getParentFile" 
"Builder.nOut" -- "Utils.downloadAndSave" 
"Builder.nOut" -- "Utils.extractTarArchive" 
"Builder.nOut" -- "Map<Integer,Double>.put" 
"Builder.nOut" -- "Builder.stride" 
"Builder.nOut" -- "File.getPath" 
"Builder.kernelSize" -- "Builder.nIn" 
"Builder.kernelSize" -- "Builder.seed" 
"Builder.kernelSize" -- "File.getParentFile" 
"Builder.kernelSize" -- "Utils.downloadAndSave" 
"Builder.kernelSize" -- "Utils.extractTarArchive" 
"Builder.kernelSize" -- "Map<Integer,Double>.put" 
"Builder.kernelSize" -- "Builder.stride" 
"Builder.kernelSize" -- "File.getPath" 
"Builder.nIn" -- "Builder.seed" 
"Builder.nIn" -- "Builder.iterations" 
"Builder.nIn" -- "Evaluation.<init>" 
"Builder.nIn" -- "Evaluation.eval" 
"Builder.nIn" -- "File.getParentFile" 
"Builder.nIn" -- "Utils.downloadAndSave" 
"Builder.nIn" -- "Utils.extractTarArchive" 
"Builder.nIn" -- "Map<Integer,Double>.put" 
"Builder.nIn" -- "Builder.stride" 
"Builder.nIn" -- "File.getPath" 
"Builder.seed" -- "File.getParentFile" 
"Builder.seed" -- "Utils.downloadAndSave" 
"Builder.seed" -- "Utils.extractTarArchive" 
"Builder.seed" -- "Map<Integer,Double>.put" 
"Builder.seed" -- "Builder.stride" 
"Builder.seed" -- "File.getPath" 
"Builder.iterations" -- "Evaluation.<init>" 
"Builder.iterations" -- "Evaluation.eval" 
"Evaluation.<init>" -- "Evaluation.eval" 
"File.getParentFile" -- "Utils.downloadAndSave" 
"File.getParentFile" -- "Utils.extractTarArchive" 
"File.getParentFile" -- "Map<Integer,Double>.put" 
"File.getParentFile" -- "Builder.stride" 
"File.getParentFile" -- "File.getPath" 
"Utils.downloadAndSave" -- "Utils.extractTarArchive" 
"Utils.downloadAndSave" -- "Map<Integer,Double>.put" 
"Utils.downloadAndSave" -- "Builder.stride" 
"Utils.downloadAndSave" -- "File.getPath" 
"Utils.extractTarArchive" -- "Map<Integer,Double>.put" 
"Utils.extractTarArchive" -- "Builder.stride" 
"Utils.extractTarArchive" -- "File.getPath" 
"Map<Integer,Double>.put" -- "Builder.stride" 
"Map<Integer,Double>.put" -- "File.getPath" 
"Builder.stride" -- "File.getPath" 
"File.getPath" -- "Document.<init>" 
"File.getPath" -- "TextField.<init>" 
"File.getPath" -- "Document.add" 
"File.getPath" -- "Path.toFile" 
"JFileChooser.<init>" -- "JFileChooser.showOpenDialog" 
"JFileChooser.<init>" -- "JFileChooser.getSelectedFile" 
"JFileChooser.showOpenDialog" -- "JFileChooser.getSelectedFile" 
"File.mkdirs" -- "Environment.<init>" 
"Result.getValue" -- "Result.getFacts" 
"Result.getValue" -- "Put.<init>" 
"Result.getValue" -- "Put.addColumn" 
"HashSet<String>.contains" -- "HashSet<String>.add" 
"Environment.jersey" -- "Environment.healthChecks" 
"ConcurrentMap<String,Set<URL>>.get" -- "Set<URL>.size" 
"ConcurrentMap<String,Set<URL>>.get" -- "ConcurrentMap<String,ConcurrentMap<URL,Set>>.get" 
"ConcurrentMap<String,Set<URL>>.get" -- "Map<URL,Set>.size" 
"ConcurrentMap<String,Set<URL>>.get" -- "Map<URL,Set>.entrySet" 
"ConcurrentMap<String,Set<URL>>.get" -- "Entry<URL,Set>.getKey" 
"ConcurrentMap<String,Set<URL>>.get" -- "Entry<URL,Set>.getValue" 
"ConcurrentMap<String,Set<URL>>.get" -- "Set<URL>.remove" 
"ConcurrentMap<String,Set<URL>>.get" -- "ConcurrentMap<String,Set<URL>>.putIfAbsent" 
"ConcurrentMap<String,Set<URL>>.get" -- "Set<URL>.add" 
"Set<URL>.size" -- "ConcurrentMap<String,ConcurrentMap<URL,Set>>.get" 
"Set<URL>.size" -- "Map<URL,Set>.size" 
"Set<URL>.size" -- "Map<URL,Set>.entrySet" 
"Set<URL>.size" -- "Entry<URL,Set>.getKey" 
"Set<URL>.size" -- "Entry<URL,Set>.getValue" 
"Set<URL>.size" -- "Set<URL>.remove" 
"ConcurrentMap<String,ConcurrentMap<URL,Set>>.get" -- "Map<URL,Set>.size" 
"ConcurrentMap<String,ConcurrentMap<URL,Set>>.get" -- "Map<URL,Set>.entrySet" 
"ConcurrentMap<String,ConcurrentMap<URL,Set>>.get" -- "Entry<URL,Set>.getKey" 
"ConcurrentMap<String,ConcurrentMap<URL,Set>>.get" -- "Entry<URL,Set>.getValue" 
"ConcurrentMap<String,ConcurrentMap<URL,Set>>.get" -- "URL.getServiceInterface" 
"ConcurrentMap<String,ConcurrentMap<URL,Set>>.get" -- "URL.getParameter" 
"ConcurrentMap<String,ConcurrentMap<URL,Set>>.get" -- "Map<URL,Set>.get" 
"ConcurrentMap<String,ConcurrentMap<URL,Set>>.get" -- "Set.remove" 
"ConcurrentMap<String,ConcurrentMap<URL,Set>>.get" -- "URL.getPort" 
"ConcurrentMap<String,ConcurrentMap<URL,Set>>.get" -- "URL.getPath" 
"ConcurrentMap<String,ConcurrentMap<URL,Set>>.get" -- "ConcurrentHashMap<URL,Set>.<init>" 
"ConcurrentMap<String,ConcurrentMap<URL,Set>>.get" -- "ConcurrentMap<String,ConcurrentMap<URL,Set>>.putIfAbsent" 
"ConcurrentMap<String,ConcurrentMap<URL,Set>>.get" -- "ConcurrentMap<URL,Set>.get" 
"ConcurrentMap<String,ConcurrentMap<URL,Set>>.get" -- "ConcurrentMap<URL,Set>.putIfAbsent" 
"Map<URL,Set>.size" -- "Map<URL,Set>.entrySet" 
"Map<URL,Set>.size" -- "Entry<URL,Set>.getKey" 
"Map<URL,Set>.size" -- "Entry<URL,Set>.getValue" 
"Map<URL,Set>.size" -- "URL.getServiceInterface" 
"Map<URL,Set>.size" -- "URL.getParameter" 
"Map<URL,Set>.size" -- "Map<URL,Set>.get" 
"Map<URL,Set>.size" -- "Set.remove" 
"Map<URL,Set>.entrySet" -- "Entry<URL,Set>.getKey" 
"Map<URL,Set>.entrySet" -- "Entry<URL,Set>.getValue" 
"Entry<URL,Set>.getKey" -- "Entry<URL,Set>.getValue" 
"URL.getServiceInterface" -- "HashMap<String,List<URL>>.<init>" 
"URL.getServiceInterface" -- "Map<String,List<URL>>.get" 
"URL.getServiceInterface" -- "ArrayList<URL>.<init>" 
"URL.getServiceInterface" -- "Map<String,List<URL>>.put" 
"URL.getServiceInterface" -- "List<URL>.add" 
"URL.getServiceInterface" -- "Map<String,List<URL>>.values" 
"URL.getServiceInterface" -- "URL.getServiceKey" 
"URL.getServiceInterface" -- "URL.getParameter" 
"URL.getServiceInterface" -- "Map<URL,Set>.get" 
"URL.getServiceInterface" -- "Set.remove" 
"HashMap<String,List<URL>>.<init>" -- "Map<String,List<URL>>.get" 
"HashMap<String,List<URL>>.<init>" -- "ArrayList<URL>.<init>" 
"HashMap<String,List<URL>>.<init>" -- "Map<String,List<URL>>.put" 
"HashMap<String,List<URL>>.<init>" -- "List<URL>.add" 
"HashMap<String,List<URL>>.<init>" -- "Map<String,List<URL>>.values" 
"HashMap<String,List<URL>>.<init>" -- "URL.getServiceKey" 
"Map<String,List<URL>>.get" -- "ArrayList<URL>.<init>" 
"Map<String,List<URL>>.get" -- "Map<String,List<URL>>.put" 
"Map<String,List<URL>>.get" -- "List<URL>.add" 
"Map<String,List<URL>>.get" -- "Map<String,List<URL>>.values" 
"Map<String,List<URL>>.get" -- "URL.getServiceKey" 
"ArrayList<URL>.<init>" -- "Map<String,List<URL>>.put" 
"ArrayList<URL>.<init>" -- "List<URL>.add" 
"ArrayList<URL>.<init>" -- "Map<String,List<URL>>.values" 
"ArrayList<URL>.<init>" -- "URL.getServiceKey" 
"Map<String,List<URL>>.put" -- "List<URL>.add" 
"Map<String,List<URL>>.put" -- "Map<String,List<URL>>.values" 
"Map<String,List<URL>>.put" -- "URL.getServiceKey" 
"List<URL>.add" -- "Map<String,List<URL>>.values" 
"List<URL>.add" -- "URL.getServiceKey" 
"Map<String,List<URL>>.values" -- "URL.getServiceKey" 
"URL.getParameter" -- "Map<URL,Set>.get" 
"URL.getParameter" -- "Set.remove" 
"Map<URL,Set>.get" -- "Set.remove" 
"Set.remove" -- "HashMap<String,String>.get" 
"Set.remove" -- "Message.<init>" 
"URL.getPort" -- "URL.getPath" 
"URL.getPort" -- "ConcurrentHashMap<URL,Set>.<init>" 
"URL.getPort" -- "ConcurrentMap<String,ConcurrentMap<URL,Set>>.putIfAbsent" 
"URL.getPort" -- "ConcurrentMap<URL,Set>.get" 
"URL.getPort" -- "ConcurrentMap<URL,Set>.putIfAbsent" 
"URL.getPath" -- "ConcurrentHashMap<URL,Set>.<init>" 
"URL.getPath" -- "ConcurrentMap<String,ConcurrentMap<URL,Set>>.putIfAbsent" 
"URL.getPath" -- "ConcurrentMap<URL,Set>.get" 
"URL.getPath" -- "ConcurrentMap<URL,Set>.putIfAbsent" 
"ConcurrentHashMap<URL,Set>.<init>" -- "ConcurrentMap<String,ConcurrentMap<URL,Set>>.putIfAbsent" 
"ConcurrentHashMap<URL,Set>.<init>" -- "ConcurrentMap<URL,Set>.get" 
"ConcurrentHashMap<URL,Set>.<init>" -- "ConcurrentMap<URL,Set>.putIfAbsent" 
"ConcurrentMap<String,ConcurrentMap<URL,Set>>.putIfAbsent" -- "ConcurrentMap<URL,Set>.get" 
"ConcurrentMap<String,ConcurrentMap<URL,Set>>.putIfAbsent" -- "ConcurrentMap<URL,Set>.putIfAbsent" 
"ConcurrentMap<URL,Set>.get" -- "ConcurrentMap<URL,Set>.putIfAbsent" 
"ConcurrentMap<String,Set<URL>>.putIfAbsent" -- "Set<URL>.add" 
"HashMap<String,String>.get" -- "Message.<init>" 
"DataSource.<init>" -- "DataSource.setUrl" 
"DataSource.<init>" -- "DataSource.setDriverClassName" 
"DataSource.setUrl" -- "DataSource.setDriverClassName" 
"Storage.get" -- "Blob.writer" 
"Storage.get" -- "WritableByteChannel.write" 
"Storage.get" -- "WritableByteChannel.close" 
"Storage.get" -- "Blob.getContent" 
"Storage.get" -- "Storage.create" 
"Blob.writer" -- "WritableByteChannel.write" 
"Blob.writer" -- "WritableByteChannel.close" 
"WritableByteChannel.write" -- "WritableByteChannel.close" 
"Button.<init>" -- "Button.addStyleName" 
"Button.<init>" -- "Button.getElement" 
"Button.<init>" -- "HTML.<init>" 
"Button.<init>" -- "Button.addClickHandler" 
"Button.<init>" -- "Button.setEnabled" 
"Button.<init>" -- "Button.setFocus" 
"Button.<init>" -- "Label.setText" 
"Button.<init>" -- "HTML.setText" 
"Button.<init>" -- "HTML.addStyleName" 
"Button.<init>" -- "HTML.setHTML" 
"Button.<init>" -- "HTML.removeStyleName" 
"Button.<init>" -- "ScheduledExecutorService.scheduleWithFixedDelay" 
"Button.<init>" -- "TextField.<init>" 
"Button.<init>" -- "Binder.setBean" 
"Button.<init>" -- "Button.addClickListener" 
"Button.<init>" -- "GridLayout.<init>" 
"Button.<init>" -- "GridLayout.setSpacing" 
"Button.<init>" -- "GridLayout.setMargin" 
"Button.<init>" -- "Label.setId" 
"Button.<init>" -- "Label.setValue" 
"Button.<init>" -- "Label.setCaption" 
"Button.<init>" -- "GridLayout.addComponent" 
"Button.<init>" -- "Link.<init>" 
"Button.<init>" -- "Link.setId" 
"Button.<init>" -- "Link.setTargetName" 
"Button.<init>" -- "TextField.setId" 
"Button.<init>" -- "TextField.setCaption" 
"Button.<init>" -- "TextField.setValue" 
"Button.<init>" -- "TextField.setIcon" 
"Button.<init>" -- "TextArea.<init>" 
"Button.<init>" -- "TextArea.setCaption" 
"Button.<init>" -- "TextArea.setId" 
"Button.<init>" -- "TextArea.setValue" 
"Button.<init>" -- "Panel.<init>" 
"Button.<init>" -- "Panel.setContent" 
"Button.<init>" -- "Button.setId" 
"Button.<init>" -- "Button.setDescription" 
"Button.<init>" -- "Button.setIcon" 
"Button.<init>" -- "Grid.<init>" 
"Button.<init>" -- "Grid<Row>.setColumns" 
"Button.<init>" -- "Row.<init>" 
"Button.<init>" -- "List<Row>.add" 
"Button.<init>" -- "Grid<Row>.setItems" 
"Button.<init>" -- "Panel.setSizeUndefined" 
"Button.<init>" -- "Binder.<init>" 
"Button.<init>" -- "Binder.readBean" 
"Button.<init>" -- "TextField.setWidth" 
"Button.<init>" -- "Binder.forField" 
"Button.<init>" -- "Binder.validate" 
"Button.<init>" -- "Grid.setHeight" 
"Button.<init>" -- "Grid.setColumns" 
"Button.<init>" -- "Grid.getColumnByKey" 
"Button.<init>" -- "TextField.setPlaceholder" 
"Button.<init>" -- "TextField.setValueChangeMode" 
"Button.<init>" -- "TextField.addValueChangeListener" 
"Button.<init>" -- "Grid.asSingleSelect" 
"Button.<init>" -- "TextField.getValue" 
"Button.addStyleName" -- "Button.getElement" 
"Button.addStyleName" -- "HTML.<init>" 
"Button.addStyleName" -- "Button.addClickHandler" 
"Button.addStyleName" -- "Button.setEnabled" 
"Button.addStyleName" -- "Button.setFocus" 
"Button.addStyleName" -- "Label.setText" 
"Button.addStyleName" -- "HTML.setText" 
"Button.addStyleName" -- "HTML.addStyleName" 
"Button.addStyleName" -- "HTML.setHTML" 
"Button.addStyleName" -- "HTML.removeStyleName" 
"Button.addStyleName" -- "ScheduledExecutorService.scheduleWithFixedDelay" 
"Button.addStyleName" -- "TextField.<init>" 
"Button.addStyleName" -- "Binder.setBean" 
"Button.addStyleName" -- "Button.addClickListener" 
"Button.addStyleName" -- "GridLayout.<init>" 
"Button.addStyleName" -- "GridLayout.setSpacing" 
"Button.addStyleName" -- "GridLayout.setMargin" 
"Button.addStyleName" -- "Label.setId" 
"Button.addStyleName" -- "Label.setValue" 
"Button.addStyleName" -- "Label.setCaption" 
"Button.addStyleName" -- "GridLayout.addComponent" 
"Button.addStyleName" -- "Link.<init>" 
"Button.addStyleName" -- "Link.setId" 
"Button.addStyleName" -- "Link.setTargetName" 
"Button.addStyleName" -- "TextField.setId" 
"Button.addStyleName" -- "TextField.setCaption" 
"Button.addStyleName" -- "TextField.setValue" 
"Button.addStyleName" -- "TextField.setIcon" 
"Button.addStyleName" -- "TextArea.<init>" 
"Button.addStyleName" -- "TextArea.setCaption" 
"Button.addStyleName" -- "TextArea.setId" 
"Button.addStyleName" -- "TextArea.setValue" 
"Button.addStyleName" -- "Panel.<init>" 
"Button.addStyleName" -- "Panel.setContent" 
"Button.addStyleName" -- "Button.setId" 
"Button.addStyleName" -- "Button.setDescription" 
"Button.addStyleName" -- "Button.setIcon" 
"Button.addStyleName" -- "Grid.<init>" 
"Button.addStyleName" -- "Grid<Row>.setColumns" 
"Button.addStyleName" -- "Row.<init>" 
"Button.addStyleName" -- "List<Row>.add" 
"Button.addStyleName" -- "Grid<Row>.setItems" 
"Button.addStyleName" -- "Panel.setSizeUndefined" 
"Button.addStyleName" -- "Binder.<init>" 
"Button.addStyleName" -- "Binder.readBean" 
"Button.addStyleName" -- "TextField.setWidth" 
"Button.addStyleName" -- "Binder.forField" 
"Button.addStyleName" -- "Binder.validate" 
"Button.getElement" -- "HTML.<init>" 
"Button.getElement" -- "Button.addClickHandler" 
"Button.getElement" -- "Button.setEnabled" 
"Button.getElement" -- "Button.setFocus" 
"Button.getElement" -- "Label.setText" 
"Button.getElement" -- "HTML.setText" 
"Button.getElement" -- "HTML.addStyleName" 
"Button.getElement" -- "HTML.setHTML" 
"Button.getElement" -- "HTML.removeStyleName" 
"Button.getElement" -- "Binder.bindInstanceFields" 
"Button.getElement" -- "Button.addClickListener" 
"HTML.<init>" -- "Button.addClickHandler" 
"HTML.<init>" -- "Button.setEnabled" 
"HTML.<init>" -- "Button.setFocus" 
"HTML.<init>" -- "Label.setText" 
"HTML.<init>" -- "HTML.setText" 
"HTML.<init>" -- "HTML.addStyleName" 
"HTML.<init>" -- "HTML.setHTML" 
"HTML.<init>" -- "HTML.removeStyleName" 
"Button.addClickHandler" -- "Button.setEnabled" 
"Button.addClickHandler" -- "Button.setFocus" 
"Button.addClickHandler" -- "Label.setText" 
"Button.addClickHandler" -- "HTML.setText" 
"Button.addClickHandler" -- "HTML.addStyleName" 
"Button.addClickHandler" -- "HTML.setHTML" 
"Button.addClickHandler" -- "HTML.removeStyleName" 
"Button.setEnabled" -- "Button.setFocus" 
"Button.setEnabled" -- "Label.setText" 
"Button.setEnabled" -- "HTML.setText" 
"Button.setEnabled" -- "HTML.addStyleName" 
"Button.setEnabled" -- "HTML.setHTML" 
"Button.setEnabled" -- "HTML.removeStyleName" 
"Button.setEnabled" -- "ScheduledExecutorService.scheduleWithFixedDelay" 
"Button.setEnabled" -- "TextField.<init>" 
"Button.setEnabled" -- "Binder.setBean" 
"Button.setEnabled" -- "Button.addClickListener" 
"Button.setEnabled" -- "GridLayout.<init>" 
"Button.setEnabled" -- "GridLayout.setSpacing" 
"Button.setEnabled" -- "GridLayout.setMargin" 
"Button.setEnabled" -- "Label.setId" 
"Button.setEnabled" -- "Label.setValue" 
"Button.setEnabled" -- "Label.setCaption" 
"Button.setEnabled" -- "GridLayout.addComponent" 
"Button.setEnabled" -- "Link.<init>" 
"Button.setEnabled" -- "Link.setId" 
"Button.setEnabled" -- "Link.setTargetName" 
"Button.setEnabled" -- "TextField.setId" 
"Button.setEnabled" -- "TextField.setCaption" 
"Button.setEnabled" -- "TextField.setValue" 
"Button.setEnabled" -- "TextField.setIcon" 
"Button.setEnabled" -- "TextArea.<init>" 
"Button.setEnabled" -- "TextArea.setCaption" 
"Button.setEnabled" -- "TextArea.setId" 
"Button.setEnabled" -- "TextArea.setValue" 
"Button.setEnabled" -- "Panel.<init>" 
"Button.setEnabled" -- "Panel.setContent" 
"Button.setEnabled" -- "Button.setId" 
"Button.setEnabled" -- "Button.setDescription" 
"Button.setEnabled" -- "Button.setIcon" 
"Button.setEnabled" -- "Grid.<init>" 
"Button.setEnabled" -- "Grid<Row>.setColumns" 
"Button.setEnabled" -- "Row.<init>" 
"Button.setEnabled" -- "List<Row>.add" 
"Button.setEnabled" -- "Grid<Row>.setItems" 
"Button.setEnabled" -- "Panel.setSizeUndefined" 
"Button.setEnabled" -- "Binder.<init>" 
"Button.setEnabled" -- "Binder.readBean" 
"Button.setEnabled" -- "TextField.setWidth" 
"Button.setEnabled" -- "Binder.forField" 
"Button.setEnabled" -- "Binder.validate" 
"Button.setFocus" -- "Label.setText" 
"Button.setFocus" -- "HTML.setText" 
"Button.setFocus" -- "HTML.addStyleName" 
"Button.setFocus" -- "HTML.setHTML" 
"Button.setFocus" -- "HTML.removeStyleName" 
"Label.setText" -- "HTML.setText" 
"Label.setText" -- "HTML.addStyleName" 
"Label.setText" -- "HTML.setHTML" 
"Label.setText" -- "HTML.removeStyleName" 
"Label.setText" -- "Button.setText" 
"Label.setText" -- "Button.setOnAction" 
"Label.setText" -- "Button.setStyle" 
"Label.setText" -- "TextField.setOnKeyPressed" 
"Label.setText" -- "TextField.textProperty" 
"HTML.setText" -- "HTML.addStyleName" 
"HTML.setText" -- "HTML.setHTML" 
"HTML.setText" -- "HTML.removeStyleName" 
"HTML.addStyleName" -- "HTML.setHTML" 
"HTML.addStyleName" -- "HTML.removeStyleName" 
"HTML.setHTML" -- "HTML.removeStyleName" 
"Context.parse" -- "Map<String,Object>.cast" 
"Context.parse" -- "Context.render" 
"Map<String,Object>.cast" -- "Context.render" 
"Long.parseLong" -- "List.removeIf" 
"Long.parseLong" -- "Optional.orElse" 
"Long.parseLong" -- "ZonedDateTime.ofInstant" 
"Long.parseLong" -- "DateTimeFormatter.parse" 
"Long.parseLong" -- "ZonedDateTime.from" 
"Long.parseLong" -- "Map<String,Object>.forEach" 
"Long.parseLong" -- "Map.containsKey" 
"Long.parseLong" -- "Map.put" 
"Long.parseLong" -- "Map.get" 
"Long.parseLong" -- "Map.replace" 
"Long.parseLong" -- "Object>.equals" 
"Server.start" -- "Server.awaitTermination" 
"Server.start" -- "Server.builder" 
"Server.start" -- "Server.<init>" 
"Server.start" -- "Server.setConnectors" 
"Server.start" -- "Server.setHandler" 
"BigDecimal.doubleValue" -- "BigDecimal.setScale" 
"BigDecimal.doubleValue" -- "Double.toString" 
"Monitor.newGuard" -- "Monitor.enterWhen" 
"Iterable<Integer>.cast" -- "OptionalLong.of" 
"Iterable<Integer>.cast" -- "OptionalInt.of" 
"Iterable<Integer>.cast" -- "OptionalDouble.of" 
"OptionalLong.of" -- "OptionalInt.of" 
"OptionalLong.of" -- "OptionalDouble.of" 
"OptionalInt.of" -- "OptionalDouble.of" 
"PreparedStatement.executeQuery" -- "Connection.prepareStatement" 
"PreparedStatement.executeQuery" -- "ResultSet.getInt" 
"PreparedStatement.executeQuery" -- "PreparedStatement.setInt" 
"PreparedStatement.executeQuery" -- "ResultSet.first" 
"PreparedStatement.executeQuery" -- "PreparedStatement.close" 
"PreparedStatement.execute" -- "Connection.prepareStatement" 
"Locale.getAvailableLocales" -- "Locale.lookup" 
"ForkJoinPool.commonPool" -- "ForkJoinPool.invoke" 
"Executors.newCachedThreadPool" -- "LinkedBlockingQueue<Runnable>.<init>" 
"Executors.newCachedThreadPool" -- "ThreadPoolExecutor.<init>" 
"Executors.newCachedThreadPool" -- "ThreadPoolExecutor.setMaximumPoolSize" 
"Executors.newCachedThreadPool" -- "ScheduledThreadPoolExecutor.cast" 
"LinkedBlockingQueue<Runnable>.<init>" -- "ThreadPoolExecutor.<init>" 
"LinkedBlockingQueue<Runnable>.<init>" -- "ThreadPoolExecutor.setMaximumPoolSize" 
"LinkedBlockingQueue<Runnable>.<init>" -- "ScheduledThreadPoolExecutor.cast" 
"LinkedBlockingQueue<Runnable>.<init>" -- "ThreadPoolExecutor.allowCoreThreadTimeOut" 
"ThreadPoolExecutor.<init>" -- "ThreadPoolExecutor.setMaximumPoolSize" 
"ThreadPoolExecutor.<init>" -- "ScheduledThreadPoolExecutor.cast" 
"ThreadPoolExecutor.<init>" -- "ThreadPoolExecutor.allowCoreThreadTimeOut" 
"ThreadPoolExecutor.setMaximumPoolSize" -- "ScheduledThreadPoolExecutor.cast" 
"Future<Double>.get" -- "ScheduledExecutorService.scheduleWithFixedDelay" 
"Future<Double>.get" -- "Future<Double>.isDone" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "TextField.<init>" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Binder.setBean" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Button.addClickListener" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "GridLayout.<init>" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "GridLayout.setSpacing" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "GridLayout.setMargin" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Label.setId" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Label.setValue" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Label.setCaption" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "GridLayout.addComponent" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Link.<init>" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Link.setId" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Link.setTargetName" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "TextField.setId" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "TextField.setCaption" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "TextField.setValue" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "TextField.setIcon" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "TextArea.<init>" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "TextArea.setCaption" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "TextArea.setId" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "TextArea.setValue" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Panel.<init>" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Panel.setContent" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Button.setId" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Button.setDescription" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Button.setIcon" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Grid.<init>" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Grid<Row>.setColumns" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Row.<init>" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "List<Row>.add" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Grid<Row>.setItems" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Panel.setSizeUndefined" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Binder.<init>" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Binder.readBean" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "TextField.setWidth" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Binder.forField" 
"ScheduledExecutorService.scheduleWithFixedDelay" -- "Binder.validate" 
"Context.lookup" -- "DataSource.cast" 
"DataSource.cast" -- "Environment.getProperty" 
"DataSource.cast" -- "DataSource.instance" 
"QName.<init>" -- "XMLInputFactory.newInstance" 
"QName.<init>" -- "XMLInputFactory.createXMLEventReader" 
"QName.<init>" -- "XMLEventReader.hasNext" 
"QName.<init>" -- "XMLEventReader.nextEvent" 
"QName.<init>" -- "XMLEvent.isStartElement" 
"QName.<init>" -- "XMLEvent.asStartElement" 
"QName.<init>" -- "StartElement.getName" 
"QName.<init>" -- "StartElement.getAttributeByName" 
"QName.<init>" -- "XMLEvent.asCharacters" 
"QName.<init>" -- "XMLEvent.isEndElement" 
"QName.<init>" -- "XMLEvent.asEndElement" 
"QName.<init>" -- "EndElement.getName" 
"Entry<Long,String>.getValue" -- "Entry<Long,String>.getKey" 
"ConcurrentMap<String,Book>.values" -- "List<Book>.addAll" 
"Book.setId" -- "ConcurrentMap<String,Book>.put" 
"Book.setId" -- "Book.setName" 
"Book.setId" -- "Book.setIsbn" 
"Book.setId" -- "Book.setAuthor" 
"Book.setId" -- "Book.setPages" 
"Book.setId" -- "Book.getId" 
"Book.setId" -- "List<Book>.stream" 
"Book.setId" -- "ResultSet.getLong" 
"Book.setId" -- "Book.setTitle" 
"Book.setId" -- "Map<Long,Book>.putAll" 
"ConcurrentMap<String,Book>.put" -- "Book.setName" 
"ConcurrentMap<String,Book>.put" -- "Book.setIsbn" 
"ConcurrentMap<String,Book>.put" -- "Book.setAuthor" 
"ConcurrentMap<String,Book>.put" -- "Book.setPages" 
"ConcurrentMap<String,Book>.put" -- "Book.getId" 
"Book.setName" -- "Book.setIsbn" 
"Book.setName" -- "Book.setAuthor" 
"Book.setName" -- "Book.setPages" 
"Book.setName" -- "Book.getId" 
"Book.setIsbn" -- "Book.setAuthor" 
"Book.setIsbn" -- "Book.setPages" 
"Book.setIsbn" -- "Book.getId" 
"Book.setAuthor" -- "Book.setPages" 
"Book.setAuthor" -- "Book.getId" 
"Book.setAuthor" -- "Book.getAuthor" 
"Book.setAuthor" -- "Book.getTitle" 
"Book.setAuthor" -- "ResultSet.getLong" 
"Book.setAuthor" -- "Map<String,String>.keySet" 
"Book.setAuthor" -- "Book.setTitle" 
"Book.setPages" -- "Book.getId" 
"Book.getId" -- "Book.getIsbn" 
"Book.getId" -- "Book.getName" 
"Book.getId" -- "Book.getAuthor" 
"Book.getId" -- "Book.getPages" 
"Book.getId" -- "List<Book>.stream" 
"Book.getId" -- "Book.getTitle" 
"Book.getId" -- "Book.getSubject" 
"Book.getId" -- "Map<Long,Book>.putAll" 
"Book.getIsbn" -- "Book.getName" 
"Book.getIsbn" -- "Book.getAuthor" 
"Book.getIsbn" -- "Book.getPages" 
"Book.getIsbn" -- "Optional<Value>.get" 
"Book.getIsbn" -- "Value.get" 
"Book.getName" -- "Book.getAuthor" 
"Book.getName" -- "Book.getPages" 
"Book.getAuthor" -- "Book.getPages" 
"Book.getAuthor" -- "Book.getTitle" 
"Book.getAuthor" -- "Book.getSubject" 
"Book.getAuthor" -- "Book.setTitle" 
"Book.getAuthor" -- "Book.getBookId" 
"Book.getAuthor" -- "Book.getNumberOfPages" 
"ImageIO.read" -- "BufferedImage.getHeight" 
"ImageIO.read" -- "BufferedImage.getWidth" 
"ImageIO.read" -- "Font.<init>" 
"ImageIO.read" -- "AttributedString.<init>" 
"ImageIO.read" -- "AttributedString.addAttribute" 
"ImageIO.read" -- "Graphics.getFontMetrics" 
"ImageIO.read" -- "FontMetrics.stringWidth" 
"ImageIO.read" -- "FontMetrics.getAscent" 
"ImageIO.read" -- "FontMetrics.getHeight" 
"ImageIO.read" -- "AttributedString.getIterator" 
"ImageIO.read" -- "Graphics.drawString" 
"ImageIO.read" -- "Graphics.setColor" 
"BufferedImage.createGraphics" -- "Graphics2D.drawImage" 
"BufferedImage.createGraphics" -- "Graphics2D.dispose" 
"Graphics2D.drawImage" -- "Graphics2D.dispose" 
"FontMetrics.getFontRenderContext" -- "Font.createGlyphVector" 
"FontMetrics.getFontRenderContext" -- "GlyphVector.getOutline" 
"FontMetrics.getFontRenderContext" -- "Shape.getBounds" 
"FontMetrics.getFontRenderContext" -- "BufferedImage.getHeight" 
"FontMetrics.getFontRenderContext" -- "BufferedImage.getWidth" 
"FontMetrics.getFontRenderContext" -- "Font.getSize2D" 
"FontMetrics.getFontRenderContext" -- "Font.getStyle" 
"FontMetrics.getFontRenderContext" -- "Font.deriveFont" 
"Font.createGlyphVector" -- "GlyphVector.getOutline" 
"Font.createGlyphVector" -- "Shape.getBounds" 
"Font.createGlyphVector" -- "BufferedImage.getHeight" 
"Font.createGlyphVector" -- "BufferedImage.getWidth" 
"Font.createGlyphVector" -- "Font.getSize2D" 
"Font.createGlyphVector" -- "Font.getStyle" 
"Font.createGlyphVector" -- "Font.deriveFont" 
"GlyphVector.getOutline" -- "Shape.getBounds" 
"GlyphVector.getOutline" -- "BufferedImage.getHeight" 
"GlyphVector.getOutline" -- "BufferedImage.getWidth" 
"GlyphVector.getOutline" -- "Font.getSize2D" 
"GlyphVector.getOutline" -- "Font.getStyle" 
"GlyphVector.getOutline" -- "Font.deriveFont" 
"Shape.getBounds" -- "BufferedImage.getHeight" 
"Shape.getBounds" -- "BufferedImage.getWidth" 
"Shape.getBounds" -- "Font.getSize2D" 
"Shape.getBounds" -- "Font.getStyle" 
"Shape.getBounds" -- "Font.deriveFont" 
"BufferedImage.getHeight" -- "BufferedImage.getWidth" 
"BufferedImage.getHeight" -- "Font.getSize2D" 
"BufferedImage.getHeight" -- "Font.getStyle" 
"BufferedImage.getHeight" -- "Font.deriveFont" 
"BufferedImage.getHeight" -- "Font.<init>" 
"BufferedImage.getHeight" -- "AttributedString.<init>" 
"BufferedImage.getHeight" -- "AttributedString.addAttribute" 
"BufferedImage.getHeight" -- "Graphics.getFontMetrics" 
"BufferedImage.getHeight" -- "FontMetrics.stringWidth" 
"BufferedImage.getHeight" -- "FontMetrics.getAscent" 
"BufferedImage.getHeight" -- "FontMetrics.getHeight" 
"BufferedImage.getHeight" -- "AttributedString.getIterator" 
"BufferedImage.getHeight" -- "Graphics.drawString" 
"BufferedImage.getHeight" -- "ImageIcon.<init>" 
"BufferedImage.getHeight" -- "JLabel.<init>" 
"BufferedImage.getHeight" -- "JPanel.<init>" 
"BufferedImage.getHeight" -- "JPanel.add" 
"BufferedImage.getHeight" -- "JFrame.<init>" 
"BufferedImage.getHeight" -- "Dimension.<init>" 
"BufferedImage.getHeight" -- "JFrame.setSize" 
"BufferedImage.getHeight" -- "JFrame.add" 
"BufferedImage.getHeight" -- "JFrame.setVisible" 
"BufferedImage.getHeight" -- "BasicStroke.<init>" 
"BufferedImage.getHeight" -- "Graphics2D.setStroke" 
"BufferedImage.getHeight" -- "Graphics2D.setColor" 
"BufferedImage.getHeight" -- "Graphics2D.drawRect" 
"BufferedImage.getWidth" -- "Font.getSize2D" 
"BufferedImage.getWidth" -- "Font.getStyle" 
"BufferedImage.getWidth" -- "Font.deriveFont" 
"BufferedImage.getWidth" -- "Font.<init>" 
"BufferedImage.getWidth" -- "AttributedString.<init>" 
"BufferedImage.getWidth" -- "AttributedString.addAttribute" 
"BufferedImage.getWidth" -- "Graphics.getFontMetrics" 
"BufferedImage.getWidth" -- "FontMetrics.stringWidth" 
"BufferedImage.getWidth" -- "FontMetrics.getAscent" 
"BufferedImage.getWidth" -- "FontMetrics.getHeight" 
"BufferedImage.getWidth" -- "AttributedString.getIterator" 
"BufferedImage.getWidth" -- "Graphics.drawString" 
"BufferedImage.getWidth" -- "ImageIcon.<init>" 
"BufferedImage.getWidth" -- "JLabel.<init>" 
"BufferedImage.getWidth" -- "JPanel.<init>" 
"BufferedImage.getWidth" -- "JPanel.add" 
"BufferedImage.getWidth" -- "JFrame.<init>" 
"BufferedImage.getWidth" -- "Dimension.<init>" 
"BufferedImage.getWidth" -- "JFrame.setSize" 
"BufferedImage.getWidth" -- "JFrame.add" 
"BufferedImage.getWidth" -- "JFrame.setVisible" 
"BufferedImage.getWidth" -- "BasicStroke.<init>" 
"BufferedImage.getWidth" -- "Graphics2D.setStroke" 
"BufferedImage.getWidth" -- "Graphics2D.setColor" 
"BufferedImage.getWidth" -- "Graphics2D.drawRect" 
"Font.getSize2D" -- "Font.getStyle" 
"Font.getSize2D" -- "Font.deriveFont" 
"Font.getStyle" -- "Font.deriveFont" 
"Font.<init>" -- "AttributedString.<init>" 
"Font.<init>" -- "AttributedString.addAttribute" 
"Font.<init>" -- "Graphics.getFontMetrics" 
"Font.<init>" -- "FontMetrics.stringWidth" 
"Font.<init>" -- "FontMetrics.getAscent" 
"Font.<init>" -- "FontMetrics.getHeight" 
"Font.<init>" -- "AttributedString.getIterator" 
"Font.<init>" -- "Graphics.drawString" 
"Font.<init>" -- "Graphics.setColor" 
"Font.<init>" -- "Document.<init>" 
"Font.<init>" -- "Document.add" 
"Font.<init>" -- "Document.open" 
"Font.<init>" -- "Document.close" 
"Font.<init>" -- "Font.setStyle" 
"Font.<init>" -- "Font.setSize" 
"AttributedString.<init>" -- "AttributedString.addAttribute" 
"AttributedString.<init>" -- "Graphics.getFontMetrics" 
"AttributedString.<init>" -- "FontMetrics.stringWidth" 
"AttributedString.<init>" -- "FontMetrics.getAscent" 
"AttributedString.<init>" -- "FontMetrics.getHeight" 
"AttributedString.<init>" -- "AttributedString.getIterator" 
"AttributedString.<init>" -- "Graphics.drawString" 
"AttributedString.addAttribute" -- "Graphics.getFontMetrics" 
"AttributedString.addAttribute" -- "FontMetrics.stringWidth" 
"AttributedString.addAttribute" -- "FontMetrics.getAscent" 
"AttributedString.addAttribute" -- "FontMetrics.getHeight" 
"AttributedString.addAttribute" -- "AttributedString.getIterator" 
"AttributedString.addAttribute" -- "Graphics.drawString" 
"Graphics.getFontMetrics" -- "FontMetrics.stringWidth" 
"Graphics.getFontMetrics" -- "FontMetrics.getAscent" 
"Graphics.getFontMetrics" -- "FontMetrics.getHeight" 
"Graphics.getFontMetrics" -- "AttributedString.getIterator" 
"Graphics.getFontMetrics" -- "Graphics.drawString" 
"FontMetrics.stringWidth" -- "FontMetrics.getAscent" 
"FontMetrics.stringWidth" -- "FontMetrics.getHeight" 
"FontMetrics.stringWidth" -- "AttributedString.getIterator" 
"FontMetrics.stringWidth" -- "Graphics.drawString" 
"FontMetrics.getAscent" -- "FontMetrics.getHeight" 
"FontMetrics.getAscent" -- "AttributedString.getIterator" 
"FontMetrics.getAscent" -- "Graphics.drawString" 
"FontMetrics.getHeight" -- "AttributedString.getIterator" 
"FontMetrics.getHeight" -- "Graphics.drawString" 
"AttributedString.getIterator" -- "Graphics.drawString" 
"Graphics.drawString" -- "Graphics.setColor" 
"ImageView.<init>" -- "ImageView.setImage" 
"ImageIcon.<init>" -- "JLabel.<init>" 
"ImageIcon.<init>" -- "JPanel.<init>" 
"ImageIcon.<init>" -- "JPanel.add" 
"ImageIcon.<init>" -- "JFrame.<init>" 
"ImageIcon.<init>" -- "Dimension.<init>" 
"ImageIcon.<init>" -- "JFrame.setSize" 
"ImageIcon.<init>" -- "JFrame.add" 
"ImageIcon.<init>" -- "JFrame.setVisible" 
"JLabel.<init>" -- "JPanel.<init>" 
"JLabel.<init>" -- "JPanel.add" 
"JLabel.<init>" -- "JFrame.<init>" 
"JLabel.<init>" -- "Dimension.<init>" 
"JLabel.<init>" -- "JFrame.setSize" 
"JLabel.<init>" -- "JFrame.add" 
"JLabel.<init>" -- "JFrame.setVisible" 
"JLabel.<init>" -- "JFrame.setLocationRelativeTo" 
"JLabel.<init>" -- "JFrame.setDefaultCloseOperation" 
"JPanel.<init>" -- "JPanel.add" 
"JPanel.<init>" -- "JFrame.<init>" 
"JPanel.<init>" -- "Dimension.<init>" 
"JPanel.<init>" -- "JFrame.setSize" 
"JPanel.<init>" -- "JFrame.add" 
"JPanel.<init>" -- "JFrame.setVisible" 
"JPanel.add" -- "JFrame.<init>" 
"JPanel.add" -- "Dimension.<init>" 
"JPanel.add" -- "JFrame.setSize" 
"JPanel.add" -- "JFrame.add" 
"JPanel.add" -- "JFrame.setVisible" 
"JFrame.<init>" -- "Dimension.<init>" 
"JFrame.<init>" -- "JFrame.setSize" 
"JFrame.<init>" -- "JFrame.add" 
"JFrame.<init>" -- "JFrame.setVisible" 
"JFrame.<init>" -- "JFrame.setLocationRelativeTo" 
"JFrame.<init>" -- "JFrame.setDefaultCloseOperation" 
"JFrame.<init>" -- "JFrame.getContentPane" 
"JFrame.<init>" -- "JFrame.setPreferredSize" 
"JFrame.<init>" -- "JFrame.pack" 
"Dimension.<init>" -- "JFrame.setSize" 
"Dimension.<init>" -- "JFrame.add" 
"Dimension.<init>" -- "JFrame.setVisible" 
"Dimension.<init>" -- "JFrame.setDefaultCloseOperation" 
"Dimension.<init>" -- "JFrame.getContentPane" 
"Dimension.<init>" -- "JFrame.setPreferredSize" 
"Dimension.<init>" -- "JFrame.pack" 
"JFrame.setSize" -- "JFrame.add" 
"JFrame.setSize" -- "JFrame.setVisible" 
"JFrame.setSize" -- "JFrame.setLocationRelativeTo" 
"JFrame.setSize" -- "JFrame.setDefaultCloseOperation" 
"JFrame.add" -- "JFrame.setVisible" 
"JFrame.add" -- "JFrame.setLocationRelativeTo" 
"JFrame.add" -- "JFrame.setDefaultCloseOperation" 
"JFrame.setVisible" -- "JFrame.setLocationRelativeTo" 
"JFrame.setVisible" -- "JFrame.setDefaultCloseOperation" 
"JFrame.setVisible" -- "JFrame.getContentPane" 
"JFrame.setVisible" -- "JFrame.setPreferredSize" 
"JFrame.setVisible" -- "JFrame.pack" 
"BasicStroke.<init>" -- "Graphics2D.setStroke" 
"BasicStroke.<init>" -- "Graphics2D.setColor" 
"BasicStroke.<init>" -- "Graphics2D.drawRect" 
"Graphics2D.setStroke" -- "Graphics2D.setColor" 
"Graphics2D.setStroke" -- "Graphics2D.drawRect" 
"Graphics2D.setColor" -- "Graphics2D.drawRect" 
"Optional.map" -- "Util.createResponse" 
"Iterator<Entry<String>>.hasNext" -- "Iterator<Entry<String>>.next" 
"List<Book>.stream" -- "Map<Long,Book>.putAll" 
"Event.request" -- "InputStreamReader.read" 
"Event.request" -- "OutputStreamWriter.flush" 
"InputStreamReader.read" -- "OutputStreamWriter.flush" 
"Map<LocalVariable,Value>.entrySet" -- "Entry<LocalVariable,Value>.getValue" 
"Map<LocalVariable,Value>.entrySet" -- "Entry<LocalVariable,Value>.getKey" 
"Entry<LocalVariable,Value>.getValue" -- "Entry<LocalVariable,Value>.getKey" 
"Product.findById" -- "Product.delete" 
"Product.findById" -- "Product.fromMap" 
"Product.findById" -- "Product.saveIt" 
"Product.fromMap" -- "Product.saveIt" 
"Product.fromMap" -- "Product.get" 
"Product.saveIt" -- "Product.get" 
"BigDecimal.setScale" -- "Double.toString" 
"BigDecimal.setScale" -- "Number.cast" 
"BigDecimal.setScale" -- "Number.doubleValue" 
"DecimalFormat.format" -- "DecimalFormat.setRoundingMode" 
"DecimalFormat.format" -- "Double.<init>" 
"DecimalFormat.format" -- "Locale.getDefault" 
"DecimalFormat.format" -- "NumberFormat.getNumberInstance" 
"DecimalFormat.format" -- "DecimalFormat.cast" 
"Map<Integer,Integer>.containsKey" -- "Map<Integer,Integer>.get" 
"Map<Integer,Integer>.containsKey" -- "Map<Integer,Integer>.containsValue" 
"Map<Integer,Integer>.get" -- "Map<Integer,Integer>.containsValue" 
"NumberFormat.getInstance" -- "NumberFormat.setMaximumFractionDigits" 
"NumberFormat.getInstance" -- "NumberFormat.setRoundingMode" 
"NumberFormat.setMaximumFractionDigits" -- "NumberFormat.setRoundingMode" 
"BigInteger.gcd" -- "BigInteger.divide" 
"Map<Integer,Integer>.keySet" -- "Map<Integer,Integer>.getOrDefault" 
"Double.<init>" -- "Locale.getDefault" 
"Double.<init>" -- "NumberFormat.getNumberInstance" 
"Double.<init>" -- "DecimalFormat.cast" 
"Locale.getDefault" -- "NumberFormat.getNumberInstance" 
"Locale.getDefault" -- "DecimalFormat.cast" 
"Locale.getDefault" -- "DateFormat.getDateTimeInstance" 
"NumberFormat.getNumberInstance" -- "DecimalFormat.cast" 
"RandomDataGenerator.<init>" -- "RandomDataGenerator.nextInt" 
"Message.<init>" -- "HashMap<String,String>.put" 
"Message.<init>" -- "DateTime.now" 
"Message.<init>" -- "Message.setMessage" 
"Message.<init>" -- "Message.setText" 
"Message.<init>" -- "Message.setTo" 
"Message.<init>" -- "Message.setDate" 
"Message.<init>" -- "Message.setId" 
"UnicastRemoteObject.exportObject" -- "LocateRegistry.createRegistry" 
"UnicastRemoteObject.exportObject" -- "Registry.rebind" 
"LocateRegistry.createRegistry" -- "Registry.rebind" 
"Builder.url" -- "Response.body" 
"Stream<String>.distinctBy" -- "Stream<String>.forEach" 
"Stream<String>.forEach" -- "Stream.ofAll" 
"Stream<String>.forEach" -- "Stream<String>.insert" 
"Stream<String>.forEach" -- "Stream<String>.remove" 
"Stream.ofAll" -- "Stream<String>.insert" 
"Stream.ofAll" -- "Stream<String>.remove" 
"Stream.ofAll" -- "Stream<Integer>.forEach" 
"Stream.ofAll" -- "Stream<Integer>.get" 
"Stream.ofAll" -- "Stream<String>.indexOf" 
"Stream<String>.insert" -- "Stream<String>.remove" 
"Stream<Integer>.get" -- "Stream<String>.indexOf" 
"TextField.getText" -- "Task<>.<init>" 
"TextField.getText" -- "Task<>.setOnSucceeded" 
"TextField.getText" -- "Task<>.getValue" 
"Task<>.<init>" -- "Task<>.setOnSucceeded" 
"Task<>.<init>" -- "Task<>.getValue" 
"Task<>.setOnSucceeded" -- "Task<>.getValue" 
"TableView.<init>" -- "TableColumn.<init>" 
"TableView.<init>" -- "TableView.getColumns" 
"TableColumn.<init>" -- "TableView.getColumns" 
"Button.setText" -- "Button.setOnAction" 
"Button.setText" -- "Button.setStyle" 
"Button.setText" -- "TextField.setOnKeyPressed" 
"Button.setText" -- "TextField.textProperty" 
"Button.setOnAction" -- "Button.setStyle" 
"Button.setOnAction" -- "TextField.setOnKeyPressed" 
"Button.setOnAction" -- "TextField.textProperty" 
"Button.setStyle" -- "TextField.setOnKeyPressed" 
"Button.setStyle" -- "TextField.textProperty" 
"TextField.setOnKeyPressed" -- "TextField.textProperty" 
"PrintWriter.print" -- "PrintWriter.flush" 
"PrintWriter.print" -- "GZIPOutputStream.<init>" 
"PrintWriter.print" -- "RandomAccessFile.<init>" 
"PrintWriter.flush" -- "Part.write" 
"PrintWriter.flush" -- "Entity.text" 
"PrintWriter.flush" -- "Builder.header" 
"PrintWriter.flush" -- "GZIPOutputStream.<init>" 
"LocalDate.instance" -- "LocalDate.cast" 
"JAXBContext.createUnmarshaller" -- "Unmarshaller.unmarshal" 
"JAXBContext.createUnmarshaller" -- "Book.cast" 
"Unmarshaller.unmarshal" -- "Book.cast" 
"Book.cast" -- "Book.getClass" 
"Query.getResultList" -- "String.instance" 
"Query.getResultList" -- "Provider.get" 
"Query.getResultList" -- "List<String>.cast" 
"Query.getResultList" -- "List<String[]>.cast" 
"Component.message" -- "PrintStream.println" 
"Event.fire" -- "Timer.getInfo" 
"Environment.<init>" -- "Configuration.<init>" 
"Environment.<init>" -- "Configuration.addMapper" 
"Entity.text" -- "Builder.header" 
"Builder.header" -- "Builder.get" 
"File.createTempFile" -- "File.delete" 
"File.createTempFile" -- "Repository.create" 
"File.delete" -- "Repository.create" 
"File.createNewFile" -- "BufferedOutputStream.<init>" 
"File.createNewFile" -- "BufferedOutputStream.write" 
"File.createNewFile" -- "BufferedOutputStream.close" 
"Message.getObject" -- "Message.getDest" 
"Message.getObject" -- "Message.getSrc" 
"Message.getDest" -- "Message.getSrc" 
"View.forEach" -- "View.newMembers" 
"View.forEach" -- "View.leftMembers" 
"View.newMembers" -- "View.leftMembers" 
"Environment.acceptsProfiles" -- "Throwable.getMessage" 
"Environment.acceptsProfiles" -- "Environment.getActiveProfiles" 
"Environment.acceptsProfiles" -- "Object[].cast" 
"Throwable.getMessage" -- "Message.reader" 
"Throwable.getMessage" -- "Message.getStatus" 
"Throwable.getMessage" -- "Message.getSid" 
"Environment.getProperty" -- "InetAddress.getLocalHost" 
"Environment.getProperty" -- "Environment.getActiveProfiles" 
"Environment.getProperty" -- "Properties.setProperty" 
"Environment.getProperty" -- "HashMap<String,Object>.put" 
"InetAddress.getLocalHost" -- "Environment.getActiveProfiles" 
"Environment.getActiveProfiles" -- "Collection<String>.contains" 
"Environment.getActiveProfiles" -- "Environment.getDefaultProfiles" 
"Environment.getActiveProfiles" -- "Object[].cast" 
"Map<String,Object>.entrySet" -- "Entry<String,Object>.getValue" 
"Map<String,Object>.entrySet" -- "Entry<String,Object>.getKey" 
"Map<String,Object>.entrySet" -- "Objects.toString" 
"Entry<String,Object>.getValue" -- "Entry<String,Object>.getKey" 
"Entry<String,Object>.getValue" -- "Objects.toString" 
"Entry<String,Object>.getKey" -- "Objects.toString" 
"String.instance" -- "Map<String>.remove" 
"String.instance" -- "Map<String>.containsValue" 
"String.instance" -- "List<String>.cast" 
"String.instance" -- "List<String[]>.cast" 
"String.instance" -- "Message.getPayload" 
"String.instance" -- "List<Object>.get" 
"Page.getContent" -- "Page.getTotalPages" 
"Page.getContent" -- "Pageable.getPageNumber" 
"Page.getContent" -- "Pageable.getPageSize" 
"Page.getTotalElements" -- "Page.getTotalPages" 
"Page.getTotalElements" -- "Page.getNumber" 
"Page.getTotalElements" -- "Page.getSize" 
"Page.getTotalPages" -- "Page.getNumber" 
"Page.getTotalPages" -- "Page.getSize" 
"Page.getTotalPages" -- "Pageable.getPageNumber" 
"Page.getTotalPages" -- "Pageable.getPageSize" 
"Page.getNumber" -- "Page.getSize" 
"SocketOptions.<init>" -- "SocketOptions.setConnectTimeoutMillis" 
"SocketOptions.<init>" -- "SocketOptions.setReadTimeoutMillis" 
"SocketOptions.setConnectTimeoutMillis" -- "SocketOptions.setReadTimeoutMillis" 
"Cluster.builder" -- "Builder.withCredentials" 
"Cluster.builder" -- "Builder.withCompression" 
"Cluster.builder" -- "Builder.withLoadBalancingPolicy" 
"Cluster.builder" -- "Builder.withQueryOptions" 
"Cluster.builder" -- "Builder.withReconnectionPolicy" 
"Cluster.builder" -- "Builder.withRetryPolicy" 
"Cluster.builder" -- "Builder.withSocketOptions" 
"Cluster.builder" -- "Builder.withSSL" 
"Cluster.builder" -- "Builder.addContactPoints" 
"Cluster.builder" -- "Cluster.getConfiguration" 
"Cluster.builder" -- "Cluster.init" 
"Cluster.builder" -- "Cluster.getMetrics" 
"Builder.withCredentials" -- "Builder.withCompression" 
"Builder.withCredentials" -- "Builder.withLoadBalancingPolicy" 
"Builder.withCredentials" -- "Builder.withQueryOptions" 
"Builder.withCredentials" -- "Builder.withReconnectionPolicy" 
"Builder.withCredentials" -- "Builder.withRetryPolicy" 
"Builder.withCredentials" -- "Builder.withSocketOptions" 
"Builder.withCredentials" -- "Builder.withSSL" 
"Builder.withCredentials" -- "Builder.addContactPoints" 
"Builder.withCredentials" -- "Cluster.getConfiguration" 
"Builder.withCredentials" -- "Cluster.init" 
"Builder.withCredentials" -- "Cluster.getMetrics" 
"Builder.withCompression" -- "Builder.withLoadBalancingPolicy" 
"Builder.withCompression" -- "Builder.withQueryOptions" 
"Builder.withCompression" -- "Builder.withReconnectionPolicy" 
"Builder.withCompression" -- "Builder.withRetryPolicy" 
"Builder.withCompression" -- "Builder.withSocketOptions" 
"Builder.withCompression" -- "Builder.withSSL" 
"Builder.withCompression" -- "Builder.addContactPoints" 
"Builder.withCompression" -- "Cluster.getConfiguration" 
"Builder.withCompression" -- "Cluster.init" 
"Builder.withCompression" -- "Cluster.getMetrics" 
"Builder.withLoadBalancingPolicy" -- "Builder.withQueryOptions" 
"Builder.withLoadBalancingPolicy" -- "Builder.withReconnectionPolicy" 
"Builder.withLoadBalancingPolicy" -- "Builder.withRetryPolicy" 
"Builder.withLoadBalancingPolicy" -- "Builder.withSocketOptions" 
"Builder.withLoadBalancingPolicy" -- "Builder.withSSL" 
"Builder.withLoadBalancingPolicy" -- "Builder.addContactPoints" 
"Builder.withLoadBalancingPolicy" -- "Cluster.getConfiguration" 
"Builder.withLoadBalancingPolicy" -- "Cluster.init" 
"Builder.withLoadBalancingPolicy" -- "Cluster.getMetrics" 
"Builder.withQueryOptions" -- "Builder.withReconnectionPolicy" 
"Builder.withQueryOptions" -- "Builder.withRetryPolicy" 
"Builder.withQueryOptions" -- "Builder.withSocketOptions" 
"Builder.withQueryOptions" -- "Builder.withSSL" 
"Builder.withQueryOptions" -- "Builder.addContactPoints" 
"Builder.withQueryOptions" -- "Cluster.getConfiguration" 
"Builder.withQueryOptions" -- "Cluster.init" 
"Builder.withQueryOptions" -- "Cluster.getMetrics" 
"Builder.withReconnectionPolicy" -- "Builder.withRetryPolicy" 
"Builder.withReconnectionPolicy" -- "Builder.withSocketOptions" 
"Builder.withReconnectionPolicy" -- "Builder.withSSL" 
"Builder.withReconnectionPolicy" -- "Builder.addContactPoints" 
"Builder.withReconnectionPolicy" -- "Cluster.getConfiguration" 
"Builder.withReconnectionPolicy" -- "Cluster.init" 
"Builder.withReconnectionPolicy" -- "Cluster.getMetrics" 
"Builder.withRetryPolicy" -- "Builder.withSocketOptions" 
"Builder.withRetryPolicy" -- "Builder.withSSL" 
"Builder.withRetryPolicy" -- "Builder.addContactPoints" 
"Builder.withRetryPolicy" -- "Cluster.getConfiguration" 
"Builder.withRetryPolicy" -- "Cluster.init" 
"Builder.withRetryPolicy" -- "Cluster.getMetrics" 
"Builder.withSocketOptions" -- "Builder.withSSL" 
"Builder.withSocketOptions" -- "Builder.addContactPoints" 
"Builder.withSocketOptions" -- "Cluster.getConfiguration" 
"Builder.withSocketOptions" -- "Cluster.init" 
"Builder.withSocketOptions" -- "Cluster.getMetrics" 
"Builder.withSSL" -- "Builder.addContactPoints" 
"Builder.withSSL" -- "Cluster.getConfiguration" 
"Builder.withSSL" -- "Cluster.init" 
"Builder.withSSL" -- "Cluster.getMetrics" 
"Builder.addContactPoints" -- "Cluster.getConfiguration" 
"Builder.addContactPoints" -- "Cluster.init" 
"Builder.addContactPoints" -- "Cluster.getMetrics" 
"Cluster.getConfiguration" -- "Cluster.init" 
"Cluster.getConfiguration" -- "Cluster.getMetrics" 
"Cluster.init" -- "Cluster.getMetrics" 
"ZonedDateTime.ofInstant" -- "DateTimeFormatter.parse" 
"ZonedDateTime.ofInstant" -- "ZonedDateTime.from" 
"DateTimeFormatter.parse" -- "ZonedDateTime.from" 
"PreparedStatement.bind" -- "ResultSet.isExhausted" 
"PreparedStatement.bind" -- "ResultSet.one" 
"ResultSet.isExhausted" -- "ResultSet.one" 
"GZIPInputStream.<init>" -- "LinkedHashMap<String,Object>.put" 
"Set<String>.cast" -- "Set<String>.remove" 
"Comment.cast" -- "Comment.getId" 
"Comment.cast" -- "Comment.instance" 
"Comment.getId" -- "Comment.instance" 
"Duration.ofSeconds" -- "Duration.ofMillis" 
"Duration.ofSeconds" -- "Source.tick" 
"Duration.ofSeconds" -- "Duration.ofMinutes" 
"Duration.ofSeconds" -- "Queue.getName" 
"Entry<String>>.hasNext" -- "Entry<String>>.next" 
"Entry<String>>.hasNext" -- "Collection.contains" 
"Entry<String>>.hasNext" -- "Entry<String>>.remove" 
"Entry<String>>.next" -- "Collection.contains" 
"Entry<String>>.next" -- "Entry<String>>.remove" 
"Collection.contains" -- "Entry<String>>.remove" 
"MultiValueMap<String,String>.add" -- "MultiValueMap<String,String>.cast" 
"MultiValueMap<String,String>.add" -- "MultiValueMap<String,String>.entrySet" 
"MultiValueMap<String,String>.add" -- "Collection.isEmpty" 
"MultiValueMap<String,String>.add" -- "MultiValueMap<String,String>.containsKey" 
"MultiValueMap<String,String>.add" -- "MultiValueMap<String,String>.remove" 
"Map<String,Object>.isEmpty" -- "LinkedHashMap<String,Object>.<init>" 
"Map<String,Object>.isEmpty" -- "Integer.<init>" 
"LinkedHashMap<String,Object>.<init>" -- "Integer.<init>" 
"Book.getTitle" -- "Book.getSubject" 
"Book.getTitle" -- "Book.setTitle" 
"Book.getTitle" -- "Book.getBookId" 
"Book.getTitle" -- "Book.getNumberOfPages" 
"Collections.singleton" -- "Consumer<String,Integer>.assign" 
"Collections.singleton" -- "Consumer<String,Integer>.subscribe" 
"LongAdder.casBase" -- "LongAdder.getProbe" 
"LongAdder.casBase" -- "Cell.cas" 
"LongAdder.casBase" -- "LongAdder.longAccumulate" 
"LongAdder.getProbe" -- "Cell.cas" 
"LongAdder.getProbe" -- "LongAdder.longAccumulate" 
"Cell.cas" -- "LongAdder.longAccumulate" 
"Cell.cas" -- "Double.doubleToRawLongBits" 
"Cell.cas" -- "Double.longBitsToDouble" 
"Cell.cas" -- "DoubleBinaryOperator.applyAsDouble" 
"Cell.cas" -- "LongBinaryOperator.applyAsLong" 
"Double.doubleToRawLongBits" -- "Double.longBitsToDouble" 
"Double.doubleToRawLongBits" -- "DoubleBinaryOperator.applyAsDouble" 
"Double.longBitsToDouble" -- "DoubleBinaryOperator.applyAsDouble" 
"JFrame.setLocationRelativeTo" -- "JFrame.setDefaultCloseOperation" 
"JFrame.setDefaultCloseOperation" -- "JFrame.getContentPane" 
"JFrame.setDefaultCloseOperation" -- "JFrame.setPreferredSize" 
"JFrame.setDefaultCloseOperation" -- "JFrame.pack" 
"CompletableFuture.cast" -- "CompletableFuture<String>.get" 
"CompletableFuture.cast" -- "CompletableFuture.completedFuture" 
"CompletableFuture.cast" -- "CompletableFuture.get" 
"CompletableFuture<String>.get" -- "CompletableFuture.completedFuture" 
"CompletableFuture<String>.get" -- "CompletableFuture.get" 
"CompletableFuture.completedFuture" -- "CompletableFuture.get" 
"ScriptEngineManager.<init>" -- "ScriptEngineManager.getEngineFactories" 
"ScriptEngineManager.<init>" -- "ScriptEngineFactory.getEngineName" 
"ScriptEngineManager.<init>" -- "ScriptEngineFactory.getEngineVersion" 
"ScriptEngineManager.<init>" -- "ScriptEngineFactory.getLanguageName" 
"ScriptEngineManager.<init>" -- "ScriptEngineFactory.getNames" 
"ScriptEngineManager.<init>" -- "ScriptEngineManager.getEngineByName" 
"ScriptEngineManager.getEngineFactories" -- "ScriptEngineFactory.getEngineName" 
"ScriptEngineManager.getEngineFactories" -- "ScriptEngineFactory.getEngineVersion" 
"ScriptEngineManager.getEngineFactories" -- "ScriptEngineFactory.getLanguageName" 
"ScriptEngineManager.getEngineFactories" -- "ScriptEngineFactory.getNames" 
"ScriptEngineFactory.getEngineName" -- "ScriptEngineFactory.getEngineVersion" 
"ScriptEngineFactory.getEngineName" -- "ScriptEngineFactory.getLanguageName" 
"ScriptEngineFactory.getEngineName" -- "ScriptEngineFactory.getNames" 
"ScriptEngineFactory.getEngineVersion" -- "ScriptEngineFactory.getLanguageName" 
"ScriptEngineFactory.getEngineVersion" -- "ScriptEngineFactory.getNames" 
"ScriptEngineFactory.getLanguageName" -- "ScriptEngineFactory.getNames" 
"Scheduler.scheduleJob" -- "Scheduler.start" 
"Page.getWebURL" -- "Page.getParseData" 
"Page.getWebURL" -- "Page.getContentData" 
"Page.getParseData" -- "Page.getContentData" 
"List<String>.toString" -- "Double.valueOf" 
"Cache<String,Integer>.get" -- "Cache<String,Integer>.put" 
"Cache<String,Integer>.get" -- "Cache<String,Integer>.getAdvancedCache" 
"Cache<String,Integer>.get" -- "StopWatch.<init>" 
"Cache<String,Integer>.get" -- "StopWatch.start" 
"Cache<String,Integer>.get" -- "StopWatch.stop" 
"Cache<String,Integer>.get" -- "StopWatch.getTotalTimeSeconds" 
"Cache<String,Integer>.put" -- "Cache<String,Integer>.getAdvancedCache" 
"Cache<String,Integer>.put" -- "StopWatch.<init>" 
"Cache<String,Integer>.put" -- "StopWatch.start" 
"Cache<String,Integer>.put" -- "StopWatch.stop" 
"Cache<String,Integer>.put" -- "StopWatch.getTotalTimeSeconds" 
"CacheEntry<String,Integer>.getValue" -- "CacheEntry<String,Integer>.getKey" 
"List<CompletableFuture>.add" -- "List<CompletableFuture>.stream" 
"Connection.subscribe" -- "Connection.publish" 
"Role.<init>" -- "Map<String,Role>.put" 
"Role.<init>" -- "LazyList.size" 
"Role.<init>" -- "HashSet<Role>.<init>" 
"Role.<init>" -- "Role.setPrivileges" 
"List.list" -- "List<Integer>.map" 
"List.list" -- "Array.array" 
"List.list" -- "Array<Integer>.filter" 
"List.list" -- "List.fromString" 
"List.list" -- "Array<String>.exists" 
"List.list" -- "Array<Integer>.foldLeft" 
"List.list" -- "Option.some" 
"List.list" -- "Option.none" 
"List.list" -- "Option<Integer>.bind" 
"List<Integer>.map" -- "Array.array" 
"List<Integer>.map" -- "Array<Integer>.filter" 
"List<Integer>.map" -- "List.fromString" 
"List<Integer>.map" -- "Array<String>.exists" 
"List<Integer>.map" -- "Array<Integer>.foldLeft" 
"List<Integer>.map" -- "Option.some" 
"List<Integer>.map" -- "Option.none" 
"List<Integer>.map" -- "Option<Integer>.bind" 
"Array.array" -- "Array<Integer>.filter" 
"Array.array" -- "List.fromString" 
"Array.array" -- "Array<String>.exists" 
"Array.array" -- "Array<Integer>.foldLeft" 
"Array.array" -- "Option.some" 
"Array.array" -- "Option.none" 
"Array.array" -- "Option<Integer>.bind" 
"Array<Integer>.filter" -- "List.fromString" 
"Array<Integer>.filter" -- "Array<String>.exists" 
"Array<Integer>.filter" -- "Array<Integer>.foldLeft" 
"Array<Integer>.filter" -- "Option.some" 
"Array<Integer>.filter" -- "Option.none" 
"Array<Integer>.filter" -- "Option<Integer>.bind" 
"List.fromString" -- "Array<String>.exists" 
"List.fromString" -- "Array<Integer>.foldLeft" 
"List.fromString" -- "Option.some" 
"List.fromString" -- "Option.none" 
"List.fromString" -- "Option<Integer>.bind" 
"Array<String>.exists" -- "Array<Integer>.foldLeft" 
"Array<String>.exists" -- "Option.some" 
"Array<String>.exists" -- "Option.none" 
"Array<String>.exists" -- "Option<Integer>.bind" 
"Array<Integer>.foldLeft" -- "Option.some" 
"Array<Integer>.foldLeft" -- "Option.none" 
"Array<Integer>.foldLeft" -- "Option<Integer>.bind" 
"Option.some" -- "Option.none" 
"Option.some" -- "Option<Integer>.bind" 
"Option.none" -- "Option<Integer>.bind" 
"List<<String,String>>.size" -- "List<<String,String>>.get" 
"List<<String,String>>.size" -- "Map<>.put" 
"List<<String,String>>.get" -- "Map<>.put" 
"Context.newBuilder" -- "Context.eval" 
"Context.newBuilder" -- "Context.getBindings" 
"Context.newBuilder" -- "Value.getMember" 
"Context.eval" -- "Context.getBindings" 
"Context.eval" -- "Value.getMember" 
"Context.getBindings" -- "Value.getMember" 
"Context.get" -- "Context.getResponse" 
"Context.get" -- "Context.getPathTokens" 
"ToStringBuilder.<init>" -- "ToStringBuilder.append" 
"EqualsBuilder.<init>" -- "EqualsBuilder.append" 
"Map.containsKey" -- "Map.put" 
"Map.containsKey" -- "Map.get" 
"Map.containsKey" -- "Map.replace" 
"Map.put" -- "Map.get" 
"Map.put" -- "Map.replace" 
"Map.get" -- "Map.replace" 
"Map.get" -- "Map.cast" 
"Frequency.<init>" -- "Frequency.addValue" 
"Frequency.<init>" -- "Frequency.getCount" 
"Frequency.<init>" -- "Math.multiplyExact" 
"Frequency.<init>" -- "Math.subtractExact" 
"Frequency.addValue" -- "Frequency.getCount" 
"Frequency.addValue" -- "Math.multiplyExact" 
"Frequency.addValue" -- "Math.subtractExact" 
"Frequency.getCount" -- "Math.multiplyExact" 
"Frequency.getCount" -- "Math.subtractExact" 
"Math.multiplyExact" -- "Math.subtractExact" 
"Map.values" -- "Map.keySet" 
"FileAlterationObserver.<init>" -- "FileAlterationMonitor.<init>" 
"FileAlterationObserver.<init>" -- "FileAlterationListenerAdaptor.<init>" 
"FileAlterationObserver.<init>" -- "FileAlterationObserver.addListener" 
"FileAlterationObserver.<init>" -- "FileAlterationMonitor.addObserver" 
"FileAlterationObserver.<init>" -- "FileAlterationMonitor.start" 
"FileAlterationMonitor.<init>" -- "FileAlterationListenerAdaptor.<init>" 
"FileAlterationMonitor.<init>" -- "FileAlterationObserver.addListener" 
"FileAlterationMonitor.<init>" -- "FileAlterationMonitor.addObserver" 
"FileAlterationMonitor.<init>" -- "FileAlterationMonitor.start" 
"FileAlterationListenerAdaptor.<init>" -- "FileAlterationObserver.addListener" 
"FileAlterationListenerAdaptor.<init>" -- "FileAlterationMonitor.addObserver" 
"FileAlterationListenerAdaptor.<init>" -- "FileAlterationMonitor.start" 
"FileAlterationObserver.addListener" -- "FileAlterationMonitor.addObserver" 
"FileAlterationObserver.addListener" -- "FileAlterationMonitor.start" 
"FileAlterationMonitor.addObserver" -- "FileAlterationMonitor.start" 
"Configuration.<init>" -- "Configuration.addMapper" 
"Configuration.<init>" -- "ExceptionInInitializerError.<init>" 
"Configuration.<init>" -- "Configuration.addAnnotatedClass" 
"Configuration.<init>" -- "Configuration.getProperties" 
"Configuration.<init>" -- "Configuration.buildSessionFactory" 
"Configuration.<init>" -- "Configuration.configure" 
"Configuration.<init>" -- "Configuration.setDirectoryForTemplateLoading" 
"Configuration.<init>" -- "Configuration.setDefaultEncoding" 
"Configuration.<init>" -- "Configuration.setTemplateExceptionHandler" 
"Configuration.<init>" -- "Configuration.setWrapUncheckedExceptions" 
"Configuration.<init>" -- "Configuration.setFallbackOnNullLoopVariable" 
"Configuration.<init>" -- "Configuration.getTemplate" 
"Configuration.<init>" -- "Template.process" 
"Connection.prepareStatement" -- "PreparedStatement.setLong" 
"Connection.prepareStatement" -- "PreparedStatement.setBoolean" 
"Connection.prepareStatement" -- "PreparedStatement.addBatch" 
"Connection.prepareStatement" -- "PreparedStatement.executeBatch" 
"Connection.prepareStatement" -- "Connection.commit" 
"Connection.prepareStatement" -- "Connection.rollback" 
"Connection.prepareStatement" -- "ResultSet.getInt" 
"Connection.prepareStatement" -- "PreparedStatement.setInt" 
"Connection.prepareStatement" -- "ResultSet.first" 
"Connection.prepareStatement" -- "UUID.fromString" 
"Connection.prepareStatement" -- "PreparedStatement.setDate" 
"Connection.prepareStatement" -- "PreparedStatement.close" 
"PreparedStatement.setLong" -- "PreparedStatement.setBoolean" 
"PreparedStatement.setLong" -- "PreparedStatement.setNull" 
"List.sort" -- "Values.<init>" 
"Values.<init>" -- "Utils.sleep" 
"Output.writeString" -- "Output.write" 
"Output.writeString" -- "Output.writeLong" 
"Output.writeString" -- "Output.writeInt" 
"Cache<String,String>.get" -- "Cache<String,String>.put" 
"Cache<String,Integer>.getAdvancedCache" -- "StopWatch.<init>" 
"Cache<String,Integer>.getAdvancedCache" -- "StopWatch.start" 
"Cache<String,Integer>.getAdvancedCache" -- "StopWatch.stop" 
"Cache<String,Integer>.getAdvancedCache" -- "StopWatch.getTotalTimeSeconds" 
"StopWatch.<init>" -- "StopWatch.start" 
"StopWatch.<init>" -- "StopWatch.stop" 
"StopWatch.<init>" -- "StopWatch.getTotalTimeSeconds" 
"StopWatch.start" -- "StopWatch.stop" 
"StopWatch.start" -- "StopWatch.getTotalTimeSeconds" 
"StopWatch.stop" -- "StopWatch.getTotalTimeSeconds" 
"Duration.ofMillis" -- "Consumer<String,Integer>.poll" 
"Duration.ofMillis" -- "Consumer<String,Integer>.commitSync" 
"Duration.ofMillis" -- "Consumer<Throwable>.accept" 
"Duration.ofMillis" -- "Consumer<String,Integer>.close" 
"Duration.ofMillis" -- "List<Float>.size" 
"Consumer<String,Integer>.poll" -- "Consumer<String,Integer>.commitSync" 
"Consumer<String,Integer>.poll" -- "Consumer<Throwable>.accept" 
"Consumer<String,Integer>.poll" -- "Consumer<String,Integer>.close" 
"Consumer<String,Integer>.commitSync" -- "Consumer<Throwable>.accept" 
"Consumer<String,Integer>.commitSync" -- "Consumer<String,Integer>.close" 
"Consumer<Throwable>.accept" -- "Consumer<String,Integer>.close" 
"Query.execute" -- "Iterator<Product>.hasNext" 
"Query.execute" -- "Iterator<Product>.next" 
"Query.execute" -- "List<Product>.iterator" 
"Query.execute" -- "Query.setParameters" 
"Query.execute" -- "List<Product>.cast" 
"Query.execute" -- "Collection.iterator" 
"Query.execute" -- "Product.setName" 
"Iterator<Product>.hasNext" -- "Iterator<Product>.next" 
"Iterator<Product>.hasNext" -- "Query.setClass" 
"Iterator<Product>.hasNext" -- "Query.executeList" 
"Iterator<Product>.hasNext" -- "List<Product>.iterator" 
"Iterator<Product>.hasNext" -- "Query.setFilter" 
"Iterator<Product>.hasNext" -- "Query.declareParameters" 
"Iterator<Product>.hasNext" -- "Query.setParameters" 
"Iterator<Product>.hasNext" -- "List<Product>.cast" 
"Iterator<Product>.next" -- "Query.setClass" 
"Iterator<Product>.next" -- "Query.executeList" 
"Iterator<Product>.next" -- "List<Product>.iterator" 
"Iterator<Product>.next" -- "Query.setFilter" 
"Iterator<Product>.next" -- "Query.declareParameters" 
"Iterator<Product>.next" -- "Query.setParameters" 
"Iterator<Product>.next" -- "List<Product>.cast" 
"Query.setClass" -- "Query.executeList" 
"Query.setClass" -- "List<Product>.iterator" 
"Query.setClass" -- "Query.setParameters" 
"Query.executeList" -- "List<Product>.iterator" 
"Query.executeList" -- "Query.setParameters" 
"List<Product>.iterator" -- "Query.setFilter" 
"List<Product>.iterator" -- "Query.declareParameters" 
"List<Product>.iterator" -- "Query.setParameters" 
"List<Product>.iterator" -- "List<Product>.cast" 
"Query.setFilter" -- "Query.declareParameters" 
"Query.setFilter" -- "Query.setParameters" 
"Query.declareParameters" -- "Query.setParameters" 
"Collection.iterator" -- "Product.setName" 
"Collection.iterator" -- "ASN1InputStream.<init>" 
"Collection.iterator" -- "ASN1InputStream.readObject" 
"Collection.iterator" -- "ASN1InputStream.close" 
"Collection.iterator" -- "ByteArrayInputStream.close" 
"ObjectFactory.<init>" -- "ObjectFactory.createP" 
"ObjectFactory.<init>" -- "ObjectFactory.createR" 
"ObjectFactory.<init>" -- "ObjectFactory.createDrawing" 
"ObjectFactory.createP" -- "ObjectFactory.createR" 
"ObjectFactory.createP" -- "ObjectFactory.createDrawing" 
"ObjectFactory.createP" -- "Context.getWmlObjectFactory" 
"ObjectFactory.createP" -- "ObjectFactory.createText" 
"ObjectFactory.createP" -- "Text.setValue" 
"ObjectFactory.createP" -- "ObjectFactory.createRPr" 
"ObjectFactory.createP" -- "ObjectFactory.createColor" 
"ObjectFactory.createP" -- "Color.setVal" 
"ObjectFactory.createR" -- "ObjectFactory.createDrawing" 
"ObjectFactory.createR" -- "Context.getWmlObjectFactory" 
"ObjectFactory.createR" -- "ObjectFactory.createText" 
"ObjectFactory.createR" -- "Text.setValue" 
"ObjectFactory.createR" -- "ObjectFactory.createRPr" 
"ObjectFactory.createR" -- "ObjectFactory.createColor" 
"ObjectFactory.createR" -- "Color.setVal" 
"JAXBElement.cast" -- "JAXBElement.getValue" 
"JAXBElement.cast" -- "Text.cast" 
"JAXBElement.cast" -- "Text.getValue" 
"JAXBElement.getValue" -- "Text.cast" 
"JAXBElement.getValue" -- "Text.getValue" 
"Text.cast" -- "Text.getValue" 
"Context.getWmlObjectFactory" -- "ObjectFactory.createText" 
"Context.getWmlObjectFactory" -- "Text.setValue" 
"Context.getWmlObjectFactory" -- "ObjectFactory.createRPr" 
"Context.getWmlObjectFactory" -- "ObjectFactory.createColor" 
"Context.getWmlObjectFactory" -- "Color.setVal" 
"ObjectFactory.createText" -- "Text.setValue" 
"ObjectFactory.createText" -- "ObjectFactory.createRPr" 
"ObjectFactory.createText" -- "ObjectFactory.createColor" 
"ObjectFactory.createText" -- "Color.setVal" 
"Text.setValue" -- "ObjectFactory.createRPr" 
"Text.setValue" -- "ObjectFactory.createColor" 
"Text.setValue" -- "Color.setVal" 
"ObjectFactory.createRPr" -- "ObjectFactory.createColor" 
"ObjectFactory.createRPr" -- "Color.setVal" 
"ObjectFactory.createColor" -- "Color.setVal" 
"Output.writeLong" -- "Output.writeInt" 
"Reader.close" -- "List<String[]>.add" 
"Supplier.getClass" -- "Supplier.cast" 
"Builder.setInitialIntervalMillis" -- "Future.get" 
"Builder.interceptors" -- "Builder.addInterceptor" 
"Builder.interceptors" -- "Builder.client" 
"Builder.addInterceptor" -- "Builder.client" 
"Request.getParam" -- "Reader.fromBuf" 
"Request.getParam" -- "Request.version" 
"Request.getParam" -- "Response.apply" 
"Request.getParam" -- "Future.value" 
"Reader.fromBuf" -- "Request.version" 
"Reader.fromBuf" -- "Response.apply" 
"Reader.fromBuf" -- "Future.value" 
"Request.version" -- "Response.apply" 
"Request.version" -- "Future.value" 
"Response.apply" -- "Future.value" 
"Request.host" -- "Request.getParams" 
"Request.host" -- "Service<Request,Response>.apply" 
"Request.getParams" -- "Service<Request,Response>.apply" 
"ASN1InputStream.<init>" -- "ASN1InputStream.readObject" 
"ASN1InputStream.<init>" -- "ASN1InputStream.close" 
"ASN1InputStream.<init>" -- "ByteArrayInputStream.close" 
"ASN1InputStream.readObject" -- "ASN1InputStream.close" 
"ASN1InputStream.readObject" -- "ByteArrayInputStream.close" 
"ASN1InputStream.close" -- "ByteArrayInputStream.close" 
"ArrayList<X509Certificate>.<init>" -- "List<X509Certificate>.add" 
"Utils.getPrivateKey" -- "Signature.getInstance" 
"Utils.getPrivateKey" -- "Signature.initSign" 
"Utils.getPrivateKey" -- "Signature.update" 
"Utils.getPrivateKey" -- "Signature.sign" 
"Utils.getPublicKey" -- "Signature.getInstance" 
"Utils.getPublicKey" -- "Signature.update" 
"Utils.getPublicKey" -- "Signature.initVerify" 
"Utils.getPublicKey" -- "Signature.verify" 
"Signature.getInstance" -- "Signature.initSign" 
"Signature.getInstance" -- "Signature.update" 
"Signature.getInstance" -- "Signature.sign" 
"Signature.getInstance" -- "Signature.initVerify" 
"Signature.getInstance" -- "Signature.verify" 
"Signature.initSign" -- "Signature.update" 
"Signature.initSign" -- "Signature.sign" 
"Signature.update" -- "Signature.sign" 
"Signature.update" -- "Signature.initVerify" 
"Signature.update" -- "Signature.verify" 
"Signature.initVerify" -- "Signature.verify" 
"KeyStore.getKey" -- "PrivateKey.cast" 
"Response.getBody" -- "Runtime.exec" 
"Server.<init>" -- "Server.setConnectors" 
"Server.<init>" -- "Server.setHandler" 
"Server.<init>" -- "Server.addConnector" 
"Server.setConnectors" -- "Server.setHandler" 
"Operation.getOperator" -- "Operation.getNumber2" 
"Operation.getOperator" -- "Operation.getNumber1" 
"Operation.getNumber2" -- "Operation.getNumber1" 
"ClientHandler.<init>" -- "SocketChannel.pipeline" 
"SocketChannel.pipeline" -- "SocketChannel.newPromise" 
"SocketChannel.pipeline" -- "SocketChannel.alloc" 
"Context.addServletMappingDecoded" -- "Context.addFilterDef" 
"Context.addServletMappingDecoded" -- "Context.addFilterMap" 
"Context.addServletMappingDecoded" -- "Wrapper.setAsyncSupported" 
"Context.addFilterDef" -- "Context.addFilterMap" 
"AtomicLong.addAndGet" -- "AtomicLong.<init>" 
"AtomicLong.addAndGet" -- "AtomicLong.toString" 
"AtomicLong.addAndGet" -- "AtomicLong.get" 
"ThreadContext.put" -- "ThreadContext.clearAll" 
"ThreadContext.clearAll" -- "ThreadContext.push" 
"ThreadContext.clearAll" -- "ThreadContext.pop" 
"ThreadContext.push" -- "ThreadContext.pop" 
"Document.<init>" -- "TextField.<init>" 
"Document.<init>" -- "Document.add" 
"Document.<init>" -- "Path.toFile" 
"Document.<init>" -- "ElementVisitor.<init>" 
"Document.<init>" -- "XmlElement.<init>" 
"Document.<init>" -- "Document.accept" 
"Document.<init>" -- "Document.open" 
"Document.<init>" -- "Document.close" 
"Document.<init>" -- "Image.getInstance" 
"Document.<init>" -- "Font.setStyle" 
"Document.<init>" -- "Font.setSize" 
"Document.<init>" -- "Document.append" 
"TextField.<init>" -- "Document.add" 
"TextField.<init>" -- "Path.toFile" 
"TextField.<init>" -- "Binder.setBean" 
"TextField.<init>" -- "Button.addClickListener" 
"TextField.<init>" -- "GridLayout.<init>" 
"TextField.<init>" -- "GridLayout.setSpacing" 
"TextField.<init>" -- "GridLayout.setMargin" 
"TextField.<init>" -- "Label.setId" 
"TextField.<init>" -- "Label.setValue" 
"TextField.<init>" -- "Label.setCaption" 
"TextField.<init>" -- "GridLayout.addComponent" 
"TextField.<init>" -- "Link.<init>" 
"TextField.<init>" -- "Link.setId" 
"TextField.<init>" -- "Link.setTargetName" 
"TextField.<init>" -- "TextField.setId" 
"TextField.<init>" -- "TextField.setCaption" 
"TextField.<init>" -- "TextField.setValue" 
"TextField.<init>" -- "TextField.setIcon" 
"TextField.<init>" -- "TextArea.<init>" 
"TextField.<init>" -- "TextArea.setCaption" 
"TextField.<init>" -- "TextArea.setId" 
"TextField.<init>" -- "TextArea.setValue" 
"TextField.<init>" -- "Panel.<init>" 
"TextField.<init>" -- "Panel.setContent" 
"TextField.<init>" -- "Button.setId" 
"TextField.<init>" -- "Button.setDescription" 
"TextField.<init>" -- "Button.setIcon" 
"TextField.<init>" -- "Grid.<init>" 
"TextField.<init>" -- "Grid<Row>.setColumns" 
"TextField.<init>" -- "Row.<init>" 
"TextField.<init>" -- "List<Row>.add" 
"TextField.<init>" -- "Grid<Row>.setItems" 
"TextField.<init>" -- "Panel.setSizeUndefined" 
"TextField.<init>" -- "Binder.<init>" 
"TextField.<init>" -- "Binder.readBean" 
"TextField.<init>" -- "TextField.setWidth" 
"TextField.<init>" -- "Binder.forField" 
"TextField.<init>" -- "Binder.validate" 
"TextField.<init>" -- "Grid.setHeight" 
"TextField.<init>" -- "Grid.setColumns" 
"TextField.<init>" -- "Grid.getColumnByKey" 
"TextField.<init>" -- "TextField.setPlaceholder" 
"TextField.<init>" -- "TextField.setValueChangeMode" 
"TextField.<init>" -- "TextField.addValueChangeListener" 
"TextField.<init>" -- "Grid.asSingleSelect" 
"TextField.<init>" -- "TextField.getValue" 
"Document.add" -- "Path.toFile" 
"Document.add" -- "Document.open" 
"Document.add" -- "Document.close" 
"Document.add" -- "Image.getInstance" 
"Document.add" -- "Font.setStyle" 
"Document.add" -- "Font.setSize" 
"List<Long>.size" -- "Query<Long>.getResultList" 
"List<Long>.size" -- "List<Long>.get" 
"ArrayList<Long>.<init>" -- "List<Long>.add" 
"Map<String,List<String>>.isEmpty" -- "Entry<String,List<String>>.getKey" 
"Entry<String,List<String>>.getKey" -- "MultiValueMap<String,String>.entrySet" 
"SocketChannel.newPromise" -- "SocketChannel.alloc" 
"Iterator<Entry<Integer>>.hasNext" -- "Iterator<Entry<Integer>>.next" 
"Iterator<Entry<Integer>>.hasNext" -- "Iterator<Entry<Integer>>.remove" 
"Iterator<Entry<Integer>>.next" -- "Iterator<Entry<Integer>>.remove" 
"RSAKey.cast" -- "RSAKey.toRSAPrivateKey" 
"Form.<init>" -- "Form.param" 
"Form.<init>" -- "Entity.entity" 
"Form.<init>" -- "Response.readEntity" 
"Form.<init>" -- "Response.getStatus" 
"Form.param" -- "Entity.entity" 
"Form.param" -- "Response.readEntity" 
"Form.param" -- "Response.getStatus" 
"Entity.entity" -- "Response.readEntity" 
"Entity.entity" -- "Response.getStatus" 
"Response.readEntity" -- "Response.getStatus" 
"Response.readEntity" -- "Response.close" 
"Map<String,List<Event>>.get" -- "ArrayList<Event>.<init>" 
"Map<String,List<Event>>.get" -- "List<Event>.add" 
"Map<String,List<Event>>.get" -- "Map<String,List<Event>>.put" 
"ArrayList<Event>.<init>" -- "List<Event>.add" 
"ArrayList<Event>.<init>" -- "Map<String,List<Event>>.put" 
"List<Event>.add" -- "Map<String,List<Event>>.put" 
"Cache.getService" -- "Cache.addService" 
"Map<String,List<Row>>.entrySet" -- "Context.clear" 
"Context.setTable" -- "Context.search" 
"Context.search" -- "Context.setFilter" 
"Select.<init>" -- "Expression.interpret" 
"Package.<init>" -- "Package.printStatus" 
"Package.<init>" -- "Package.nextState" 
"Package.printStatus" -- "Package.nextState" 
"ElementVisitor.<init>" -- "XmlElement.<init>" 
"ElementVisitor.<init>" -- "Document.accept" 
"XmlElement.<init>" -- "Document.accept" 
"Color.cast" -- "Color.getColor" 
"Position.getClass" -- "Position.cast" 
"Expression.getOperator" -- "Expression.getY" 
"Expression.getOperator" -- "Expression.getX" 
"Expression.getY" -- "Expression.getX" 
"List<Book>.size" -- "List<Book>.add" 
"List<Book>.size" -- "List<Book>.get" 
"List<Book>.size" -- "Pageable.getPageNumber" 
"List<Book>.size" -- "Pageable.getPageSize" 
"List<Book>.size" -- "List<Book>.subList" 
"Iterator<Filter>.hasNext" -- "Iterator<Filter>.next" 
"Iterator<Filter>.hasNext" -- "Filter.doFilter" 
"Iterator<Filter>.next" -- "Filter.doFilter" 
"Document.open" -- "Document.close" 
"Document.open" -- "Image.getInstance" 
"Document.open" -- "Font.setStyle" 
"Document.open" -- "Font.setSize" 
"Document.close" -- "Image.getInstance" 
"Document.close" -- "Font.setStyle" 
"Document.close" -- "Font.setSize" 
"Image.getInstance" -- "Path.toAbsolutePath" 
"Image.getInstance" -- "Image.scalePercent" 
"Font.setStyle" -- "Font.setSize" 
"Path.toAbsolutePath" -- "Image.scalePercent" 
"Product.getName" -- "Set<Product>.stream" 
"Product.getName" -- "Product.setId" 
"Product.getName" -- "Set<Product>.add" 
"HashMap<Long>.<init>" -- "Map<Long>.size" 
"HashMap<Long>.<init>" -- "Map<Long>.entrySet" 
"HashMap<Long>.<init>" -- "Arrays.equals)" 
"HashMap<Long>.<init>" -- "Optional<Entry<Long>>.isPresent" 
"HashMap<Long>.<init>" -- "Optional<Entry<Long>>.get" 
"Map<Long>.size" -- "Map<Long>.entrySet" 
"Map<Long>.size" -- "Arrays.equals)" 
"Map<Long>.size" -- "Optional<Entry<Long>>.isPresent" 
"Map<Long>.size" -- "Optional<Entry<Long>>.get" 
"Map<Long>.entrySet" -- "Arrays.equals)" 
"Map<Long>.entrySet" -- "Optional<Entry<Long>>.isPresent" 
"Map<Long>.entrySet" -- "Optional<Entry<Long>>.get" 
"Map<Long>.entrySet" -- "Map<String,LinkedList<String>>.get" 
"Map<Long>.entrySet" -- "Entry<Long>.getValue" 
"Arrays.equals)" -- "Optional<Entry<Long>>.isPresent" 
"Arrays.equals)" -- "Optional<Entry<Long>>.get" 
"Optional<Entry<Long>>.isPresent" -- "Optional<Entry<Long>>.get" 
"List<Connection>.forEach" -- "List<Connection>.clear" 
"List<Connection>.size" -- "List<Connection>.add" 
"List<Connection>.size" -- "List<Connection>.remove" 
"List<Connection>.size" -- "List<Connection>.isEmpty" 
"List<Connection>.size" -- "Connection.isValid" 
"List<Connection>.add" -- "List<Connection>.remove" 
"List<Connection>.add" -- "List<Connection>.isEmpty" 
"List<Connection>.add" -- "Connection.isValid" 
"List<Connection>.remove" -- "List<Connection>.isEmpty" 
"List<Connection>.remove" -- "Connection.isValid" 
"List<Connection>.isEmpty" -- "Connection.isValid" 
"PreparedStatement.addBatch" -- "PreparedStatement.executeBatch" 
"PreparedStatement.addBatch" -- "Connection.commit" 
"PreparedStatement.addBatch" -- "Connection.rollback" 
"PreparedStatement.addBatch" -- "PreparedStatement.setDate" 
"PreparedStatement.executeBatch" -- "Connection.commit" 
"PreparedStatement.executeBatch" -- "Connection.rollback" 
"PreparedStatement.executeBatch" -- "PreparedStatement.setDate" 
"Connection.commit" -- "Connection.rollback" 
"Connection.commit" -- "Statement.addBatch" 
"Connection.commit" -- "Statement.executeBatch" 
"Connection.rollback" -- "Statement.addBatch" 
"Connection.rollback" -- "Statement.executeBatch" 
"Statement.addBatch" -- "Statement.executeBatch" 
"DatabaseMetaData.supportsResultSetConcurrency" -- "DatabaseMetaData.supportsFullOuterJoins" 
"DatabaseMetaData.supportsResultSetConcurrency" -- "DatabaseMetaData.supportsStoredProcedures" 
"DatabaseMetaData.supportsResultSetConcurrency" -- "DatabaseMetaData.supportsSubqueriesInExists" 
"DatabaseMetaData.supportsResultSetConcurrency" -- "DatabaseMetaData.supportsTransactions" 
"DatabaseMetaData.supportsResultSetConcurrency" -- "DatabaseMetaData.supportsCoreSQLGrammar" 
"DatabaseMetaData.supportsResultSetConcurrency" -- "DatabaseMetaData.supportsBatchUpdates" 
"DatabaseMetaData.supportsResultSetConcurrency" -- "DatabaseMetaData.supportsColumnAliasing" 
"DatabaseMetaData.supportsResultSetConcurrency" -- "DatabaseMetaData.supportsSavepoints" 
"DatabaseMetaData.supportsResultSetConcurrency" -- "DatabaseMetaData.supportsUnionAll" 
"DatabaseMetaData.supportsResultSetConcurrency" -- "DatabaseMetaData.supportsUnion" 
"DatabaseMetaData.supportsFullOuterJoins" -- "DatabaseMetaData.supportsStoredProcedures" 
"DatabaseMetaData.supportsFullOuterJoins" -- "DatabaseMetaData.supportsSubqueriesInExists" 
"DatabaseMetaData.supportsFullOuterJoins" -- "DatabaseMetaData.supportsTransactions" 
"DatabaseMetaData.supportsFullOuterJoins" -- "DatabaseMetaData.supportsCoreSQLGrammar" 
"DatabaseMetaData.supportsFullOuterJoins" -- "DatabaseMetaData.supportsBatchUpdates" 
"DatabaseMetaData.supportsFullOuterJoins" -- "DatabaseMetaData.supportsColumnAliasing" 
"DatabaseMetaData.supportsFullOuterJoins" -- "DatabaseMetaData.supportsSavepoints" 
"DatabaseMetaData.supportsFullOuterJoins" -- "DatabaseMetaData.supportsUnionAll" 
"DatabaseMetaData.supportsFullOuterJoins" -- "DatabaseMetaData.supportsUnion" 
"DatabaseMetaData.supportsStoredProcedures" -- "DatabaseMetaData.supportsSubqueriesInExists" 
"DatabaseMetaData.supportsStoredProcedures" -- "DatabaseMetaData.supportsTransactions" 
"DatabaseMetaData.supportsStoredProcedures" -- "DatabaseMetaData.supportsCoreSQLGrammar" 
"DatabaseMetaData.supportsStoredProcedures" -- "DatabaseMetaData.supportsBatchUpdates" 
"DatabaseMetaData.supportsStoredProcedures" -- "DatabaseMetaData.supportsColumnAliasing" 
"DatabaseMetaData.supportsStoredProcedures" -- "DatabaseMetaData.supportsSavepoints" 
"DatabaseMetaData.supportsStoredProcedures" -- "DatabaseMetaData.supportsUnionAll" 
"DatabaseMetaData.supportsStoredProcedures" -- "DatabaseMetaData.supportsUnion" 
"DatabaseMetaData.supportsSubqueriesInExists" -- "DatabaseMetaData.supportsTransactions" 
"DatabaseMetaData.supportsSubqueriesInExists" -- "DatabaseMetaData.supportsCoreSQLGrammar" 
"DatabaseMetaData.supportsSubqueriesInExists" -- "DatabaseMetaData.supportsBatchUpdates" 
"DatabaseMetaData.supportsSubqueriesInExists" -- "DatabaseMetaData.supportsColumnAliasing" 
"DatabaseMetaData.supportsSubqueriesInExists" -- "DatabaseMetaData.supportsSavepoints" 
"DatabaseMetaData.supportsSubqueriesInExists" -- "DatabaseMetaData.supportsUnionAll" 
"DatabaseMetaData.supportsSubqueriesInExists" -- "DatabaseMetaData.supportsUnion" 
"DatabaseMetaData.supportsTransactions" -- "DatabaseMetaData.supportsCoreSQLGrammar" 
"DatabaseMetaData.supportsTransactions" -- "DatabaseMetaData.supportsBatchUpdates" 
"DatabaseMetaData.supportsTransactions" -- "DatabaseMetaData.supportsColumnAliasing" 
"DatabaseMetaData.supportsTransactions" -- "DatabaseMetaData.supportsSavepoints" 
"DatabaseMetaData.supportsTransactions" -- "DatabaseMetaData.supportsUnionAll" 
"DatabaseMetaData.supportsTransactions" -- "DatabaseMetaData.supportsUnion" 
"DatabaseMetaData.supportsCoreSQLGrammar" -- "DatabaseMetaData.supportsBatchUpdates" 
"DatabaseMetaData.supportsCoreSQLGrammar" -- "DatabaseMetaData.supportsColumnAliasing" 
"DatabaseMetaData.supportsCoreSQLGrammar" -- "DatabaseMetaData.supportsSavepoints" 
"DatabaseMetaData.supportsCoreSQLGrammar" -- "DatabaseMetaData.supportsUnionAll" 
"DatabaseMetaData.supportsCoreSQLGrammar" -- "DatabaseMetaData.supportsUnion" 
"DatabaseMetaData.supportsBatchUpdates" -- "DatabaseMetaData.supportsColumnAliasing" 
"DatabaseMetaData.supportsBatchUpdates" -- "DatabaseMetaData.supportsSavepoints" 
"DatabaseMetaData.supportsBatchUpdates" -- "DatabaseMetaData.supportsUnionAll" 
"DatabaseMetaData.supportsBatchUpdates" -- "DatabaseMetaData.supportsUnion" 
"DatabaseMetaData.supportsColumnAliasing" -- "DatabaseMetaData.supportsSavepoints" 
"DatabaseMetaData.supportsColumnAliasing" -- "DatabaseMetaData.supportsUnionAll" 
"DatabaseMetaData.supportsColumnAliasing" -- "DatabaseMetaData.supportsUnion" 
"DatabaseMetaData.supportsSavepoints" -- "DatabaseMetaData.supportsUnionAll" 
"DatabaseMetaData.supportsSavepoints" -- "DatabaseMetaData.supportsUnion" 
"DatabaseMetaData.supportsUnionAll" -- "DatabaseMetaData.supportsUnion" 
"DatabaseMetaData.getUserName" -- "DatabaseMetaData.getSchemas" 
"DatabaseMetaData.getDatabaseProductName" -- "DatabaseMetaData.getDatabaseProductVersion" 
"DatabaseMetaData.getDatabaseProductName" -- "DatabaseMetaData.getDriverName" 
"DatabaseMetaData.getDatabaseProductName" -- "DatabaseMetaData.getDriverVersion" 
"DatabaseMetaData.getDatabaseProductVersion" -- "DatabaseMetaData.getDriverName" 
"DatabaseMetaData.getDatabaseProductVersion" -- "DatabaseMetaData.getDriverVersion" 
"DatabaseMetaData.getDriverName" -- "DatabaseMetaData.getDriverVersion" 
"RowSet.isAfterLast" -- "RowSet.getString" 
"RowSet.isAfterLast" -- "Pattern.toString" 
"RowSet.getString" -- "Pattern.toString" 
"CachedRowSet.setUsername" -- "CachedRowSet.setPassword" 
"CachedRowSet.setUsername" -- "CachedRowSet.setUrl" 
"CachedRowSet.setUsername" -- "CachedRowSet.setCommand" 
"CachedRowSet.setUsername" -- "CachedRowSet.execute" 
"CachedRowSet.setUsername" -- "CachedRowSet.addRowSetListener" 
"CachedRowSet.setUsername" -- "CachedRowSet.next" 
"CachedRowSet.setUsername" -- "CachedRowSet.getInt" 
"CachedRowSet.setUsername" -- "CachedRowSet.deleteRow" 
"CachedRowSet.setUsername" -- "WebRowSet.setUsername" 
"CachedRowSet.setUsername" -- "WebRowSet.setPassword" 
"CachedRowSet.setUsername" -- "WebRowSet.setUrl" 
"CachedRowSet.setUsername" -- "WebRowSet.setCommand" 
"CachedRowSet.setUsername" -- "WebRowSet.execute" 
"CachedRowSet.setUsername" -- "WebRowSet.writeXml" 
"CachedRowSet.setUsername" -- "RowSetProvider.newFactory" 
"CachedRowSet.setUsername" -- "RowSetFactory.createFilteredRowSet" 
"CachedRowSet.setUsername" -- "ResultSetMetaData.getColumnCount" 
"CachedRowSet.setUsername" -- "ResultSetMetaData.getColumnLabel" 
"CachedRowSet.setPassword" -- "CachedRowSet.setUrl" 
"CachedRowSet.setPassword" -- "CachedRowSet.setCommand" 
"CachedRowSet.setPassword" -- "CachedRowSet.execute" 
"CachedRowSet.setPassword" -- "CachedRowSet.addRowSetListener" 
"CachedRowSet.setPassword" -- "CachedRowSet.next" 
"CachedRowSet.setPassword" -- "CachedRowSet.getInt" 
"CachedRowSet.setPassword" -- "CachedRowSet.deleteRow" 
"CachedRowSet.setPassword" -- "WebRowSet.setUsername" 
"CachedRowSet.setPassword" -- "WebRowSet.setPassword" 
"CachedRowSet.setPassword" -- "WebRowSet.setUrl" 
"CachedRowSet.setPassword" -- "WebRowSet.setCommand" 
"CachedRowSet.setPassword" -- "WebRowSet.execute" 
"CachedRowSet.setPassword" -- "WebRowSet.writeXml" 
"CachedRowSet.setPassword" -- "RowSetProvider.newFactory" 
"CachedRowSet.setPassword" -- "RowSetFactory.createFilteredRowSet" 
"CachedRowSet.setPassword" -- "ResultSetMetaData.getColumnCount" 
"CachedRowSet.setPassword" -- "ResultSetMetaData.getColumnLabel" 
"CachedRowSet.setUrl" -- "CachedRowSet.setCommand" 
"CachedRowSet.setUrl" -- "CachedRowSet.execute" 
"CachedRowSet.setUrl" -- "CachedRowSet.addRowSetListener" 
"CachedRowSet.setUrl" -- "CachedRowSet.next" 
"CachedRowSet.setUrl" -- "CachedRowSet.getInt" 
"CachedRowSet.setUrl" -- "CachedRowSet.deleteRow" 
"CachedRowSet.setUrl" -- "WebRowSet.setUsername" 
"CachedRowSet.setUrl" -- "WebRowSet.setPassword" 
"CachedRowSet.setUrl" -- "WebRowSet.setUrl" 
"CachedRowSet.setUrl" -- "WebRowSet.setCommand" 
"CachedRowSet.setUrl" -- "WebRowSet.execute" 
"CachedRowSet.setUrl" -- "WebRowSet.writeXml" 
"CachedRowSet.setUrl" -- "RowSetProvider.newFactory" 
"CachedRowSet.setUrl" -- "RowSetFactory.createFilteredRowSet" 
"CachedRowSet.setUrl" -- "ResultSetMetaData.getColumnCount" 
"CachedRowSet.setUrl" -- "ResultSetMetaData.getColumnLabel" 
"CachedRowSet.setCommand" -- "CachedRowSet.execute" 
"CachedRowSet.setCommand" -- "CachedRowSet.addRowSetListener" 
"CachedRowSet.setCommand" -- "CachedRowSet.next" 
"CachedRowSet.setCommand" -- "CachedRowSet.getInt" 
"CachedRowSet.setCommand" -- "CachedRowSet.deleteRow" 
"CachedRowSet.setCommand" -- "WebRowSet.setUsername" 
"CachedRowSet.setCommand" -- "WebRowSet.setPassword" 
"CachedRowSet.setCommand" -- "WebRowSet.setUrl" 
"CachedRowSet.setCommand" -- "WebRowSet.setCommand" 
"CachedRowSet.setCommand" -- "WebRowSet.execute" 
"CachedRowSet.setCommand" -- "WebRowSet.writeXml" 
"CachedRowSet.setCommand" -- "RowSetProvider.newFactory" 
"CachedRowSet.setCommand" -- "RowSetFactory.createFilteredRowSet" 
"CachedRowSet.setCommand" -- "ResultSetMetaData.getColumnCount" 
"CachedRowSet.setCommand" -- "ResultSetMetaData.getColumnLabel" 
"CachedRowSet.execute" -- "CachedRowSet.addRowSetListener" 
"CachedRowSet.execute" -- "CachedRowSet.next" 
"CachedRowSet.execute" -- "CachedRowSet.getInt" 
"CachedRowSet.execute" -- "CachedRowSet.deleteRow" 
"CachedRowSet.execute" -- "WebRowSet.setUsername" 
"CachedRowSet.execute" -- "WebRowSet.setPassword" 
"CachedRowSet.execute" -- "WebRowSet.setUrl" 
"CachedRowSet.execute" -- "WebRowSet.setCommand" 
"CachedRowSet.execute" -- "WebRowSet.execute" 
"CachedRowSet.execute" -- "WebRowSet.writeXml" 
"CachedRowSet.execute" -- "RowSetProvider.newFactory" 
"CachedRowSet.execute" -- "RowSetFactory.createFilteredRowSet" 
"CachedRowSet.execute" -- "ResultSetMetaData.getColumnCount" 
"CachedRowSet.execute" -- "ResultSetMetaData.getColumnLabel" 
"CachedRowSet.addRowSetListener" -- "CachedRowSet.next" 
"CachedRowSet.addRowSetListener" -- "CachedRowSet.getInt" 
"CachedRowSet.addRowSetListener" -- "CachedRowSet.deleteRow" 
"CachedRowSet.addRowSetListener" -- "WebRowSet.setUsername" 
"CachedRowSet.addRowSetListener" -- "WebRowSet.setPassword" 
"CachedRowSet.addRowSetListener" -- "WebRowSet.setUrl" 
"CachedRowSet.addRowSetListener" -- "WebRowSet.setCommand" 
"CachedRowSet.addRowSetListener" -- "WebRowSet.execute" 
"CachedRowSet.addRowSetListener" -- "WebRowSet.writeXml" 
"CachedRowSet.addRowSetListener" -- "RowSetProvider.newFactory" 
"CachedRowSet.addRowSetListener" -- "RowSetFactory.createFilteredRowSet" 
"CachedRowSet.addRowSetListener" -- "ResultSetMetaData.getColumnCount" 
"CachedRowSet.addRowSetListener" -- "ResultSetMetaData.getColumnLabel" 
"CachedRowSet.next" -- "CachedRowSet.getInt" 
"CachedRowSet.next" -- "CachedRowSet.deleteRow" 
"CachedRowSet.next" -- "WebRowSet.setUsername" 
"CachedRowSet.next" -- "WebRowSet.setPassword" 
"CachedRowSet.next" -- "WebRowSet.setUrl" 
"CachedRowSet.next" -- "WebRowSet.setCommand" 
"CachedRowSet.next" -- "WebRowSet.execute" 
"CachedRowSet.next" -- "WebRowSet.writeXml" 
"CachedRowSet.next" -- "RowSetProvider.newFactory" 
"CachedRowSet.next" -- "RowSetFactory.createFilteredRowSet" 
"CachedRowSet.next" -- "ResultSetMetaData.getColumnCount" 
"CachedRowSet.next" -- "ResultSetMetaData.getColumnLabel" 
"CachedRowSet.getInt" -- "CachedRowSet.deleteRow" 
"CachedRowSet.getInt" -- "WebRowSet.setUsername" 
"CachedRowSet.getInt" -- "WebRowSet.setPassword" 
"CachedRowSet.getInt" -- "WebRowSet.setUrl" 
"CachedRowSet.getInt" -- "WebRowSet.setCommand" 
"CachedRowSet.getInt" -- "WebRowSet.execute" 
"CachedRowSet.getInt" -- "WebRowSet.writeXml" 
"CachedRowSet.getInt" -- "RowSetProvider.newFactory" 
"CachedRowSet.getInt" -- "RowSetFactory.createFilteredRowSet" 
"CachedRowSet.getInt" -- "ResultSetMetaData.getColumnCount" 
"CachedRowSet.getInt" -- "ResultSetMetaData.getColumnLabel" 
"CachedRowSet.deleteRow" -- "WebRowSet.setUsername" 
"CachedRowSet.deleteRow" -- "WebRowSet.setPassword" 
"CachedRowSet.deleteRow" -- "WebRowSet.setUrl" 
"CachedRowSet.deleteRow" -- "WebRowSet.setCommand" 
"CachedRowSet.deleteRow" -- "WebRowSet.execute" 
"CachedRowSet.deleteRow" -- "WebRowSet.writeXml" 
"CachedRowSet.deleteRow" -- "RowSetProvider.newFactory" 
"CachedRowSet.deleteRow" -- "RowSetFactory.createFilteredRowSet" 
"CachedRowSet.deleteRow" -- "ResultSetMetaData.getColumnCount" 
"CachedRowSet.deleteRow" -- "ResultSetMetaData.getColumnLabel" 
"WebRowSet.setUsername" -- "WebRowSet.setPassword" 
"WebRowSet.setUsername" -- "WebRowSet.setUrl" 
"WebRowSet.setUsername" -- "WebRowSet.setCommand" 
"WebRowSet.setUsername" -- "WebRowSet.execute" 
"WebRowSet.setUsername" -- "WebRowSet.writeXml" 
"WebRowSet.setUsername" -- "RowSetProvider.newFactory" 
"WebRowSet.setUsername" -- "RowSetFactory.createFilteredRowSet" 
"WebRowSet.setUsername" -- "ResultSetMetaData.getColumnCount" 
"WebRowSet.setUsername" -- "ResultSetMetaData.getColumnLabel" 
"WebRowSet.setPassword" -- "WebRowSet.setUrl" 
"WebRowSet.setPassword" -- "WebRowSet.setCommand" 
"WebRowSet.setPassword" -- "WebRowSet.execute" 
"WebRowSet.setPassword" -- "WebRowSet.writeXml" 
"WebRowSet.setPassword" -- "RowSetProvider.newFactory" 
"WebRowSet.setPassword" -- "RowSetFactory.createFilteredRowSet" 
"WebRowSet.setPassword" -- "ResultSetMetaData.getColumnCount" 
"WebRowSet.setPassword" -- "ResultSetMetaData.getColumnLabel" 
"WebRowSet.setUrl" -- "WebRowSet.setCommand" 
"WebRowSet.setUrl" -- "WebRowSet.execute" 
"WebRowSet.setUrl" -- "WebRowSet.writeXml" 
"WebRowSet.setUrl" -- "RowSetProvider.newFactory" 
"WebRowSet.setUrl" -- "RowSetFactory.createFilteredRowSet" 
"WebRowSet.setUrl" -- "ResultSetMetaData.getColumnCount" 
"WebRowSet.setUrl" -- "ResultSetMetaData.getColumnLabel" 
"WebRowSet.setCommand" -- "WebRowSet.execute" 
"WebRowSet.setCommand" -- "WebRowSet.writeXml" 
"WebRowSet.setCommand" -- "RowSetProvider.newFactory" 
"WebRowSet.setCommand" -- "RowSetFactory.createFilteredRowSet" 
"WebRowSet.setCommand" -- "ResultSetMetaData.getColumnCount" 
"WebRowSet.setCommand" -- "ResultSetMetaData.getColumnLabel" 
"WebRowSet.execute" -- "WebRowSet.writeXml" 
"WebRowSet.execute" -- "RowSetProvider.newFactory" 
"WebRowSet.execute" -- "RowSetFactory.createFilteredRowSet" 
"WebRowSet.execute" -- "ResultSetMetaData.getColumnCount" 
"WebRowSet.execute" -- "ResultSetMetaData.getColumnLabel" 
"WebRowSet.writeXml" -- "RowSetProvider.newFactory" 
"WebRowSet.writeXml" -- "RowSetFactory.createFilteredRowSet" 
"WebRowSet.writeXml" -- "ResultSetMetaData.getColumnCount" 
"WebRowSet.writeXml" -- "ResultSetMetaData.getColumnLabel" 
"RowSetProvider.newFactory" -- "RowSetFactory.createFilteredRowSet" 
"RowSetProvider.newFactory" -- "ResultSetMetaData.getColumnCount" 
"RowSetProvider.newFactory" -- "ResultSetMetaData.getColumnLabel" 
"RowSetFactory.createFilteredRowSet" -- "ResultSetMetaData.getColumnCount" 
"RowSetFactory.createFilteredRowSet" -- "ResultSetMetaData.getColumnLabel" 
"ResultSetMetaData.getColumnCount" -- "ResultSetMetaData.getColumnLabel" 
"ResultSet.getInt" -- "PreparedStatement.setInt" 
"ResultSet.getInt" -- "ResultSet.first" 
"ResultSet.getInt" -- "ResultSet.wasNull" 
"ResultSet.getInt" -- "ResultSet.getLong" 
"ResultSet.getInt" -- "ResultSet.getDouble" 
"ResultSet.getInt" -- "PreparedStatement.close" 
"PreparedStatement.setInt" -- "ResultSet.first" 
"PreparedStatement.setInt" -- "PreparedStatement.setNull" 
"Set<<Member>>.isEmpty" -- "HashSet<>.<init>" 
"Set<<Member>>.isEmpty" -- "Member.getEmail" 
"HashSet<>.<init>" -- "Member.getEmail" 
"Member.getName" -- "Event<Member>.fire" 
"Builder.settings" -- "Builder.index" 
"Builder.settings" -- "Builder.defaultIndex" 
"Builder.index" -- "Builder.defaultIndex" 
"Path.<init>" -- "Configuration.addResource" 
"Put.<init>" -- "Put.addImmutable" 
"Put.<init>" -- "Put.addColumn" 
"ResultSet.wasNull" -- "ResultSet.getLong" 
"ResultSet.getLong" -- "ArrayList.build" 
"ResultSet.getLong" -- "Book.setTitle" 
"ExceptionInInitializerError.<init>" -- "Configuration.addAnnotatedClass" 
"ExceptionInInitializerError.<init>" -- "Configuration.getProperties" 
"ExceptionInInitializerError.<init>" -- "Configuration.buildSessionFactory" 
"ExceptionInInitializerError.<init>" -- "Configuration.configure" 
"Configuration.addAnnotatedClass" -- "Configuration.getProperties" 
"Configuration.addAnnotatedClass" -- "Configuration.buildSessionFactory" 
"Configuration.addAnnotatedClass" -- "Configuration.configure" 
"Configuration.getProperties" -- "Configuration.buildSessionFactory" 
"Configuration.getProperties" -- "Configuration.configure" 
"Configuration.buildSessionFactory" -- "Configuration.configure" 
"Query.setParameter" -- "Query.getSingleResult" 
"ArrayList<Book>.<init>" -- "Row.getUUID" 
"ArrayList<Book>.<init>" -- "Row.getString" 
"ArrayList<Book>.<init>" -- "List<Book>.add" 
"ArrayList<Book>.<init>" -- "List<Book>.get" 
"Row.getUUID" -- "Row.getString" 
"Row.getUUID" -- "List<Book>.add" 
"Row.getUUID" -- "List<Book>.get" 
"Row.getString" -- "List<Book>.add" 
"Row.getString" -- "List<Book>.get" 
"List<Book>.add" -- "List<Book>.get" 
"List<Book>.add" -- "List<Book>.isEmpty" 
"List<String>.cast" -- "List<String[]>.cast" 
"List<String>.cast" -- "Document.getString" 
"List<String>.cast" -- "Document.get" 
"Document.getString" -- "Document.get" 
"Optional<Value>.get" -- "Value.get" 
"HashMap<String,String>.forEach" -- "HashMap<String,String>.size" 
"HashMap<String,String>.forEach" -- "ArrayList<String>.toArray" 
"HashMap<String,String>.size" -- "ArrayList<String>.toArray" 
"StringValue.<init>" -- "ObjectValue.<init>" 
"List<RowMapper>.size" -- "List<RowMapper>.forEach" 
"DateTime.now" -- "Message.setMessage" 
"Collection.add" -- "Role.getRole" 
"List<Predicate>.add" -- "List<Predicate>.size" 
"List<Predicate>.add" -- "List<Predicate>.toArray" 
"List<Predicate>.size" -- "List<Predicate>.toArray" 
"Iterator<Map<String,Object>>.hasNext" -- "Iterator<Map<String,Object>>.next" 
"Iterator<Map<String,Object>>.hasNext" -- "List<Map<String,Object>>.indexOf" 
"Iterator<Map<String,Object>>.next" -- "List<Map<String,Object>>.indexOf" 
"Message.toString" -- "Message.getBody" 
"Message.toString" -- "Message.getMessageProperties" 
"Query<Double>.getResultList" -- "Double.cast" 
"Query<Long>.getResultList" -- "List<Long>.get" 
"ThreadLocal.get" -- "Output.<init>" 
"ThreadLocal.get" -- "Output.flush" 
"Collections.nCopies" -- "List<Integer>.toArray" 
"Request.body" -- "Request.queryString" 
"Request.body" -- "Request.getHeaders" 
"Request.queryString" -- "Request.getHeaders" 
"Connection.createChannel" -- "Channel.queueDeclare" 
"Connection.createChannel" -- "Channel.basicConsume" 
"Connection.createChannel" -- "Channel.basicPublish" 
"Connection.createChannel" -- "Channel.close" 
"Channel.queueDeclare" -- "Channel.basicConsume" 
"Channel.queueDeclare" -- "Channel.basicPublish" 
"Channel.queueDeclare" -- "Channel.close" 
"Channel.basicPublish" -- "Channel.close" 
"Context.getResponse" -- "Context.next" 
"Context.getResponse" -- "Context.getPathTokens" 
"Observable.just" -- "Observable<String>.subscribe" 
"Observable.just" -- "Observable<String>.toBlocking" 
"Observable.just" -- "StringBuilder,.subscribe" 
"Observable.just" -- "Observable.empty" 
"Observable.error" -- "Observable.<String>error(new" 
"Long.intValue" -- "List<Float>.get" 
"Observable<String>.subscribe" -- "Observable<String>.toBlocking" 
"Observable<String>.subscribe" -- "StringBuilder,.subscribe" 
"Observable<String>.subscribe" -- "Observable.empty" 
"Observable<String>.toBlocking" -- "StringBuilder,.subscribe" 
"Observable<String>.toBlocking" -- "Observable.empty" 
"StringBuilder,.subscribe" -- "Observable.empty" 
"Observable.using" -- "Observable.create" 
"Observable.using" -- "Observable<Character>.subscribe" 
"Observable.create" -- "Observable<Character>.subscribe" 
"Observable.create" -- "MouseAdapter.<init>" 
"Observable.create" -- "JFrame.addMouseListener" 
"Observable.create" -- "MouseEvent.getX" 
"Observable.create" -- "JFrame.getListeners" 
"Observable.create" -- "JFrame.removeMouseListener" 
"Integer>>.add" -- "Integer>.onSubscribe" 
"Integer>>.size" -- "Integer>>.get" 
"Observable.subscribe" -- "Observable.doOnNext" 
"MouseAdapter.<init>" -- "JFrame.addMouseListener" 
"MouseAdapter.<init>" -- "MouseEvent.getX" 
"MouseAdapter.<init>" -- "JFrame.getListeners" 
"MouseAdapter.<init>" -- "JFrame.removeMouseListener" 
"JFrame.addMouseListener" -- "MouseEvent.getX" 
"JFrame.addMouseListener" -- "JFrame.getListeners" 
"JFrame.addMouseListener" -- "JFrame.removeMouseListener" 
"MouseEvent.getX" -- "JFrame.getListeners" 
"MouseEvent.getX" -- "JFrame.removeMouseListener" 
"JFrame.getListeners" -- "JFrame.removeMouseListener" 
"JFrame.getContentPane" -- "JFrame.setPreferredSize" 
"JFrame.getContentPane" -- "JFrame.pack" 
"JFrame.setPreferredSize" -- "JFrame.pack" 
"String>.isUnsubscribed" -- "String>.onCompleted" 
"String>.isUnsubscribed" -- "String>.onError" 
"String>.isUnsubscribed" -- "String>.onNext" 
"String>.onCompleted" -- "String>.onError" 
"String>.onCompleted" -- "String>.onNext" 
"String>.onError" -- "String>.onNext" 
"Token>.build" -- "Timer.<init>" 
"Token>.build" -- "TimerTask.<init>" 
"Token>.build" -- "Timer.scheduleAtFixedRate" 
"Timer.<init>" -- "TimerTask.<init>" 
"Timer.<init>" -- "Timer.scheduleAtFixedRate" 
"TimerTask.<init>" -- "Timer.scheduleAtFixedRate" 
"Parameter.getDeclaringExecutable" -- "Executable.getParameters" 
"Parameter.getDeclaringExecutable" -- "Executable.toGenericString" 
"Parameter.getDeclaringExecutable" -- "Method.instance" 
"Parameter.getDeclaringExecutable" -- "Method.cast" 
"Parameter.getDeclaringExecutable" -- "Constructor.cast" 
"Parameter.getDeclaringExecutable" -- "Optional<A>.map" 
"Parameter.getDeclaringExecutable" -- "Constructor.instance" 
"Executable.getParameters" -- "Executable.toGenericString" 
"Method.instance" -- "Method.cast" 
"Method.instance" -- "Constructor.cast" 
"Method.instance" -- "Optional<A>.map" 
"Method.cast" -- "Constructor.cast" 
"Book.title" -- "Book.author" 
"Book.title" -- "Book.genre" 
"Book.author" -- "Book.genre" 
"AtomicLong.<init>" -- "AtomicLong.toString" 
"AtomicLong.<init>" -- "AtomicLong.get" 
"ServerRequest.body" -- "AtomicLong.toString" 
"AtomicLong.toString" -- "AtomicLong.get" 
"OperatingSystemMXBean.getAvailableProcessors" -- "OperatingSystemMXBean.getSystemCpuLoad" 
"Iterable.cast" -- "Iterable.forEach" 
"List<LinkedHashMap<String,String>>.cast" -- "LinkedHashMap<String,String>.get" 
"Objects.nonNull" -- "LinkedHashMap.cast" 
"Objects.nonNull" -- "LinkedHashMap.get" 
"Objects.nonNull" -- "Result.include" 
"Objects.nonNull" -- "Result.redirectTo" 
"Objects.nonNull" -- "Validator.hasErrors" 
"Objects.nonNull" -- "Validator.getErrors" 
"Objects.nonNull" -- "Validator.onErrorRedirectTo" 
"LinkedHashMap.cast" -- "LinkedHashMap.get" 
"LinkedHashMap.cast" -- "LinkedHashMap.instance" 
"LinkedHashMap.cast" -- "LinkedHashMap.entrySet" 
"MultiValueMap<String,String>.cast" -- "MultiValueMap<String,String>.entrySet" 
"Page.getMaxResults" -- "Page.getFirstResult" 
"Group.setName" -- "Group.setType" 
"Group.setName" -- "Group.getId" 
"Group.setType" -- "Group.getId" 
"Message.getMessageProperties" -- "Channel.basicReject" 
"Message.getMessageProperties" -- "Channel.basicAck" 
"Message.cast" -- "Channel.cast" 
"Message.cast" -- "BiConsumer<Throwable>.accept" 
"Message.cast" -- "Message.getFrom" 
"Message.cast" -- "Message.getText" 
"Channel.cast" -- "BiConsumer<Throwable>.accept" 
"Resource.exists" -- "Resource.getFilename" 
"Book>.size" -- "Book.toString" 
"Line.getDob" -- "Line.toString" 
"Line.getDob" -- "Line.setAge" 
"Line.toString" -- "Line.setAge" 
"Line.toString" -- "List<Line>.add" 
"Line.getName" -- "Line.getAge" 
"Number.cast" -- "Number.doubleValue" 
"Channel.<init>" -- "Channel.setLink" 
"Channel.<init>" -- "Channel.setTitle" 
"Channel.<init>" -- "Channel.setDescription" 
"Channel.<init>" -- "Channel.setPubDate" 
"Channel.<init>" -- "Channel.setItems" 
"Channel.setLink" -- "Channel.setTitle" 
"Channel.setLink" -- "Channel.setDescription" 
"Channel.setLink" -- "Channel.setPubDate" 
"Channel.setLink" -- "Channel.setItems" 
"Channel.setTitle" -- "Channel.setDescription" 
"Channel.setTitle" -- "Channel.setPubDate" 
"Channel.setTitle" -- "Channel.setItems" 
"Channel.setDescription" -- "Channel.setPubDate" 
"Channel.setDescription" -- "Channel.setItems" 
"Channel.setPubDate" -- "Channel.setItems" 
"Builder.found" -- "Builder.didNotFind" 
"Message.setText" -- "Message.setTo" 
"Message.setText" -- "Message.setDate" 
"Message.setText" -- "Message.setId" 
"Message.getFrom" -- "Message.getText" 
"Message.getFrom" -- "Message.getTo" 
"Message.getFrom" -- "Message.getDate" 
"Message.getFrom" -- "Message.getId" 
"Message.getText" -- "Message.getTo" 
"Message.getText" -- "Message.getDate" 
"Message.getText" -- "Message.getId" 
"TreeNode.get" -- "Color.web" 
"Color.getRed" -- "Color.getGreen" 
"Color.getRed" -- "Color.getBlue" 
"Color.getGreen" -- "Color.getBlue" 
"List<>.get" -- "List<>.size" 
"Set<Product>.stream" -- "Product.setId" 
"Set<Product>.stream" -- "Set<Product>.add" 
"Product.setId" -- "Set<Product>.add" 
"Service.getUrl" -- "Service.getToken" 
"Service.getUrl" -- "Service.getDescription" 
"Service.getToken" -- "Service.getDescription" 
"LinkedHashMap.instance" -- "LinkedHashMap.entrySet" 
"Optional<String>.map" -- "Entry.getKey" 
"Optional<String>.map" -- "Entry.getValue" 
"Entry.getKey" -- "Entry.getValue" 
"Resource.getInputStream" -- "Map.entrySet" 
"BufferedOutputStream.<init>" -- "BufferedOutputStream.write" 
"BufferedOutputStream.<init>" -- "BufferedOutputStream.close" 
"BufferedOutputStream.write" -- "BufferedOutputStream.close" 
"Info.<init>" -- "Info.title" 
"Info.<init>" -- "Info.title("Foobar" 
"Info.title" -- "Info.title("Foobar" 
"Pageable.getPageNumber" -- "Pageable.getPageSize" 
"Pageable.getPageNumber" -- "List<Book>.subList" 
"Pageable.getPageSize" -- "List<Book>.subList" 
"Map<String,Object>.remove" -- "Map<String,Runnable>.remove" 
"StringJoiner.length" -- "StringJoiner.toString" 
"ArrayList<Cache>.<init>" -- "Collection<Cache>.add" 
"Map<String,String>.keySet" -- "Book.setTitle" 
"Map<String,String>.keySet" -- "Map<String,Map<String,String>>.get" 
"Map<String,String>.keySet" -- "Set<String>.iterator" 
"Product.getSku" -- "Product.setSku" 
"List<HttpCookie>.isEmpty" -- "List<HttpCookie>.get" 
"ObjectFactory.getObject" -- "Map<String,Object>.containsKey" 
"Class.getConstructor" -- "Constructor.newInstance" 
"Class.getConstructor" -- "Class.getTypeName" 
"Constructor.newInstance" -- "Class.getTypeName" 
"ParameterizedType.instance" -- "Type.equals" 
"Field.getGenericType" -- "Field.getType" 
"Field.getGenericType" -- "Field.getDeclaredAnnotation" 
"Field.getGenericType" -- "Field.set" 
"Field.getType" -- "Field.getDeclaredAnnotation" 
"Field.getType" -- "Field.set" 
"Field.getDeclaredAnnotation" -- "Field.set" 
"Expression.getValue" -- "BiConsumer<Object>.accept" 
"Map<String,Validator>.entrySet" -- "Entry<String,Validator>.getValue" 
"Map<String,Validator>.entrySet" -- "Entry<String,Validator>.getKey" 
"Entry<String,Validator>.getValue" -- "Entry<String,Validator>.getKey" 
"File.getText" -- "File.setText" 
"Connection.start" -- "Connection.createSession" 
"Set<Role>.addAll" -- "HashSet<Role>.<init>" 
"Role.getClass" -- "Role.cast" 
"Role.getClass" -- "Role.equals" 
"Role.cast" -- "Role.equals" 
"Message.setTo" -- "Message.setDate" 
"Message.setTo" -- "Message.setId" 
"Message.setDate" -- "Message.setId" 
"Message.getTo" -- "Message.getDate" 
"Message.getTo" -- "Message.getId" 
"Message.getDate" -- "Message.getId" 
"Map<String,Map<String,String>>.get" -- "Set<String>.iterator" 
"InetSocketAddress.getPort" -- "InetSocketAddress.getHostName" 
"MultiValueMap<String,String>.forEach" -- "MultiValueMap<String,String>.size" 
"Set<>.isEmpty" -- "Set<>.forEach" 
"Optional<Integer>.isPresent" -- "Optional<Integer>.get" 
"Map<Integer,List>.put" -- "Map<Integer,List>.get" 
"ArrayList<MediaType>.<init>" -- "List<MediaType>.add" 
"Map<String,LinkedList<String>>.get" -- "Entry<Long>.getValue" 
"Deque<String>.peek" -- "Deque<String>.isEmpty" 
"Deque<String>.peek" -- "Deque<String>.pop" 
"Deque<String>.peek" -- "Deque<Object>.push" 
"Deque<String>.peek" -- "Deque<String>.push" 
"Deque<String>.isEmpty" -- "Deque<String>.pop" 
"Deque<String>.isEmpty" -- "Deque<Object>.push" 
"Deque<String>.isEmpty" -- "Deque<String>.push" 
"Deque<String>.pop" -- "Deque<Object>.push" 
"Deque<String>.pop" -- "Deque<String>.push" 
"Deque<Object>.push" -- "Deque<String>.push" 
"Output.<init>" -- "Output.flush" 
"List<ArrayList<Integer>>.size" -- "List<ArrayList<Integer>>.get" 
"ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.get" -- "ConcurrentHashMap<Integer,Integer>.<init>" 
"ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.get" -- "ConcurrentHashMap<Integer,Integer>.get" 
"ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.get" -- "ConcurrentHashMap<Integer,Integer>.put" 
"ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.get" -- "ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.put" 
"ConcurrentHashMap<Integer,Integer>.<init>" -- "ConcurrentHashMap<Integer,Integer>.get" 
"ConcurrentHashMap<Integer,Integer>.<init>" -- "ConcurrentHashMap<Integer,Integer>.put" 
"ConcurrentHashMap<Integer,Integer>.<init>" -- "ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.put" 
"ConcurrentHashMap<Integer,Integer>.<init>" -- "ConcurrentHashMap<String,ConcurrentHashMap<Integer,Integer>>.<init>" 
"ConcurrentHashMap<Integer,Integer>.get" -- "ConcurrentHashMap<Integer,Integer>.put" 
"ConcurrentHashMap<Integer,Integer>.get" -- "ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.put" 
"ConcurrentHashMap<Integer,Integer>.put" -- "ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.put" 
"ConcurrentMap<Integer,Integer>.get" -- "ConcurrentMap<Integer,Integer>.put" 
"ConcurrentMap<Integer,Integer>.get" -- "ConcurrentMap<Integer,Integer>.keySet" 
"ConcurrentMap<Integer,Integer>.get" -- "ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.keySet" 
"ConcurrentMap<Integer,Integer>.get" -- "ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.entrySet" 
"ConcurrentMap<Integer,Integer>.get" -- "Entry<String,ConcurrentHashMap<Integer,Integer>>.getKey" 
"ConcurrentMap<Integer,Integer>.get" -- "Entry<String,ConcurrentHashMap<Integer,Integer>>.getValue" 
"ConcurrentMap<Integer,Integer>.keySet" -- "ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.keySet" 
"ConcurrentMap<Integer,Integer>.keySet" -- "ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.entrySet" 
"ConcurrentMap<Integer,Integer>.keySet" -- "Entry<String,ConcurrentHashMap<Integer,Integer>>.getKey" 
"ConcurrentMap<Integer,Integer>.keySet" -- "Entry<String,ConcurrentHashMap<Integer,Integer>>.getValue" 
"ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.keySet" -- "ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.entrySet" 
"ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.keySet" -- "Entry<String,ConcurrentHashMap<Integer,Integer>>.getKey" 
"ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.keySet" -- "Entry<String,ConcurrentHashMap<Integer,Integer>>.getValue" 
"ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.entrySet" -- "Entry<String,ConcurrentHashMap<Integer,Integer>>.getKey" 
"ConcurrentMap<String,ConcurrentHashMap<Integer,Integer>>.entrySet" -- "Entry<String,ConcurrentHashMap<Integer,Integer>>.getValue" 
"Entry<String,ConcurrentHashMap<Integer,Integer>>.getKey" -- "Entry<String,ConcurrentHashMap<Integer,Integer>>.getValue" 
"ByteArrayOutputStream.size" -- "ByteArrayOutputStream.writeTo" 
"Collection<String>.addAll" -- "Collection<String>.toArray" 
"Role.getName" -- "Role.getPrivileges" 
"List<Class>.size" -- "List<Class>.get" 
"List<MediaType>.size" -- "List<MediaType>.toArray" 
"MediaType.parseMediaType" -- "MediaType.parseMediaTypes" 
"Date.instance" -- "Date.cast" 
"MultiValueMap<String,String>.containsKey" -- "MultiValueMap<String,String>.remove" 
"BigDecimal.longValue" -- "Function<TemporalAccessor>.apply" 
"BigDecimal.longValue" -- "BiFunction<ZoneId>.apply" 
"Function<TemporalAccessor>.apply" -- "BiFunction<ZoneId>.apply" 
"Tag.getClass" -- "Tag.cast" 
"Detail.<init>" -- "List<Detail>.add" 
"Thread.getAllStackTraces" -- "String.format("%-20s" 
"Container.addComponent" -- "Component.uses" 
"Set<View>.addAll" -- "Set<View>.stream" 
"Graph.<init>" -- "Graph.opBuilder" 
"Graph.<init>" -- "Operation.output" 
"Graph.opBuilder" -- "Operation.output" 
"Location.<init>" -- "Location.getMaximumTemparature" 
"Response.isValid" -- "Response.setData" 
"Callback<Response>.<init>" -- "Service.doAction" 
"Book.getBookId" -- "Book.getNumberOfPages" 
"Files.createDirectories" -- "Files.move" 
"Path.resolve" -- "Files.createFile" 
"Actions.<init>" -- "Actions.moveToElement" 
"Attr.instance" -- "Attr.cast" 
"Attr.instance" -- "Attr.getName" 
"Attr.cast" -- "Attr.getName" 
"Message.creator" -- "Message.creator(new" 
"Message.reader" -- "Message.getStatus" 
"Message.reader" -- "Message.getSid" 
"Message.getStatus" -- "Message.getSid" 
"Button.setVisible" -- "Binder.setBean" 
"Button.setVisible" -- "TextField.focus" 
"Binder.setBean" -- "TextField.focus" 
"Binder.setBean" -- "Button.addClickListener" 
"Binder.setBean" -- "GridLayout.<init>" 
"Binder.setBean" -- "GridLayout.setSpacing" 
"Binder.setBean" -- "GridLayout.setMargin" 
"Binder.setBean" -- "Label.setId" 
"Binder.setBean" -- "Label.setValue" 
"Binder.setBean" -- "Label.setCaption" 
"Binder.setBean" -- "GridLayout.addComponent" 
"Binder.setBean" -- "Link.<init>" 
"Binder.setBean" -- "Link.setId" 
"Binder.setBean" -- "Link.setTargetName" 
"Binder.setBean" -- "TextField.setId" 
"Binder.setBean" -- "TextField.setCaption" 
"Binder.setBean" -- "TextField.setValue" 
"Binder.setBean" -- "TextField.setIcon" 
"Binder.setBean" -- "TextArea.<init>" 
"Binder.setBean" -- "TextArea.setCaption" 
"Binder.setBean" -- "TextArea.setId" 
"Binder.setBean" -- "TextArea.setValue" 
"Binder.setBean" -- "Panel.<init>" 
"Binder.setBean" -- "Panel.setContent" 
"Binder.setBean" -- "Button.setId" 
"Binder.setBean" -- "Button.setDescription" 
"Binder.setBean" -- "Button.setIcon" 
"Binder.setBean" -- "Grid.<init>" 
"Binder.setBean" -- "Grid<Row>.setColumns" 
"Binder.setBean" -- "Row.<init>" 
"Binder.setBean" -- "List<Row>.add" 
"Binder.setBean" -- "Grid<Row>.setItems" 
"Binder.setBean" -- "Panel.setSizeUndefined" 
"Binder.setBean" -- "Binder.<init>" 
"Binder.setBean" -- "Binder.readBean" 
"Binder.setBean" -- "TextField.setWidth" 
"Binder.setBean" -- "Binder.forField" 
"Binder.setBean" -- "Binder.validate" 
"Binder.bindInstanceFields" -- "Button.addClickListener" 
"Button.addClickListener" -- "GridLayout.<init>" 
"Button.addClickListener" -- "GridLayout.setSpacing" 
"Button.addClickListener" -- "GridLayout.setMargin" 
"Button.addClickListener" -- "Label.setId" 
"Button.addClickListener" -- "Label.setValue" 
"Button.addClickListener" -- "Label.setCaption" 
"Button.addClickListener" -- "GridLayout.addComponent" 
"Button.addClickListener" -- "Link.<init>" 
"Button.addClickListener" -- "Link.setId" 
"Button.addClickListener" -- "Link.setTargetName" 
"Button.addClickListener" -- "TextField.setId" 
"Button.addClickListener" -- "TextField.setCaption" 
"Button.addClickListener" -- "TextField.setValue" 
"Button.addClickListener" -- "TextField.setIcon" 
"Button.addClickListener" -- "TextArea.<init>" 
"Button.addClickListener" -- "TextArea.setCaption" 
"Button.addClickListener" -- "TextArea.setId" 
"Button.addClickListener" -- "TextArea.setValue" 
"Button.addClickListener" -- "Panel.<init>" 
"Button.addClickListener" -- "Panel.setContent" 
"Button.addClickListener" -- "Button.setId" 
"Button.addClickListener" -- "Button.setDescription" 
"Button.addClickListener" -- "Button.setIcon" 
"Button.addClickListener" -- "Grid.<init>" 
"Button.addClickListener" -- "Grid<Row>.setColumns" 
"Button.addClickListener" -- "Row.<init>" 
"Button.addClickListener" -- "List<Row>.add" 
"Button.addClickListener" -- "Grid<Row>.setItems" 
"Button.addClickListener" -- "Panel.setSizeUndefined" 
"Button.addClickListener" -- "Binder.<init>" 
"Button.addClickListener" -- "Binder.readBean" 
"Button.addClickListener" -- "TextField.setWidth" 
"Button.addClickListener" -- "Binder.forField" 
"Button.addClickListener" -- "Binder.validate" 
"Button.addClickListener" -- "Grid.setHeight" 
"Button.addClickListener" -- "Grid.setColumns" 
"Button.addClickListener" -- "Grid.getColumnByKey" 
"Button.addClickListener" -- "TextField.setPlaceholder" 
"Button.addClickListener" -- "TextField.setValueChangeMode" 
"Button.addClickListener" -- "TextField.addValueChangeListener" 
"Button.addClickListener" -- "Grid.asSingleSelect" 
"Button.addClickListener" -- "TextField.getValue" 
"GridLayout.<init>" -- "GridLayout.setSpacing" 
"GridLayout.<init>" -- "GridLayout.setMargin" 
"GridLayout.<init>" -- "Label.setId" 
"GridLayout.<init>" -- "Label.setValue" 
"GridLayout.<init>" -- "Label.setCaption" 
"GridLayout.<init>" -- "GridLayout.addComponent" 
"GridLayout.<init>" -- "Link.<init>" 
"GridLayout.<init>" -- "Link.setId" 
"GridLayout.<init>" -- "Link.setTargetName" 
"GridLayout.<init>" -- "TextField.setId" 
"GridLayout.<init>" -- "TextField.setCaption" 
"GridLayout.<init>" -- "TextField.setValue" 
"GridLayout.<init>" -- "TextField.setIcon" 
"GridLayout.<init>" -- "TextArea.<init>" 
"GridLayout.<init>" -- "TextArea.setCaption" 
"GridLayout.<init>" -- "TextArea.setId" 
"GridLayout.<init>" -- "TextArea.setValue" 
"GridLayout.<init>" -- "Panel.<init>" 
"GridLayout.<init>" -- "Panel.setContent" 
"GridLayout.<init>" -- "Button.setId" 
"GridLayout.<init>" -- "Button.setDescription" 
"GridLayout.<init>" -- "Button.setIcon" 
"GridLayout.<init>" -- "Grid.<init>" 
"GridLayout.<init>" -- "Grid<Row>.setColumns" 
"GridLayout.<init>" -- "Row.<init>" 
"GridLayout.<init>" -- "List<Row>.add" 
"GridLayout.<init>" -- "Grid<Row>.setItems" 
"GridLayout.<init>" -- "Panel.setSizeUndefined" 
"GridLayout.<init>" -- "Binder.<init>" 
"GridLayout.<init>" -- "Binder.readBean" 
"GridLayout.<init>" -- "TextField.setWidth" 
"GridLayout.<init>" -- "Binder.forField" 
"GridLayout.<init>" -- "Binder.validate" 
"GridLayout.setSpacing" -- "GridLayout.setMargin" 
"GridLayout.setSpacing" -- "Label.setId" 
"GridLayout.setSpacing" -- "Label.setValue" 
"GridLayout.setSpacing" -- "Label.setCaption" 
"GridLayout.setSpacing" -- "GridLayout.addComponent" 
"GridLayout.setSpacing" -- "Link.<init>" 
"GridLayout.setSpacing" -- "Link.setId" 
"GridLayout.setSpacing" -- "Link.setTargetName" 
"GridLayout.setSpacing" -- "TextField.setId" 
"GridLayout.setSpacing" -- "TextField.setCaption" 
"GridLayout.setSpacing" -- "TextField.setValue" 
"GridLayout.setSpacing" -- "TextField.setIcon" 
"GridLayout.setSpacing" -- "TextArea.<init>" 
"GridLayout.setSpacing" -- "TextArea.setCaption" 
"GridLayout.setSpacing" -- "TextArea.setId" 
"GridLayout.setSpacing" -- "TextArea.setValue" 
"GridLayout.setSpacing" -- "Panel.<init>" 
"GridLayout.setSpacing" -- "Panel.setContent" 
"GridLayout.setSpacing" -- "Button.setId" 
"GridLayout.setSpacing" -- "Button.setDescription" 
"GridLayout.setSpacing" -- "Button.setIcon" 
"GridLayout.setSpacing" -- "Grid.<init>" 
"GridLayout.setSpacing" -- "Grid<Row>.setColumns" 
"GridLayout.setSpacing" -- "Row.<init>" 
"GridLayout.setSpacing" -- "List<Row>.add" 
"GridLayout.setSpacing" -- "Grid<Row>.setItems" 
"GridLayout.setSpacing" -- "Panel.setSizeUndefined" 
"GridLayout.setSpacing" -- "Binder.<init>" 
"GridLayout.setSpacing" -- "Binder.readBean" 
"GridLayout.setSpacing" -- "TextField.setWidth" 
"GridLayout.setSpacing" -- "Binder.forField" 
"GridLayout.setSpacing" -- "Binder.validate" 
"GridLayout.setMargin" -- "Label.setId" 
"GridLayout.setMargin" -- "Label.setValue" 
"GridLayout.setMargin" -- "Label.setCaption" 
"GridLayout.setMargin" -- "GridLayout.addComponent" 
"GridLayout.setMargin" -- "Link.<init>" 
"GridLayout.setMargin" -- "Link.setId" 
"GridLayout.setMargin" -- "Link.setTargetName" 
"GridLayout.setMargin" -- "TextField.setId" 
"GridLayout.setMargin" -- "TextField.setCaption" 
"GridLayout.setMargin" -- "TextField.setValue" 
"GridLayout.setMargin" -- "TextField.setIcon" 
"GridLayout.setMargin" -- "TextArea.<init>" 
"GridLayout.setMargin" -- "TextArea.setCaption" 
"GridLayout.setMargin" -- "TextArea.setId" 
"GridLayout.setMargin" -- "TextArea.setValue" 
"GridLayout.setMargin" -- "Panel.<init>" 
"GridLayout.setMargin" -- "Panel.setContent" 
"GridLayout.setMargin" -- "Button.setId" 
"GridLayout.setMargin" -- "Button.setDescription" 
"GridLayout.setMargin" -- "Button.setIcon" 
"GridLayout.setMargin" -- "Grid.<init>" 
"GridLayout.setMargin" -- "Grid<Row>.setColumns" 
"GridLayout.setMargin" -- "Row.<init>" 
"GridLayout.setMargin" -- "List<Row>.add" 
"GridLayout.setMargin" -- "Grid<Row>.setItems" 
"GridLayout.setMargin" -- "Panel.setSizeUndefined" 
"GridLayout.setMargin" -- "Binder.<init>" 
"GridLayout.setMargin" -- "Binder.readBean" 
"GridLayout.setMargin" -- "TextField.setWidth" 
"GridLayout.setMargin" -- "Binder.forField" 
"GridLayout.setMargin" -- "Binder.validate" 
"Label.setId" -- "Label.setValue" 
"Label.setId" -- "Label.setCaption" 
"Label.setId" -- "GridLayout.addComponent" 
"Label.setId" -- "Link.<init>" 
"Label.setId" -- "Link.setId" 
"Label.setId" -- "Link.setTargetName" 
"Label.setId" -- "TextField.setId" 
"Label.setId" -- "TextField.setCaption" 
"Label.setId" -- "TextField.setValue" 
"Label.setId" -- "TextField.setIcon" 
"Label.setId" -- "TextArea.<init>" 
"Label.setId" -- "TextArea.setCaption" 
"Label.setId" -- "TextArea.setId" 
"Label.setId" -- "TextArea.setValue" 
"Label.setId" -- "Panel.<init>" 
"Label.setId" -- "Panel.setContent" 
"Label.setId" -- "Button.setId" 
"Label.setId" -- "Button.setDescription" 
"Label.setId" -- "Button.setIcon" 
"Label.setId" -- "Grid.<init>" 
"Label.setId" -- "Grid<Row>.setColumns" 
"Label.setId" -- "Row.<init>" 
"Label.setId" -- "List<Row>.add" 
"Label.setId" -- "Grid<Row>.setItems" 
"Label.setId" -- "Panel.setSizeUndefined" 
"Label.setId" -- "Binder.<init>" 
"Label.setId" -- "Binder.readBean" 
"Label.setId" -- "TextField.setWidth" 
"Label.setId" -- "Binder.forField" 
"Label.setId" -- "Binder.validate" 
"Label.setValue" -- "Label.setCaption" 
"Label.setValue" -- "GridLayout.addComponent" 
"Label.setValue" -- "Link.<init>" 
"Label.setValue" -- "Link.setId" 
"Label.setValue" -- "Link.setTargetName" 
"Label.setValue" -- "TextField.setId" 
"Label.setValue" -- "TextField.setCaption" 
"Label.setValue" -- "TextField.setValue" 
"Label.setValue" -- "TextField.setIcon" 
"Label.setValue" -- "TextArea.<init>" 
"Label.setValue" -- "TextArea.setCaption" 
"Label.setValue" -- "TextArea.setId" 
"Label.setValue" -- "TextArea.setValue" 
"Label.setValue" -- "Panel.<init>" 
"Label.setValue" -- "Panel.setContent" 
"Label.setValue" -- "Button.setId" 
"Label.setValue" -- "Button.setDescription" 
"Label.setValue" -- "Button.setIcon" 
"Label.setValue" -- "Grid.<init>" 
"Label.setValue" -- "Grid<Row>.setColumns" 
"Label.setValue" -- "Row.<init>" 
"Label.setValue" -- "List<Row>.add" 
"Label.setValue" -- "Grid<Row>.setItems" 
"Label.setValue" -- "Panel.setSizeUndefined" 
"Label.setValue" -- "Binder.<init>" 
"Label.setValue" -- "Binder.readBean" 
"Label.setValue" -- "TextField.setWidth" 
"Label.setValue" -- "Binder.forField" 
"Label.setValue" -- "Binder.validate" 
"Label.setCaption" -- "GridLayout.addComponent" 
"Label.setCaption" -- "Link.<init>" 
"Label.setCaption" -- "Link.setId" 
"Label.setCaption" -- "Link.setTargetName" 
"Label.setCaption" -- "TextField.setId" 
"Label.setCaption" -- "TextField.setCaption" 
"Label.setCaption" -- "TextField.setValue" 
"Label.setCaption" -- "TextField.setIcon" 
"Label.setCaption" -- "TextArea.<init>" 
"Label.setCaption" -- "TextArea.setCaption" 
"Label.setCaption" -- "TextArea.setId" 
"Label.setCaption" -- "TextArea.setValue" 
"Label.setCaption" -- "Panel.<init>" 
"Label.setCaption" -- "Panel.setContent" 
"Label.setCaption" -- "Button.setId" 
"Label.setCaption" -- "Button.setDescription" 
"Label.setCaption" -- "Button.setIcon" 
"Label.setCaption" -- "Grid.<init>" 
"Label.setCaption" -- "Grid<Row>.setColumns" 
"Label.setCaption" -- "Row.<init>" 
"Label.setCaption" -- "List<Row>.add" 
"Label.setCaption" -- "Grid<Row>.setItems" 
"Label.setCaption" -- "Panel.setSizeUndefined" 
"Label.setCaption" -- "Binder.<init>" 
"Label.setCaption" -- "Binder.readBean" 
"Label.setCaption" -- "TextField.setWidth" 
"Label.setCaption" -- "Binder.forField" 
"Label.setCaption" -- "Binder.validate" 
"GridLayout.addComponent" -- "Link.<init>" 
"GridLayout.addComponent" -- "Link.setId" 
"GridLayout.addComponent" -- "Link.setTargetName" 
"GridLayout.addComponent" -- "TextField.setId" 
"GridLayout.addComponent" -- "TextField.setCaption" 
"GridLayout.addComponent" -- "TextField.setValue" 
"GridLayout.addComponent" -- "TextField.setIcon" 
"GridLayout.addComponent" -- "TextArea.<init>" 
"GridLayout.addComponent" -- "TextArea.setCaption" 
"GridLayout.addComponent" -- "TextArea.setId" 
"GridLayout.addComponent" -- "TextArea.setValue" 
"GridLayout.addComponent" -- "Panel.<init>" 
"GridLayout.addComponent" -- "Panel.setContent" 
"GridLayout.addComponent" -- "Button.setId" 
"GridLayout.addComponent" -- "Button.setDescription" 
"GridLayout.addComponent" -- "Button.setIcon" 
"GridLayout.addComponent" -- "Grid.<init>" 
"GridLayout.addComponent" -- "Grid<Row>.setColumns" 
"GridLayout.addComponent" -- "Row.<init>" 
"GridLayout.addComponent" -- "List<Row>.add" 
"GridLayout.addComponent" -- "Grid<Row>.setItems" 
"GridLayout.addComponent" -- "Panel.setSizeUndefined" 
"GridLayout.addComponent" -- "Binder.<init>" 
"GridLayout.addComponent" -- "Binder.readBean" 
"GridLayout.addComponent" -- "TextField.setWidth" 
"GridLayout.addComponent" -- "Binder.forField" 
"GridLayout.addComponent" -- "Binder.validate" 
"Link.<init>" -- "Link.setId" 
"Link.<init>" -- "Link.setTargetName" 
"Link.<init>" -- "TextField.setId" 
"Link.<init>" -- "TextField.setCaption" 
"Link.<init>" -- "TextField.setValue" 
"Link.<init>" -- "TextField.setIcon" 
"Link.<init>" -- "TextArea.<init>" 
"Link.<init>" -- "TextArea.setCaption" 
"Link.<init>" -- "TextArea.setId" 
"Link.<init>" -- "TextArea.setValue" 
"Link.<init>" -- "Panel.<init>" 
"Link.<init>" -- "Panel.setContent" 
"Link.<init>" -- "Button.setId" 
"Link.<init>" -- "Button.setDescription" 
"Link.<init>" -- "Button.setIcon" 
"Link.<init>" -- "Grid.<init>" 
"Link.<init>" -- "Grid<Row>.setColumns" 
"Link.<init>" -- "Row.<init>" 
"Link.<init>" -- "List<Row>.add" 
"Link.<init>" -- "Grid<Row>.setItems" 
"Link.<init>" -- "Panel.setSizeUndefined" 
"Link.<init>" -- "Binder.<init>" 
"Link.<init>" -- "Binder.readBean" 
"Link.<init>" -- "TextField.setWidth" 
"Link.<init>" -- "Binder.forField" 
"Link.<init>" -- "Binder.validate" 
"Link.setId" -- "Link.setTargetName" 
"Link.setId" -- "TextField.setId" 
"Link.setId" -- "TextField.setCaption" 
"Link.setId" -- "TextField.setValue" 
"Link.setId" -- "TextField.setIcon" 
"Link.setId" -- "TextArea.<init>" 
"Link.setId" -- "TextArea.setCaption" 
"Link.setId" -- "TextArea.setId" 
"Link.setId" -- "TextArea.setValue" 
"Link.setId" -- "Panel.<init>" 
"Link.setId" -- "Panel.setContent" 
"Link.setId" -- "Button.setId" 
"Link.setId" -- "Button.setDescription" 
"Link.setId" -- "Button.setIcon" 
"Link.setId" -- "Grid.<init>" 
"Link.setId" -- "Grid<Row>.setColumns" 
"Link.setId" -- "Row.<init>" 
"Link.setId" -- "List<Row>.add" 
"Link.setId" -- "Grid<Row>.setItems" 
"Link.setId" -- "Panel.setSizeUndefined" 
"Link.setId" -- "Binder.<init>" 
"Link.setId" -- "Binder.readBean" 
"Link.setId" -- "TextField.setWidth" 
"Link.setId" -- "Binder.forField" 
"Link.setId" -- "Binder.validate" 
"Link.setTargetName" -- "TextField.setId" 
"Link.setTargetName" -- "TextField.setCaption" 
"Link.setTargetName" -- "TextField.setValue" 
"Link.setTargetName" -- "TextField.setIcon" 
"Link.setTargetName" -- "TextArea.<init>" 
"Link.setTargetName" -- "TextArea.setCaption" 
"Link.setTargetName" -- "TextArea.setId" 
"Link.setTargetName" -- "TextArea.setValue" 
"Link.setTargetName" -- "Panel.<init>" 
"Link.setTargetName" -- "Panel.setContent" 
"Link.setTargetName" -- "Button.setId" 
"Link.setTargetName" -- "Button.setDescription" 
"Link.setTargetName" -- "Button.setIcon" 
"Link.setTargetName" -- "Grid.<init>" 
"Link.setTargetName" -- "Grid<Row>.setColumns" 
"Link.setTargetName" -- "Row.<init>" 
"Link.setTargetName" -- "List<Row>.add" 
"Link.setTargetName" -- "Grid<Row>.setItems" 
"Link.setTargetName" -- "Panel.setSizeUndefined" 
"Link.setTargetName" -- "Binder.<init>" 
"Link.setTargetName" -- "Binder.readBean" 
"Link.setTargetName" -- "TextField.setWidth" 
"Link.setTargetName" -- "Binder.forField" 
"Link.setTargetName" -- "Binder.validate" 
"TextField.setId" -- "TextField.setCaption" 
"TextField.setId" -- "TextField.setValue" 
"TextField.setId" -- "TextField.setIcon" 
"TextField.setId" -- "TextArea.<init>" 
"TextField.setId" -- "TextArea.setCaption" 
"TextField.setId" -- "TextArea.setId" 
"TextField.setId" -- "TextArea.setValue" 
"TextField.setId" -- "Panel.<init>" 
"TextField.setId" -- "Panel.setContent" 
"TextField.setId" -- "Button.setId" 
"TextField.setId" -- "Button.setDescription" 
"TextField.setId" -- "Button.setIcon" 
"TextField.setId" -- "Grid.<init>" 
"TextField.setId" -- "Grid<Row>.setColumns" 
"TextField.setId" -- "Row.<init>" 
"TextField.setId" -- "List<Row>.add" 
"TextField.setId" -- "Grid<Row>.setItems" 
"TextField.setId" -- "Panel.setSizeUndefined" 
"TextField.setId" -- "Binder.<init>" 
"TextField.setId" -- "Binder.readBean" 
"TextField.setId" -- "TextField.setWidth" 
"TextField.setId" -- "Binder.forField" 
"TextField.setId" -- "Binder.validate" 
"TextField.setCaption" -- "TextField.setValue" 
"TextField.setCaption" -- "TextField.setIcon" 
"TextField.setCaption" -- "TextArea.<init>" 
"TextField.setCaption" -- "TextArea.setCaption" 
"TextField.setCaption" -- "TextArea.setId" 
"TextField.setCaption" -- "TextArea.setValue" 
"TextField.setCaption" -- "Panel.<init>" 
"TextField.setCaption" -- "Panel.setContent" 
"TextField.setCaption" -- "Button.setId" 
"TextField.setCaption" -- "Button.setDescription" 
"TextField.setCaption" -- "Button.setIcon" 
"TextField.setCaption" -- "Grid.<init>" 
"TextField.setCaption" -- "Grid<Row>.setColumns" 
"TextField.setCaption" -- "Row.<init>" 
"TextField.setCaption" -- "List<Row>.add" 
"TextField.setCaption" -- "Grid<Row>.setItems" 
"TextField.setCaption" -- "Panel.setSizeUndefined" 
"TextField.setCaption" -- "Binder.<init>" 
"TextField.setCaption" -- "Binder.readBean" 
"TextField.setCaption" -- "TextField.setWidth" 
"TextField.setCaption" -- "Binder.forField" 
"TextField.setCaption" -- "Binder.validate" 
"TextField.setValue" -- "TextField.setIcon" 
"TextField.setValue" -- "TextArea.<init>" 
"TextField.setValue" -- "TextArea.setCaption" 
"TextField.setValue" -- "TextArea.setId" 
"TextField.setValue" -- "TextArea.setValue" 
"TextField.setValue" -- "Panel.<init>" 
"TextField.setValue" -- "Panel.setContent" 
"TextField.setValue" -- "Button.setId" 
"TextField.setValue" -- "Button.setDescription" 
"TextField.setValue" -- "Button.setIcon" 
"TextField.setValue" -- "Grid.<init>" 
"TextField.setValue" -- "Grid<Row>.setColumns" 
"TextField.setValue" -- "Row.<init>" 
"TextField.setValue" -- "List<Row>.add" 
"TextField.setValue" -- "Grid<Row>.setItems" 
"TextField.setValue" -- "Panel.setSizeUndefined" 
"TextField.setValue" -- "Binder.<init>" 
"TextField.setValue" -- "Binder.readBean" 
"TextField.setValue" -- "TextField.setWidth" 
"TextField.setValue" -- "Binder.forField" 
"TextField.setValue" -- "Binder.validate" 
"TextField.setIcon" -- "TextArea.<init>" 
"TextField.setIcon" -- "TextArea.setCaption" 
"TextField.setIcon" -- "TextArea.setId" 
"TextField.setIcon" -- "TextArea.setValue" 
"TextField.setIcon" -- "Panel.<init>" 
"TextField.setIcon" -- "Panel.setContent" 
"TextField.setIcon" -- "Button.setId" 
"TextField.setIcon" -- "Button.setDescription" 
"TextField.setIcon" -- "Button.setIcon" 
"TextField.setIcon" -- "Grid.<init>" 
"TextField.setIcon" -- "Grid<Row>.setColumns" 
"TextField.setIcon" -- "Row.<init>" 
"TextField.setIcon" -- "List<Row>.add" 
"TextField.setIcon" -- "Grid<Row>.setItems" 
"TextField.setIcon" -- "Panel.setSizeUndefined" 
"TextField.setIcon" -- "Binder.<init>" 
"TextField.setIcon" -- "Binder.readBean" 
"TextField.setIcon" -- "TextField.setWidth" 
"TextField.setIcon" -- "Binder.forField" 
"TextField.setIcon" -- "Binder.validate" 
"TextArea.<init>" -- "TextArea.setCaption" 
"TextArea.<init>" -- "TextArea.setId" 
"TextArea.<init>" -- "TextArea.setValue" 
"TextArea.<init>" -- "Panel.<init>" 
"TextArea.<init>" -- "Panel.setContent" 
"TextArea.<init>" -- "Button.setId" 
"TextArea.<init>" -- "Button.setDescription" 
"TextArea.<init>" -- "Button.setIcon" 
"TextArea.<init>" -- "Grid.<init>" 
"TextArea.<init>" -- "Grid<Row>.setColumns" 
"TextArea.<init>" -- "Row.<init>" 
"TextArea.<init>" -- "List<Row>.add" 
"TextArea.<init>" -- "Grid<Row>.setItems" 
"TextArea.<init>" -- "Panel.setSizeUndefined" 
"TextArea.<init>" -- "Binder.<init>" 
"TextArea.<init>" -- "Binder.readBean" 
"TextArea.<init>" -- "TextField.setWidth" 
"TextArea.<init>" -- "Binder.forField" 
"TextArea.<init>" -- "Binder.validate" 
"TextArea.setCaption" -- "TextArea.setId" 
"TextArea.setCaption" -- "TextArea.setValue" 
"TextArea.setCaption" -- "Panel.<init>" 
"TextArea.setCaption" -- "Panel.setContent" 
"TextArea.setCaption" -- "Button.setId" 
"TextArea.setCaption" -- "Button.setDescription" 
"TextArea.setCaption" -- "Button.setIcon" 
"TextArea.setCaption" -- "Grid.<init>" 
"TextArea.setCaption" -- "Grid<Row>.setColumns" 
"TextArea.setCaption" -- "Row.<init>" 
"TextArea.setCaption" -- "List<Row>.add" 
"TextArea.setCaption" -- "Grid<Row>.setItems" 
"TextArea.setCaption" -- "Panel.setSizeUndefined" 
"TextArea.setCaption" -- "Binder.<init>" 
"TextArea.setCaption" -- "Binder.readBean" 
"TextArea.setCaption" -- "TextField.setWidth" 
"TextArea.setCaption" -- "Binder.forField" 
"TextArea.setCaption" -- "Binder.validate" 
"TextArea.setId" -- "TextArea.setValue" 
"TextArea.setId" -- "Panel.<init>" 
"TextArea.setId" -- "Panel.setContent" 
"TextArea.setId" -- "Button.setId" 
"TextArea.setId" -- "Button.setDescription" 
"TextArea.setId" -- "Button.setIcon" 
"TextArea.setId" -- "Grid.<init>" 
"TextArea.setId" -- "Grid<Row>.setColumns" 
"TextArea.setId" -- "Row.<init>" 
"TextArea.setId" -- "List<Row>.add" 
"TextArea.setId" -- "Grid<Row>.setItems" 
"TextArea.setId" -- "Panel.setSizeUndefined" 
"TextArea.setId" -- "Binder.<init>" 
"TextArea.setId" -- "Binder.readBean" 
"TextArea.setId" -- "TextField.setWidth" 
"TextArea.setId" -- "Binder.forField" 
"TextArea.setId" -- "Binder.validate" 
"TextArea.setValue" -- "Panel.<init>" 
"TextArea.setValue" -- "Panel.setContent" 
"TextArea.setValue" -- "Button.setId" 
"TextArea.setValue" -- "Button.setDescription" 
"TextArea.setValue" -- "Button.setIcon" 
"TextArea.setValue" -- "Grid.<init>" 
"TextArea.setValue" -- "Grid<Row>.setColumns" 
"TextArea.setValue" -- "Row.<init>" 
"TextArea.setValue" -- "List<Row>.add" 
"TextArea.setValue" -- "Grid<Row>.setItems" 
"TextArea.setValue" -- "Panel.setSizeUndefined" 
"TextArea.setValue" -- "Binder.<init>" 
"TextArea.setValue" -- "Binder.readBean" 
"TextArea.setValue" -- "TextField.setWidth" 
"TextArea.setValue" -- "Binder.forField" 
"TextArea.setValue" -- "Binder.validate" 
"Panel.<init>" -- "Panel.setContent" 
"Panel.<init>" -- "Button.setId" 
"Panel.<init>" -- "Button.setDescription" 
"Panel.<init>" -- "Button.setIcon" 
"Panel.<init>" -- "Grid.<init>" 
"Panel.<init>" -- "Grid<Row>.setColumns" 
"Panel.<init>" -- "Row.<init>" 
"Panel.<init>" -- "List<Row>.add" 
"Panel.<init>" -- "Grid<Row>.setItems" 
"Panel.<init>" -- "Panel.setSizeUndefined" 
"Panel.<init>" -- "Binder.<init>" 
"Panel.<init>" -- "Binder.readBean" 
"Panel.<init>" -- "TextField.setWidth" 
"Panel.<init>" -- "Binder.forField" 
"Panel.<init>" -- "Binder.validate" 
"Panel.setContent" -- "Button.setId" 
"Panel.setContent" -- "Button.setDescription" 
"Panel.setContent" -- "Button.setIcon" 
"Panel.setContent" -- "Grid.<init>" 
"Panel.setContent" -- "Grid<Row>.setColumns" 
"Panel.setContent" -- "Row.<init>" 
"Panel.setContent" -- "List<Row>.add" 
"Panel.setContent" -- "Grid<Row>.setItems" 
"Panel.setContent" -- "Panel.setSizeUndefined" 
"Panel.setContent" -- "Binder.<init>" 
"Panel.setContent" -- "Binder.readBean" 
"Panel.setContent" -- "TextField.setWidth" 
"Panel.setContent" -- "Binder.forField" 
"Panel.setContent" -- "Binder.validate" 
"Button.setId" -- "Button.setDescription" 
"Button.setId" -- "Button.setIcon" 
"Button.setId" -- "Grid.<init>" 
"Button.setId" -- "Grid<Row>.setColumns" 
"Button.setId" -- "Row.<init>" 
"Button.setId" -- "List<Row>.add" 
"Button.setId" -- "Grid<Row>.setItems" 
"Button.setId" -- "Panel.setSizeUndefined" 
"Button.setId" -- "Binder.<init>" 
"Button.setId" -- "Binder.readBean" 
"Button.setId" -- "TextField.setWidth" 
"Button.setId" -- "Binder.forField" 
"Button.setId" -- "Binder.validate" 
"Button.setDescription" -- "Button.setIcon" 
"Button.setDescription" -- "Grid.<init>" 
"Button.setDescription" -- "Grid<Row>.setColumns" 
"Button.setDescription" -- "Row.<init>" 
"Button.setDescription" -- "List<Row>.add" 
"Button.setDescription" -- "Grid<Row>.setItems" 
"Button.setDescription" -- "Panel.setSizeUndefined" 
"Button.setDescription" -- "Binder.<init>" 
"Button.setDescription" -- "Binder.readBean" 
"Button.setDescription" -- "TextField.setWidth" 
"Button.setDescription" -- "Binder.forField" 
"Button.setDescription" -- "Binder.validate" 
"Button.setIcon" -- "Grid.<init>" 
"Button.setIcon" -- "Grid<Row>.setColumns" 
"Button.setIcon" -- "Row.<init>" 
"Button.setIcon" -- "List<Row>.add" 
"Button.setIcon" -- "Grid<Row>.setItems" 
"Button.setIcon" -- "Panel.setSizeUndefined" 
"Button.setIcon" -- "Binder.<init>" 
"Button.setIcon" -- "Binder.readBean" 
"Button.setIcon" -- "TextField.setWidth" 
"Button.setIcon" -- "Binder.forField" 
"Button.setIcon" -- "Binder.validate" 
"Grid.<init>" -- "Grid<Row>.setColumns" 
"Grid.<init>" -- "Row.<init>" 
"Grid.<init>" -- "List<Row>.add" 
"Grid.<init>" -- "Grid<Row>.setItems" 
"Grid.<init>" -- "Panel.setSizeUndefined" 
"Grid.<init>" -- "Binder.<init>" 
"Grid.<init>" -- "Binder.readBean" 
"Grid.<init>" -- "TextField.setWidth" 
"Grid.<init>" -- "Binder.forField" 
"Grid.<init>" -- "Binder.validate" 
"Grid.<init>" -- "Grid.setHeight" 
"Grid.<init>" -- "Grid.setColumns" 
"Grid.<init>" -- "Grid.getColumnByKey" 
"Grid.<init>" -- "TextField.setPlaceholder" 
"Grid.<init>" -- "TextField.setValueChangeMode" 
"Grid.<init>" -- "TextField.addValueChangeListener" 
"Grid.<init>" -- "Grid.asSingleSelect" 
"Grid.<init>" -- "TextField.getValue" 
"Grid<Row>.setColumns" -- "Row.<init>" 
"Grid<Row>.setColumns" -- "List<Row>.add" 
"Grid<Row>.setColumns" -- "Grid<Row>.setItems" 
"Grid<Row>.setColumns" -- "Panel.setSizeUndefined" 
"Grid<Row>.setColumns" -- "Binder.<init>" 
"Grid<Row>.setColumns" -- "Binder.readBean" 
"Grid<Row>.setColumns" -- "TextField.setWidth" 
"Grid<Row>.setColumns" -- "Binder.forField" 
"Grid<Row>.setColumns" -- "Binder.validate" 
"Row.<init>" -- "List<Row>.add" 
"Row.<init>" -- "Grid<Row>.setItems" 
"Row.<init>" -- "Panel.setSizeUndefined" 
"Row.<init>" -- "Binder.<init>" 
"Row.<init>" -- "Binder.readBean" 
"Row.<init>" -- "TextField.setWidth" 
"Row.<init>" -- "Binder.forField" 
"Row.<init>" -- "Binder.validate" 
"List<Row>.add" -- "Grid<Row>.setItems" 
"List<Row>.add" -- "Panel.setSizeUndefined" 
"List<Row>.add" -- "Binder.<init>" 
"List<Row>.add" -- "Binder.readBean" 
"List<Row>.add" -- "TextField.setWidth" 
"List<Row>.add" -- "Binder.forField" 
"List<Row>.add" -- "Binder.validate" 
"Grid<Row>.setItems" -- "Panel.setSizeUndefined" 
"Grid<Row>.setItems" -- "Binder.<init>" 
"Grid<Row>.setItems" -- "Binder.readBean" 
"Grid<Row>.setItems" -- "TextField.setWidth" 
"Grid<Row>.setItems" -- "Binder.forField" 
"Grid<Row>.setItems" -- "Binder.validate" 
"Panel.setSizeUndefined" -- "Binder.<init>" 
"Panel.setSizeUndefined" -- "Binder.readBean" 
"Panel.setSizeUndefined" -- "TextField.setWidth" 
"Panel.setSizeUndefined" -- "Binder.forField" 
"Panel.setSizeUndefined" -- "Binder.validate" 
"Binder.<init>" -- "Binder.readBean" 
"Binder.<init>" -- "TextField.setWidth" 
"Binder.<init>" -- "Binder.forField" 
"Binder.<init>" -- "Binder.validate" 
"Binder.readBean" -- "TextField.setWidth" 
"Binder.readBean" -- "Binder.forField" 
"Binder.readBean" -- "Binder.validate" 
"TextField.setWidth" -- "Binder.forField" 
"TextField.setWidth" -- "Binder.validate" 
"Binder.forField" -- "Binder.validate" 
"Grid.setHeight" -- "Grid.setColumns" 
"Grid.setHeight" -- "Grid.getColumnByKey" 
"Grid.setHeight" -- "TextField.setPlaceholder" 
"Grid.setHeight" -- "TextField.setValueChangeMode" 
"Grid.setHeight" -- "TextField.addValueChangeListener" 
"Grid.setHeight" -- "Grid.asSingleSelect" 
"Grid.setHeight" -- "TextField.getValue" 
"Grid.setColumns" -- "Grid.getColumnByKey" 
"Grid.setColumns" -- "TextField.setPlaceholder" 
"Grid.setColumns" -- "TextField.setValueChangeMode" 
"Grid.setColumns" -- "TextField.addValueChangeListener" 
"Grid.setColumns" -- "Grid.asSingleSelect" 
"Grid.setColumns" -- "TextField.getValue" 
"Grid.getColumnByKey" -- "TextField.setPlaceholder" 
"Grid.getColumnByKey" -- "TextField.setValueChangeMode" 
"Grid.getColumnByKey" -- "TextField.addValueChangeListener" 
"Grid.getColumnByKey" -- "Grid.asSingleSelect" 
"Grid.getColumnByKey" -- "TextField.getValue" 
"TextField.setPlaceholder" -- "TextField.setValueChangeMode" 
"TextField.setPlaceholder" -- "TextField.addValueChangeListener" 
"TextField.setPlaceholder" -- "Grid.asSingleSelect" 
"TextField.setPlaceholder" -- "TextField.getValue" 
"TextField.setValueChangeMode" -- "TextField.addValueChangeListener" 
"TextField.setValueChangeMode" -- "Grid.asSingleSelect" 
"TextField.setValueChangeMode" -- "TextField.getValue" 
"TextField.addValueChangeListener" -- "Grid.asSingleSelect" 
"TextField.addValueChangeListener" -- "TextField.getValue" 
"Grid.asSingleSelect" -- "TextField.getValue" 
"Future<Void>.complete" -- "Future<Void>.fail" 
"Result.include" -- "Result.redirectTo" 
"Result.include" -- "Result.use" 
"Result.include" -- "Validator.hasErrors" 
"Result.include" -- "Validator.getErrors" 
"Result.include" -- "Validator.onErrorRedirectTo" 
"Result.redirectTo" -- "Result.use" 
"Result.redirectTo" -- "Validator.hasErrors" 
"Result.redirectTo" -- "Validator.getErrors" 
"Result.redirectTo" -- "Validator.onErrorRedirectTo" 
"Validator.hasErrors" -- "Validator.getErrors" 
"Validator.hasErrors" -- "Validator.onErrorRedirectTo" 
"Validator.getErrors" -- "Validator.onErrorRedirectTo" 
"SocketHandler.<init>" -- "SocketHandler,.setAllowedOrigins" 
"ArrayList<String>.get" -- "Label.setOutputMarkupId" 
"SAXParserFactory.newInstance" -- "SAXParserFactory.newSAXParser" 
"SAXParserFactory.newInstance" -- "SAXParser.parse" 
"SAXParserFactory.newSAXParser" -- "SAXParser.parse" 
"XPath.selectNodes" -- "Element.cast" 
"XPath.selectNodes" -- "Element.addAttribute" 
"XPath.selectNodes" -- "TransformerFactory.newInstance" 
"XPath.selectNodes" -- "TransformerFactory.setFeature" 
"XPath.selectNodes" -- "TransformerFactory.newTransformer" 
"XPath.selectNodes" -- "Transformer.setOutputProperty" 
"XPath.selectNodes" -- "StreamResult.<init>" 
"XPath.selectNodes" -- "Transformer.transform" 
"XPath.selectNodes" -- "Writer.toString" 
"XPath.selectNodes" -- "DocumentBuilderFactory.newInstance" 
"XPath.selectNodes" -- "DocumentBuilderFactory.newDocumentBuilder" 
"XPath.selectNodes" -- "DocumentBuilder.parse" 
"Element.cast" -- "Element.addAttribute" 
"Element.cast" -- "TransformerFactory.newInstance" 
"Element.cast" -- "TransformerFactory.setFeature" 
"Element.cast" -- "TransformerFactory.newTransformer" 
"Element.cast" -- "Transformer.setOutputProperty" 
"Element.cast" -- "StreamResult.<init>" 
"Element.cast" -- "Transformer.transform" 
"Element.cast" -- "Writer.toString" 
"Element.cast" -- "XPathFactory.newInstance" 
"Element.cast" -- "XPath.evaluate" 
"Element.cast" -- "NodeList.cast" 
"Element.cast" -- "NodeList.getLength" 
"Element.cast" -- "NodeList.item" 
"Element.cast" -- "Element.setAttribute" 
"Element.cast" -- "DOMSource.<init>" 
"Element.cast" -- "Document.selectNodes" 
"Element.cast" -- "Element.elementIterator" 
"Element.cast" -- "Iterator<Element>.hasNext" 
"Element.cast" -- "Iterator<Element>.next" 
"Element.cast" -- "Element.getText" 
"Element.cast" -- "Element.setText" 
"Element.addAttribute" -- "TransformerFactory.newInstance" 
"Element.addAttribute" -- "TransformerFactory.setFeature" 
"Element.addAttribute" -- "TransformerFactory.newTransformer" 
"Element.addAttribute" -- "Transformer.setOutputProperty" 
"Element.addAttribute" -- "StreamResult.<init>" 
"Element.addAttribute" -- "Transformer.transform" 
"Element.addAttribute" -- "Writer.toString" 
"Element.addAttribute" -- "Document.addElement" 
"Element.addAttribute" -- "Element.addElement" 
"Element.addAttribute" -- "OutputFormat.createPrettyPrint" 
"TransformerFactory.newInstance" -- "TransformerFactory.setFeature" 
"TransformerFactory.newInstance" -- "TransformerFactory.newTransformer" 
"TransformerFactory.newInstance" -- "Transformer.setOutputProperty" 
"TransformerFactory.newInstance" -- "StreamResult.<init>" 
"TransformerFactory.newInstance" -- "Transformer.transform" 
"TransformerFactory.newInstance" -- "Writer.toString" 
"TransformerFactory.newInstance" -- "XPathFactory.newInstance" 
"TransformerFactory.newInstance" -- "XPath.evaluate" 
"TransformerFactory.newInstance" -- "NodeList.cast" 
"TransformerFactory.newInstance" -- "NodeList.getLength" 
"TransformerFactory.newInstance" -- "NodeList.item" 
"TransformerFactory.newInstance" -- "Element.setAttribute" 
"TransformerFactory.newInstance" -- "DOMSource.<init>" 
"TransformerFactory.newInstance" -- "TransformerFactory.setAttribute" 
"TransformerFactory.setFeature" -- "TransformerFactory.newTransformer" 
"TransformerFactory.setFeature" -- "Transformer.setOutputProperty" 
"TransformerFactory.setFeature" -- "StreamResult.<init>" 
"TransformerFactory.setFeature" -- "Transformer.transform" 
"TransformerFactory.setFeature" -- "Writer.toString" 
"TransformerFactory.setFeature" -- "XPathFactory.newInstance" 
"TransformerFactory.setFeature" -- "XPath.evaluate" 
"TransformerFactory.setFeature" -- "NodeList.cast" 
"TransformerFactory.setFeature" -- "NodeList.getLength" 
"TransformerFactory.setFeature" -- "NodeList.item" 
"TransformerFactory.setFeature" -- "Element.setAttribute" 
"TransformerFactory.setFeature" -- "DOMSource.<init>" 
"TransformerFactory.setFeature" -- "TransformerFactory.setAttribute" 
"TransformerFactory.newTransformer" -- "Transformer.setOutputProperty" 
"TransformerFactory.newTransformer" -- "StreamResult.<init>" 
"TransformerFactory.newTransformer" -- "Transformer.transform" 
"TransformerFactory.newTransformer" -- "Writer.toString" 
"TransformerFactory.newTransformer" -- "XPathFactory.newInstance" 
"TransformerFactory.newTransformer" -- "XPath.evaluate" 
"TransformerFactory.newTransformer" -- "NodeList.cast" 
"TransformerFactory.newTransformer" -- "NodeList.getLength" 
"TransformerFactory.newTransformer" -- "NodeList.item" 
"TransformerFactory.newTransformer" -- "Element.setAttribute" 
"TransformerFactory.newTransformer" -- "DOMSource.<init>" 
"TransformerFactory.newTransformer" -- "TransformerFactory.setAttribute" 
"Transformer.setOutputProperty" -- "StreamResult.<init>" 
"Transformer.setOutputProperty" -- "Transformer.transform" 
"Transformer.setOutputProperty" -- "Writer.toString" 
"Transformer.setOutputProperty" -- "XPathFactory.newInstance" 
"Transformer.setOutputProperty" -- "XPath.evaluate" 
"Transformer.setOutputProperty" -- "NodeList.cast" 
"Transformer.setOutputProperty" -- "NodeList.getLength" 
"Transformer.setOutputProperty" -- "NodeList.item" 
"Transformer.setOutputProperty" -- "Element.setAttribute" 
"Transformer.setOutputProperty" -- "DOMSource.<init>" 
"StreamResult.<init>" -- "Transformer.transform" 
"StreamResult.<init>" -- "Writer.toString" 
"StreamResult.<init>" -- "XPathFactory.newInstance" 
"StreamResult.<init>" -- "XPath.evaluate" 
"StreamResult.<init>" -- "NodeList.cast" 
"StreamResult.<init>" -- "NodeList.getLength" 
"StreamResult.<init>" -- "NodeList.item" 
"StreamResult.<init>" -- "Element.setAttribute" 
"StreamResult.<init>" -- "DOMSource.<init>" 
"StreamResult.<init>" -- "TransformerFactory.setAttribute" 
"Transformer.transform" -- "Writer.toString" 
"Transformer.transform" -- "XPathFactory.newInstance" 
"Transformer.transform" -- "XPath.evaluate" 
"Transformer.transform" -- "NodeList.cast" 
"Transformer.transform" -- "NodeList.getLength" 
"Transformer.transform" -- "NodeList.item" 
"Transformer.transform" -- "Element.setAttribute" 
"Transformer.transform" -- "DOMSource.<init>" 
"Transformer.transform" -- "TransformerFactory.setAttribute" 
"Writer.toString" -- "XPathFactory.newInstance" 
"Writer.toString" -- "XPath.evaluate" 
"Writer.toString" -- "NodeList.cast" 
"Writer.toString" -- "NodeList.getLength" 
"Writer.toString" -- "NodeList.item" 
"Writer.toString" -- "Element.setAttribute" 
"Writer.toString" -- "DOMSource.<init>" 
"XPathFactory.newInstance" -- "XPath.evaluate" 
"XPathFactory.newInstance" -- "NodeList.cast" 
"XPathFactory.newInstance" -- "NodeList.getLength" 
"XPathFactory.newInstance" -- "NodeList.item" 
"XPathFactory.newInstance" -- "Element.setAttribute" 
"XPathFactory.newInstance" -- "DOMSource.<init>" 
"XPathFactory.newInstance" -- "DocumentBuilderFactory.newInstance" 
"XPathFactory.newInstance" -- "DocumentBuilderFactory.newDocumentBuilder" 
"XPathFactory.newInstance" -- "DocumentBuilder.parse" 
"XPathFactory.newInstance" -- "DocumentBuilderFactory.setNamespaceAware" 
"XPathFactory.newInstance" -- "NamespaceContext.<init>" 
"XPathFactory.newInstance" -- "XPath.setNamespaceContext" 
"XPathFactory.newInstance" -- "XPath.compile" 
"XPathFactory.newInstance" -- "Node.cast" 
"XPath.evaluate" -- "NodeList.cast" 
"XPath.evaluate" -- "NodeList.getLength" 
"XPath.evaluate" -- "NodeList.item" 
"XPath.evaluate" -- "Element.setAttribute" 
"XPath.evaluate" -- "DOMSource.<init>" 
"NodeList.cast" -- "NodeList.getLength" 
"NodeList.cast" -- "NodeList.item" 
"NodeList.cast" -- "Element.setAttribute" 
"NodeList.cast" -- "DOMSource.<init>" 
"NodeList.cast" -- "DocumentBuilderFactory.newInstance" 
"NodeList.cast" -- "DocumentBuilderFactory.newDocumentBuilder" 
"NodeList.cast" -- "DocumentBuilder.parse" 
"NodeList.cast" -- "DocumentBuilderFactory.setNamespaceAware" 
"NodeList.cast" -- "NamespaceContext.<init>" 
"NodeList.cast" -- "XPath.setNamespaceContext" 
"NodeList.cast" -- "XPath.compile" 
"NodeList.getLength" -- "NodeList.item" 
"NodeList.getLength" -- "Element.setAttribute" 
"NodeList.getLength" -- "DOMSource.<init>" 
"NodeList.getLength" -- "Node.getChildNodes" 
"NodeList.getLength" -- "Node.getNodeType" 
"NodeList.getLength" -- "Node.getNodeValue" 
"NodeList.getLength" -- "Node.removeChild" 
"NodeList.getLength" -- "Node.setNodeValue" 
"NodeList.item" -- "Element.setAttribute" 
"NodeList.item" -- "DOMSource.<init>" 
"NodeList.item" -- "Node.getChildNodes" 
"NodeList.item" -- "Node.getNodeType" 
"NodeList.item" -- "Node.getNodeValue" 
"NodeList.item" -- "Node.removeChild" 
"NodeList.item" -- "Node.setNodeValue" 
"Element.setAttribute" -- "DOMSource.<init>" 
"Element.setAttribute" -- "DocumentBuilderFactory.newDocumentBuilder" 
"Element.setAttribute" -- "Document.createElement" 
"Element.setAttribute" -- "Element.appendChild" 
"Element.setAttribute" -- "Document.getDocumentElement" 
"Element.setAttribute" -- "Document.appendChild" 
"DOMSource.<init>" -- "TransformerFactory.setAttribute" 
"DocumentBuilderFactory.newInstance" -- "DocumentBuilderFactory.setFeature" 
"DocumentBuilderFactory.newInstance" -- "DocumentBuilderFactory.newDocumentBuilder" 
"DocumentBuilderFactory.newInstance" -- "DocumentBuilder.parse" 
"DocumentBuilderFactory.newInstance" -- "DocumentBuilderFactory.setNamespaceAware" 
"DocumentBuilderFactory.newInstance" -- "NamespaceContext.<init>" 
"DocumentBuilderFactory.newInstance" -- "XPath.setNamespaceContext" 
"DocumentBuilderFactory.newInstance" -- "XPath.compile" 
"DocumentBuilderFactory.newInstance" -- "Node.cast" 
"DocumentBuilderFactory.setFeature" -- "DocumentBuilderFactory.newDocumentBuilder" 
"DocumentBuilderFactory.newDocumentBuilder" -- "DocumentBuilder.parse" 
"DocumentBuilderFactory.newDocumentBuilder" -- "DocumentBuilderFactory.setNamespaceAware" 
"DocumentBuilderFactory.newDocumentBuilder" -- "NamespaceContext.<init>" 
"DocumentBuilderFactory.newDocumentBuilder" -- "XPath.setNamespaceContext" 
"DocumentBuilderFactory.newDocumentBuilder" -- "XPath.compile" 
"DocumentBuilderFactory.newDocumentBuilder" -- "Node.cast" 
"DocumentBuilderFactory.newDocumentBuilder" -- "Document.createElement" 
"DocumentBuilderFactory.newDocumentBuilder" -- "Element.appendChild" 
"DocumentBuilderFactory.newDocumentBuilder" -- "Document.getDocumentElement" 
"DocumentBuilderFactory.newDocumentBuilder" -- "Document.appendChild" 
"Match.xpath" -- "Match.toString" 
"DocumentBuilder.parse" -- "DocumentBuilderFactory.setNamespaceAware" 
"DocumentBuilder.parse" -- "NamespaceContext.<init>" 
"DocumentBuilder.parse" -- "XPath.setNamespaceContext" 
"DocumentBuilder.parse" -- "XPath.compile" 
"DocumentBuilder.parse" -- "Node.cast" 
"Node.getChildNodes" -- "Node.getNodeType" 
"Node.getChildNodes" -- "Node.getNodeValue" 
"Node.getChildNodes" -- "Node.removeChild" 
"Node.getChildNodes" -- "Node.setNodeValue" 
"Node.getNodeType" -- "Node.getNodeValue" 
"Node.getNodeType" -- "Node.removeChild" 
"Node.getNodeType" -- "Node.setNodeValue" 
"Node.getNodeValue" -- "Node.removeChild" 
"Node.getNodeValue" -- "Node.setNodeValue" 
"Node.removeChild" -- "Node.setNodeValue" 
"DocumentBuilderFactory.setNamespaceAware" -- "NamespaceContext.<init>" 
"DocumentBuilderFactory.setNamespaceAware" -- "XPath.setNamespaceContext" 
"DocumentBuilderFactory.setNamespaceAware" -- "XPath.compile" 
"NamespaceContext.<init>" -- "XPath.setNamespaceContext" 
"NamespaceContext.<init>" -- "XPath.compile" 
"XPath.setNamespaceContext" -- "XPath.compile" 
"XPath.compile" -- "Node.cast" 
"Document.addElement" -- "Element.addElement" 
"Document.addElement" -- "OutputFormat.createPrettyPrint" 
"Element.addElement" -- "OutputFormat.createPrettyPrint" 
"Document.selectNodes" -- "Element.elementIterator" 
"Document.selectNodes" -- "Iterator<Element>.hasNext" 
"Document.selectNodes" -- "Iterator<Element>.next" 
"Document.selectNodes" -- "Element.getText" 
"Document.selectNodes" -- "Element.setText" 
"Element.elementIterator" -- "Iterator<Element>.hasNext" 
"Element.elementIterator" -- "Iterator<Element>.next" 
"Element.elementIterator" -- "Element.getText" 
"Element.elementIterator" -- "Element.setText" 
"Iterator<Element>.hasNext" -- "Iterator<Element>.next" 
"Iterator<Element>.hasNext" -- "Element.getText" 
"Iterator<Element>.hasNext" -- "Element.setText" 
"Iterator<Element>.next" -- "Element.getText" 
"Iterator<Element>.next" -- "Element.setText" 
"Element.getText" -- "Element.setText" 
"Document.getRootElement" -- "Element.getChildren" 
"Document.cast" -- "XPathFactory.instance" 
"Document.cast" -- "XPathFactory.compile" 
"Document.cast" -- "XPathExpression<Element>.evaluate" 
"XPathFactory.instance" -- "XPathFactory.compile" 
"XPathFactory.instance" -- "XPathExpression<Element>.evaluate" 
"XPathFactory.compile" -- "XPathExpression<Element>.evaluate" 
"XMLInputFactory.newInstance" -- "XMLInputFactory.createXMLEventReader" 
"XMLInputFactory.newInstance" -- "XMLEventReader.hasNext" 
"XMLInputFactory.newInstance" -- "XMLEventReader.nextEvent" 
"XMLInputFactory.newInstance" -- "XMLEvent.isStartElement" 
"XMLInputFactory.newInstance" -- "XMLEvent.asStartElement" 
"XMLInputFactory.newInstance" -- "StartElement.getName" 
"XMLInputFactory.newInstance" -- "StartElement.getAttributeByName" 
"XMLInputFactory.newInstance" -- "XMLEvent.asCharacters" 
"XMLInputFactory.newInstance" -- "XMLEvent.isEndElement" 
"XMLInputFactory.newInstance" -- "XMLEvent.asEndElement" 
"XMLInputFactory.newInstance" -- "EndElement.getName" 
"XMLInputFactory.newInstance" -- "XMLEvent.getEventType" 
"XMLInputFactory.newInstance" -- "Iterator<Attribute>.hasNext" 
"XMLInputFactory.newInstance" -- "Iterator<Attribute>.next" 
"XMLInputFactory.newInstance" -- "Attribute.getName" 
"XMLInputFactory.newInstance" -- "Attribute.getValue" 
"XMLInputFactory.newInstance" -- "XMLInputFactory.setProperty" 
"XMLInputFactory.newInstance" -- "XMLInputFactory.createXMLStreamReader" 
"XMLInputFactory.newInstance" -- "XMLStreamReader.close" 
"XMLInputFactory.createXMLEventReader" -- "XMLEventReader.hasNext" 
"XMLInputFactory.createXMLEventReader" -- "XMLEventReader.nextEvent" 
"XMLInputFactory.createXMLEventReader" -- "XMLEvent.isStartElement" 
"XMLInputFactory.createXMLEventReader" -- "XMLEvent.asStartElement" 
"XMLInputFactory.createXMLEventReader" -- "StartElement.getName" 
"XMLInputFactory.createXMLEventReader" -- "StartElement.getAttributeByName" 
"XMLInputFactory.createXMLEventReader" -- "XMLEvent.asCharacters" 
"XMLInputFactory.createXMLEventReader" -- "XMLEvent.isEndElement" 
"XMLInputFactory.createXMLEventReader" -- "XMLEvent.asEndElement" 
"XMLInputFactory.createXMLEventReader" -- "EndElement.getName" 
"XMLInputFactory.createXMLEventReader" -- "XMLEvent.getEventType" 
"XMLInputFactory.createXMLEventReader" -- "Iterator<Attribute>.hasNext" 
"XMLInputFactory.createXMLEventReader" -- "Iterator<Attribute>.next" 
"XMLInputFactory.createXMLEventReader" -- "Attribute.getName" 
"XMLInputFactory.createXMLEventReader" -- "Attribute.getValue" 
"XMLEventReader.hasNext" -- "XMLEventReader.nextEvent" 
"XMLEventReader.hasNext" -- "XMLEvent.isStartElement" 
"XMLEventReader.hasNext" -- "XMLEvent.asStartElement" 
"XMLEventReader.hasNext" -- "StartElement.getName" 
"XMLEventReader.hasNext" -- "StartElement.getAttributeByName" 
"XMLEventReader.hasNext" -- "XMLEvent.asCharacters" 
"XMLEventReader.hasNext" -- "XMLEvent.isEndElement" 
"XMLEventReader.hasNext" -- "XMLEvent.asEndElement" 
"XMLEventReader.hasNext" -- "EndElement.getName" 
"XMLEventReader.hasNext" -- "XMLEvent.getEventType" 
"XMLEventReader.hasNext" -- "Iterator<Attribute>.hasNext" 
"XMLEventReader.hasNext" -- "Iterator<Attribute>.next" 
"XMLEventReader.hasNext" -- "Attribute.getName" 
"XMLEventReader.hasNext" -- "Attribute.getValue" 
"XMLEventReader.nextEvent" -- "XMLEvent.isStartElement" 
"XMLEventReader.nextEvent" -- "XMLEvent.asStartElement" 
"XMLEventReader.nextEvent" -- "StartElement.getName" 
"XMLEventReader.nextEvent" -- "StartElement.getAttributeByName" 
"XMLEventReader.nextEvent" -- "XMLEvent.asCharacters" 
"XMLEventReader.nextEvent" -- "XMLEvent.isEndElement" 
"XMLEventReader.nextEvent" -- "XMLEvent.asEndElement" 
"XMLEventReader.nextEvent" -- "EndElement.getName" 
"XMLEventReader.nextEvent" -- "XMLEvent.getEventType" 
"XMLEventReader.nextEvent" -- "Iterator<Attribute>.hasNext" 
"XMLEventReader.nextEvent" -- "Iterator<Attribute>.next" 
"XMLEventReader.nextEvent" -- "Attribute.getName" 
"XMLEventReader.nextEvent" -- "Attribute.getValue" 
"XMLEvent.isStartElement" -- "XMLEvent.asStartElement" 
"XMLEvent.isStartElement" -- "StartElement.getName" 
"XMLEvent.isStartElement" -- "StartElement.getAttributeByName" 
"XMLEvent.isStartElement" -- "XMLEvent.asCharacters" 
"XMLEvent.isStartElement" -- "XMLEvent.isEndElement" 
"XMLEvent.isStartElement" -- "XMLEvent.asEndElement" 
"XMLEvent.isStartElement" -- "EndElement.getName" 
"XMLEvent.asStartElement" -- "StartElement.getName" 
"XMLEvent.asStartElement" -- "StartElement.getAttributeByName" 
"XMLEvent.asStartElement" -- "XMLEvent.asCharacters" 
"XMLEvent.asStartElement" -- "XMLEvent.isEndElement" 
"XMLEvent.asStartElement" -- "XMLEvent.asEndElement" 
"XMLEvent.asStartElement" -- "EndElement.getName" 
"XMLEvent.asStartElement" -- "XMLEvent.getEventType" 
"XMLEvent.asStartElement" -- "Iterator<Attribute>.hasNext" 
"XMLEvent.asStartElement" -- "Iterator<Attribute>.next" 
"XMLEvent.asStartElement" -- "Attribute.getName" 
"XMLEvent.asStartElement" -- "Attribute.getValue" 
"StartElement.getName" -- "StartElement.getAttributeByName" 
"StartElement.getName" -- "XMLEvent.asCharacters" 
"StartElement.getName" -- "XMLEvent.isEndElement" 
"StartElement.getName" -- "XMLEvent.asEndElement" 
"StartElement.getName" -- "EndElement.getName" 
"StartElement.getAttributeByName" -- "XMLEvent.asCharacters" 
"StartElement.getAttributeByName" -- "XMLEvent.isEndElement" 
"StartElement.getAttributeByName" -- "XMLEvent.asEndElement" 
"StartElement.getAttributeByName" -- "EndElement.getName" 
"XMLEvent.asCharacters" -- "XMLEvent.isEndElement" 
"XMLEvent.asCharacters" -- "XMLEvent.asEndElement" 
"XMLEvent.asCharacters" -- "EndElement.getName" 
"XMLEvent.asCharacters" -- "XMLEvent.getEventType" 
"XMLEvent.asCharacters" -- "Iterator<Attribute>.hasNext" 
"XMLEvent.asCharacters" -- "Iterator<Attribute>.next" 
"XMLEvent.asCharacters" -- "Attribute.getName" 
"XMLEvent.asCharacters" -- "Attribute.getValue" 
"XMLEvent.isEndElement" -- "XMLEvent.asEndElement" 
"XMLEvent.isEndElement" -- "EndElement.getName" 
"XMLEvent.asEndElement" -- "EndElement.getName" 
"XMLEvent.asEndElement" -- "XMLEvent.getEventType" 
"XMLEvent.asEndElement" -- "Iterator<Attribute>.hasNext" 
"XMLEvent.asEndElement" -- "Iterator<Attribute>.next" 
"XMLEvent.asEndElement" -- "Attribute.getName" 
"XMLEvent.asEndElement" -- "Attribute.getValue" 
"XMLEvent.getEventType" -- "Iterator<Attribute>.hasNext" 
"XMLEvent.getEventType" -- "Iterator<Attribute>.next" 
"XMLEvent.getEventType" -- "Attribute.getName" 
"XMLEvent.getEventType" -- "Attribute.getValue" 
"Iterator<Attribute>.hasNext" -- "Iterator<Attribute>.next" 
"Iterator<Attribute>.hasNext" -- "Attribute.getName" 
"Iterator<Attribute>.hasNext" -- "Attribute.getValue" 
"Iterator<Attribute>.next" -- "Attribute.getName" 
"Iterator<Attribute>.next" -- "Attribute.getValue" 
"Attribute.getName" -- "Attribute.getValue" 
"Configuration.setDirectoryForTemplateLoading" -- "Configuration.setDefaultEncoding" 
"Configuration.setDirectoryForTemplateLoading" -- "Configuration.setTemplateExceptionHandler" 
"Configuration.setDirectoryForTemplateLoading" -- "Configuration.setWrapUncheckedExceptions" 
"Configuration.setDirectoryForTemplateLoading" -- "Configuration.setFallbackOnNullLoopVariable" 
"Configuration.setDirectoryForTemplateLoading" -- "Configuration.getTemplate" 
"Configuration.setDirectoryForTemplateLoading" -- "Template.process" 
"Configuration.setDefaultEncoding" -- "Configuration.setTemplateExceptionHandler" 
"Configuration.setDefaultEncoding" -- "Configuration.setWrapUncheckedExceptions" 
"Configuration.setDefaultEncoding" -- "Configuration.setFallbackOnNullLoopVariable" 
"Configuration.setDefaultEncoding" -- "Configuration.getTemplate" 
"Configuration.setDefaultEncoding" -- "Template.process" 
"Configuration.setTemplateExceptionHandler" -- "Configuration.setWrapUncheckedExceptions" 
"Configuration.setTemplateExceptionHandler" -- "Configuration.setFallbackOnNullLoopVariable" 
"Configuration.setTemplateExceptionHandler" -- "Configuration.getTemplate" 
"Configuration.setTemplateExceptionHandler" -- "Template.process" 
"Configuration.setWrapUncheckedExceptions" -- "Configuration.setFallbackOnNullLoopVariable" 
"Configuration.setWrapUncheckedExceptions" -- "Configuration.getTemplate" 
"Configuration.setWrapUncheckedExceptions" -- "Template.process" 
"Configuration.setFallbackOnNullLoopVariable" -- "Configuration.getTemplate" 
"Configuration.setFallbackOnNullLoopVariable" -- "Template.process" 
"Configuration.getTemplate" -- "Template.process" 
"Document.createElement" -- "Element.setTextContent" 
"Document.createElement" -- "Element.appendChild" 
"Document.createElement" -- "Document.getDocumentElement" 
"Document.createElement" -- "Document.appendChild" 
"Element.setTextContent" -- "Element.appendChild" 
"Element.appendChild" -- "Document.getDocumentElement" 
"Element.appendChild" -- "Document.appendChild" 
"Document.getDocumentElement" -- "Document.appendChild" 
"XMLStreamReader.hasNext" -- "XMLStreamReader.next" 
"XMLStreamReader.hasNext" -- "XMLStreamReader.isStartElement" 
"XMLStreamReader.hasNext" -- "XMLStreamReader.getLocalName" 
"XMLStreamReader.hasNext" -- "XMLStreamReader.getElementText" 
"XMLStreamReader.next" -- "XMLStreamReader.isStartElement" 
"XMLStreamReader.next" -- "XMLStreamReader.getLocalName" 
"XMLStreamReader.next" -- "XMLStreamReader.getElementText" 
"XMLStreamReader.isStartElement" -- "XMLStreamReader.getLocalName" 
"XMLStreamReader.isStartElement" -- "XMLStreamReader.getElementText" 
"XMLStreamReader.getLocalName" -- "XMLStreamReader.getElementText" 
"XMLOutputFactory.newInstance" -- "XMLStreamWriter.writeDTD" 
"XMLOutputFactory.newInstance" -- "XMLStreamWriter.writeCharacters" 
"XMLOutputFactory.newInstance" -- "XMLStreamWriter.writeStartElement" 
"XMLOutputFactory.newInstance" -- "XMLStreamWriter.writeAttribute" 
"XMLOutputFactory.newInstance" -- "XMLStreamWriter.writeEndElement" 
"XMLOutputFactory.newInstance" -- "XMLStreamWriter.writeEndDocument" 
"XMLOutputFactory.newInstance" -- "XMLStreamWriter.flush" 
"XMLStreamWriter.writeDTD" -- "XMLStreamWriter.writeCharacters" 
"XMLStreamWriter.writeDTD" -- "XMLStreamWriter.writeStartElement" 
"XMLStreamWriter.writeDTD" -- "XMLStreamWriter.writeAttribute" 
"XMLStreamWriter.writeDTD" -- "XMLStreamWriter.writeEndElement" 
"XMLStreamWriter.writeDTD" -- "XMLStreamWriter.writeEndDocument" 
"XMLStreamWriter.writeDTD" -- "XMLStreamWriter.flush" 
"XMLStreamWriter.writeCharacters" -- "XMLStreamWriter.writeStartElement" 
"XMLStreamWriter.writeCharacters" -- "XMLStreamWriter.writeAttribute" 
"XMLStreamWriter.writeCharacters" -- "XMLStreamWriter.writeEndElement" 
"XMLStreamWriter.writeCharacters" -- "XMLStreamWriter.writeEndDocument" 
"XMLStreamWriter.writeCharacters" -- "XMLStreamWriter.flush" 
"XMLStreamWriter.writeStartElement" -- "XMLStreamWriter.writeAttribute" 
"XMLStreamWriter.writeStartElement" -- "XMLStreamWriter.writeEndElement" 
"XMLStreamWriter.writeStartElement" -- "XMLStreamWriter.writeEndDocument" 
"XMLStreamWriter.writeStartElement" -- "XMLStreamWriter.flush" 
"XMLStreamWriter.writeAttribute" -- "XMLStreamWriter.writeEndElement" 
"XMLStreamWriter.writeAttribute" -- "XMLStreamWriter.writeEndDocument" 
"XMLStreamWriter.writeAttribute" -- "XMLStreamWriter.flush" 
"XMLStreamWriter.writeEndElement" -- "XMLStreamWriter.writeEndDocument" 
"XMLStreamWriter.writeEndElement" -- "XMLStreamWriter.flush" 
"XMLStreamWriter.writeEndDocument" -- "XMLStreamWriter.flush" 
"XMLInputFactory.setProperty" -- "XMLInputFactory.createXMLStreamReader" 
"XMLInputFactory.setProperty" -- "XMLStreamReader.close" 
"XMLInputFactory.createXMLStreamReader" -- "XMLStreamReader.close" 
}